{"version":3,"file":"splide-renderer.min.js","sources":["../../src/js/constants/directions.ts","../../src/js/components/Direction/Direction.ts","../../src/js/constants/arrows.ts","../../src/js/constants/project.ts","../../src/js/constants/classes.ts","../../src/js/constants/defaults.ts","../../src/js/constants/i18n.ts","../../../utils/dist/splide-utils.esm.js","../../src/js/renderer/constants/classes.ts","../../src/js/renderer/constants/defaults.ts","../../src/js/renderer/Style/Style.ts","../../src/js/utils/error/assert/assert.ts","../../src/js/renderer/SplideRenderer/SplideRenderer.ts","../../src/js/constants/events.ts","../../src/js/constants/types.ts","../../src/js/components/Arrows/path.ts"],"sourcesContent":["/**\r\n * Enumerates slides from left to right.\r\n */\r\nexport const LTR = 'ltr';\r\n\r\n/**\r\n * Enumerates slides from right to left.\r\n */\r\nexport const RTL = 'rtl';\r\n\r\n/**\r\n * Enumerates slides in a col.\r\n */\r\nexport const TTB = 'ttb';\r\n","import { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from '../../constants/arrows';\r\nimport { RTL, TTB } from '../../constants/directions';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\n\r\n\r\n/**\r\n * The interface for the Direction component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface DirectionComponent extends BaseComponent {\r\n  resolve<R extends string>( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): R;\r\n  orient( value: number ): number;\r\n}\r\n\r\n/**\r\n * The translation map for directions.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const ORIENTATION_MAP = {\r\n  width     : [ 'height' ],\r\n  left      : [ 'top', 'right' ],\r\n  right     : [ 'bottom', 'left' ],\r\n  x         : [ 'y' ],\r\n  X         : [ 'Y' ],\r\n  Y         : [ 'X' ],\r\n  ArrowLeft : [ ARROW_UP, ARROW_RIGHT ],\r\n  ArrowRight: [ ARROW_DOWN, ARROW_LEFT ],\r\n};\r\n\r\n/**\r\n * The component that absorbs the difference among directions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Direction component object.\r\n */\r\nexport function Direction( Splide: Splide, Components: Components, options: Options ): DirectionComponent {\r\n  /**\r\n   * Resolves the provided property name.\r\n   *\r\n   * @param prop      - A property name to translate.\r\n   * @param axisOnly  - Optional. If `ture`, returns the same property for LTR and RTL.\r\n   * @param direction - Optional. Specify the direction. The default value is the `direction` option.\r\n   */\r\n  function resolve<R extends string>( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): R {\r\n    direction = direction || options.direction;\r\n    const index = direction === RTL && ! axisOnly ? 1 : direction === TTB ? 0 : -1;\r\n\r\n    return ORIENTATION_MAP[ prop ] && ORIENTATION_MAP[ prop ][ index ]\r\n      || prop.replace( /width|left|right/i, ( match, offset ) => {\r\n        const replacement = ORIENTATION_MAP[ match.toLowerCase() ][ index ] || match;\r\n        return offset > 0 ? replacement.charAt( 0 ).toUpperCase() + replacement.slice( 1 ) : replacement;\r\n      } );\r\n  }\r\n\r\n  /**\r\n   * Orients the value towards the current direction.\r\n   *\r\n   * @param value - A value to orient.\r\n   *\r\n   * @return The oriented value.\r\n   */\r\n  function orient( value: number ): number {\r\n    return value * ( options.direction === RTL ? 1 : -1 );\r\n  }\r\n\r\n  return {\r\n    resolve,\r\n    orient,\r\n  };\r\n}\r\n","const ARROW = 'Arrow';\r\nexport const ARROW_LEFT  = `${ ARROW }Left`;\r\nexport const ARROW_RIGHT = `${ ARROW }Right`;\r\nexport const ARROW_UP    = `${ ARROW }Up`;\r\nexport const ARROW_DOWN  = `${ ARROW }Down`;","/**\r\n * The project code.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const PROJECT_CODE = 'splide';\r\n\r\n/**\r\n * The data attribute prefix.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DATA_ATTRIBUTE = `data-${ PROJECT_CODE }`;\r\n","import { PROJECT_CODE } from './project';\r\n\r\n/**\r\n * The prefix for classes.\r\n *\r\n * @since 4.1.0\r\n */\r\nconst CLASS_PREFIX = `${ PROJECT_CODE }__`;\r\n\r\n/**\r\n * The prefix for status classes.\r\n *\r\n * @since 4.1.0\r\n */\r\nconst STATUS_CLASS_PREFIX = 'is-';\r\n\r\n/**\r\n * All classes as constants.\r\n */\r\nexport const CLASS_ROOT            = PROJECT_CODE;\r\nexport const CLASS_TRACK           = `${ CLASS_PREFIX }track`;\r\nexport const CLASS_LIST            = `${ CLASS_PREFIX }list`;\r\nexport const CLASS_SLIDE           = `${ CLASS_PREFIX }slide`;\r\nexport const CLASS_CLONE           = `${ CLASS_SLIDE }--clone`;\r\nexport const CLASS_CONTAINER       = `${ CLASS_SLIDE }__container`;\r\nexport const CLASS_ARROWS          = `${ CLASS_PREFIX }arrows`;\r\nexport const CLASS_ARROW           = `${ CLASS_PREFIX }arrow`;\r\nexport const CLASS_ARROW_PREV      = `${ CLASS_ARROW }--prev`;\r\nexport const CLASS_ARROW_NEXT      = `${ CLASS_ARROW }--next`;\r\nexport const CLASS_PAGINATION      = `${ CLASS_PREFIX }pagination`;\r\nexport const CLASS_PAGINATION_PAGE = `${ CLASS_PAGINATION }__page`;\r\nexport const CLASS_PROGRESS        = `${ CLASS_PREFIX }progress`;\r\nexport const CLASS_PROGRESS_BAR    = `${ CLASS_PROGRESS }__bar`;\r\nexport const CLASS_TOGGLE          = `${ CLASS_PREFIX }toggle`;\r\nexport const CLASS_TOGGLE_PLAY     = `${ CLASS_TOGGLE }__play`;\r\nexport const CLASS_TOGGLE_PAUSE    = `${ CLASS_TOGGLE }__pause`;\r\nexport const CLASS_SPINNER         = `${ CLASS_PREFIX }spinner`;\r\nexport const CLASS_SR              = `${ CLASS_PREFIX }sr`;\r\nexport const CLASS_INITIALIZED     = `${ STATUS_CLASS_PREFIX }initialized`;\r\nexport const CLASS_ACTIVE          = `${ STATUS_CLASS_PREFIX }active`;\r\nexport const CLASS_PREV            = `${ STATUS_CLASS_PREFIX }prev`;\r\nexport const CLASS_NEXT            = `${ STATUS_CLASS_PREFIX }next`;\r\nexport const CLASS_VISIBLE         = `${ STATUS_CLASS_PREFIX }visible`;\r\nexport const CLASS_LOADING         = `${ STATUS_CLASS_PREFIX }loading`;\r\nexport const CLASS_FOCUS_IN        = `${ STATUS_CLASS_PREFIX }focus-in`;\r\nexport const CLASS_OVERFLOW        = `${ STATUS_CLASS_PREFIX }overflow`;\r\n\r\n/**\r\n * The array with all status classes except for `is-initialized`.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATUS_CLASSES = [\r\n  CLASS_ACTIVE,\r\n  CLASS_VISIBLE,\r\n  CLASS_PREV,\r\n  CLASS_NEXT,\r\n  CLASS_LOADING,\r\n  CLASS_FOCUS_IN,\r\n  CLASS_OVERFLOW,\r\n];\r\n\r\n/**\r\n * The collection of classes for elements that Splide dynamically creates.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const CLASSES = {\r\n  slide     : CLASS_SLIDE,\r\n  clone     : CLASS_CLONE,\r\n  arrows    : CLASS_ARROWS,\r\n  arrow     : CLASS_ARROW,\r\n  prev      : CLASS_ARROW_PREV,\r\n  next      : CLASS_ARROW_NEXT,\r\n  pagination: CLASS_PAGINATION,\r\n  page      : CLASS_PAGINATION_PAGE,\r\n  spinner   : CLASS_SPINNER,\r\n};\r\n","import { Options } from '../types';\r\nimport { CLASSES } from './classes';\r\nimport { I18N } from './i18n';\r\n\r\n\r\n/**\r\n * The collection of default options.\r\n * Note that this collection does not contain all options.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DEFAULTS: Options = {\r\n  type              : 'slide',\r\n  role              : 'region',\r\n  speed             : 400,\r\n  perPage           : 1,\r\n  cloneStatus       : true,\r\n  arrows            : true,\r\n  pagination        : true,\r\n  paginationKeyboard: true,\r\n  interval          : 5000,\r\n  pauseOnHover      : true,\r\n  pauseOnFocus      : true,\r\n  resetProgress     : true,\r\n  easing            : 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  drag              : true,\r\n  direction         : 'ltr',\r\n  trimSpace         : true,\r\n  focusableNodes    : 'a, button, textarea, input, select, iframe',\r\n  live              : true,\r\n  classes           : CLASSES,\r\n  i18n              : I18N,\r\n  reducedMotion: {\r\n    speed      : 0,\r\n    rewindSpeed: 0,\r\n    autoplay   : 'pause',\r\n  },\r\n};","/**\r\n * The collection of i18n strings.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const I18N = {\r\n  prev      : 'Previous slide',\r\n  next      : 'Next slide',\r\n  first     : 'Go to first slide',\r\n  last      : 'Go to last slide',\r\n  slideX    : 'Go to slide %s',\r\n  pageX     : 'Go to page %s',\r\n  play      : 'Start autoplay',\r\n  pause     : 'Pause autoplay',\r\n  carousel  : 'carousel',\r\n  slide     : 'slide',\r\n  select    : 'Select a slide to show',\r\n  slideLabel: '%s of %s', // [ slide number ] / [ slide size ]\r\n};\r\n","function N(n) {\n  n.length = 0;\n}\nfunction a(n, ...t) {\n  return n.bind(null, ...t);\n}\nconst dn = setTimeout, an = () => {\n};\nfunction P(n) {\n  return requestAnimationFrame(n);\n}\nfunction m(n, t) {\n  return typeof t === n;\n}\nfunction y(n) {\n  return !S(n) && m(\"object\", n);\n}\nconst g = Array.isArray, ln = a(m, \"function\"), p = a(m, \"string\"), mn = a(m, \"boolean\"), Z = a(m, \"undefined\");\nfunction S(n) {\n  return n === null;\n}\nfunction x(n) {\n  try {\n    return n instanceof (n.ownerDocument.defaultView || window).HTMLElement;\n  } catch {\n    return !1;\n  }\n}\nfunction q(n) {\n  return g(n) ? n : [n];\n}\nfunction d(n, t) {\n  q(n).forEach(t);\n}\nfunction G(n, t) {\n  return n.includes(t);\n}\nfunction pn(n, t) {\n  return n.push(...q(t)), n;\n}\nconst D = Array.prototype;\nfunction F(n, t, e) {\n  return D.slice.call(n, t, e);\n}\nfunction hn(n, t) {\n  return D.find.call(n, t);\n}\nfunction I(n, t, e) {\n  n && d(p(t) ? t.split(\" \") : t, (i) => {\n    i && n.classList.toggle(i, e);\n  });\n}\nfunction J(n, t) {\n  I(n, t, !0);\n}\nfunction Q(n, t) {\n  d(t, n.appendChild.bind(n));\n}\nfunction yn(n, t) {\n  d(n, (e) => {\n    const i = (t || e).parentNode;\n    i && i.insertBefore(e, t);\n  });\n}\nfunction W(n, t) {\n  return x(n) && n.matches(t);\n}\nfunction X(n, t) {\n  const e = n ? F(n.children) : [];\n  return t ? e.filter((i) => W(i, t)) : e;\n}\nfunction Y(n, t) {\n  return t ? X(n, t)[0] : n.firstElementChild;\n}\nfunction En(n, t) {\n  return n.closest(t);\n}\nconst v = Object.assign, A = Object.keys;\nfunction L(n, t, e) {\n  return n && (e ? A(n).reverse() : A(n)).forEach((i) => {\n    i !== \"__proto__\" && t(n[i], i);\n  }), n;\n}\nfunction k(n, ...t) {\n  return t.forEach((e) => {\n    L(e, (i, r) => {\n      g(i) ? i = i.slice() : y(i) && (i = k({}, y(n[r]) ? n[r] : {}, i)), n[r] = i;\n    });\n  }), n;\n}\nfunction gn(n, t) {\n  return d(t || A(n), (e) => {\n    delete n[e];\n  }), n;\n}\nfunction U(n, t) {\n  d(n, (e) => {\n    d(t, (i) => {\n      e && e.removeAttribute(i);\n    });\n  });\n}\nfunction M(n, t, e) {\n  y(t) ? L(t, (i, r) => {\n    M(n, r, i);\n  }) : d(n, (i) => {\n    S(e) || e === \"\" ? U(i, t) : i.setAttribute(t, String(e));\n  });\n}\nfunction j(n, t, e) {\n  const i = document.createElement(n);\n  return t && (p(t) ? J(i, t) : M(i, t)), e && Q(e, i), i;\n}\nfunction nn(n, t, e) {\n  if (Z(e))\n    return getComputedStyle(n)[t];\n  S(e) || (n.style[t] = `${e}`);\n}\nfunction An(n, t) {\n  nn(n, \"display\", t);\n}\nfunction $n(n) {\n  x(n) && n.focus({ preventScroll: !0 });\n}\nfunction wn(n, t) {\n  return n.getAttribute(t);\n}\nfunction Cn(n, t) {\n  return !!n && n.classList.contains(t);\n}\nfunction tn(n) {\n  return n.getBoundingClientRect();\n}\nfunction en(n) {\n  d(n, (t) => {\n    t && t.parentNode && t.parentNode.removeChild(t);\n  });\n}\nfunction Sn(n, t) {\n  if (p(t)) {\n    const e = j(\"div\", { style: `width: ${t}; position: absolute;` }, n);\n    t = tn(e).width, en(e);\n  }\n  return t;\n}\nfunction qn(n) {\n  return Y(new DOMParser().parseFromString(n, \"text/html\").body);\n}\nfunction Ln(n, t) {\n  n.preventDefault(), t && (n.stopPropagation(), n.stopImmediatePropagation());\n}\nfunction On(n, t) {\n  return n && n.querySelector(t);\n}\nfunction Tn(n, t) {\n  return t && n ? F(n.querySelectorAll(t)) : [];\n}\nfunction Pn(n, t) {\n  I(n, t, !1);\n}\nfunction Bn(n) {\n  return n.timeStamp;\n}\nfunction Nn(n) {\n  return p(n) ? n : n ? `${n}px` : \"\";\n}\nfunction rn(n) {\n  let t = \"\";\n  return L(n, (e, i) => {\n    t += e || e === 0 ? ` ${i}${e !== !0 ? `=\"${e}\"` : \"\"}` : \"\";\n  }), t.trim();\n}\nfunction _(...n) {\n  return n.reduce((t, e) => `${t} ${g(e) ? _(...e) : e || \"\"}`.trim(), \"\");\n}\nfunction on(n, t) {\n  return t = g(t) || !y(t) ? { class: _(t) } : t, `<${`${n} ${t ? rn(t) : \"\"}`.trim()}>`;\n}\nconst xn = a(on, \"div\"), { min: E, max: $, floor: Dn, ceil: Fn, abs: un, sign: In } = Math;\nfunction Mn(n, t, e) {\n  return un(n - t) < e;\n}\nfunction _n(n, t, e, i) {\n  const r = E(t, e), o = $(t, e);\n  return i ? r < n && n < o : r <= n && n <= o;\n}\nfunction bn(n, t, e) {\n  const i = E(t, e), r = $(t, e);\n  return E($(i, n), r);\n}\nfunction Hn(n) {\n  return n.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\nfunction Kn(n, t) {\n  return d(t, (e) => {\n    n = n.replace(\"%s\", `${e}`);\n  }), n;\n}\nfunction cn(n, t = 2) {\n  return `${n}`.padStart(t, \"0\");\n}\nconst B = {};\nfunction zn(n) {\n  return `${n}${cn(B[n] = (B[n] || 0) + 1)}`;\n}\nfunction w(n, t) {\n  d(n, (e) => {\n    p(e) && e.split(\" \").forEach(t);\n  });\n}\nfunction C(n, t) {\n  const e = [];\n  for (let i = n.length - 1; i >= 0; i--)\n    t(n[i]) && e.push(...n.splice(i, 1));\n  return e;\n}\nfunction b(n) {\n  const t = n || [], e = n ? {} : void 0;\n  function i(o, f, u, c) {\n    w(f, (s) => {\n      o.addEventListener(s, u, c), t.push([o.removeEventListener.bind(o, s, u, c), e]);\n    });\n  }\n  function r() {\n    e ? C(t, (o) => o[1] === e).forEach((o) => {\n      o[0]();\n    }) : (t.forEach((o) => {\n      o[0]();\n    }), N(t));\n  }\n  return {\n    bind: i,\n    create: a(b, t),\n    destroy: r\n  };\n}\nfunction H(n) {\n  const t = n || [], e = n ? {} : void 0;\n  function i(u, c) {\n    w(u, (s) => {\n      t.push([s, c, e]);\n    });\n  }\n  function r(u, c) {\n    w(u, (s) => {\n      C(t, (l) => l[0] === s && (!c || l[1] === c) && l[2] === e);\n    });\n  }\n  function o(u, ...c) {\n    t.slice().forEach((s) => {\n      s[0] === u && s[1](...c);\n    });\n  }\n  function f() {\n    e ? C(t, (u) => u[2] === e) : N(t);\n  }\n  return {\n    on: i,\n    off: r,\n    emit: o,\n    create: a(H, t),\n    destroy: f\n  };\n}\nfunction fn(n = b(), t = H()) {\n  function e() {\n    return fn(n.create(), t.create());\n  }\n  function i() {\n    n.destroy(), t.destroy();\n  }\n  return v({}, n, t, { create: e, destroy: i });\n}\nfunction sn(n, t, e, i) {\n  const { now: r } = Date;\n  let o, f = 0, u, c = !0, s = 0;\n  function l() {\n    if (!c) {\n      if (f = n ? E((r() - o) / n, 1) : 1, e && e(f), f >= 1 && (t(), o = r(), i && ++s >= i))\n        return O();\n      u = P(l);\n    }\n  }\n  function K(h) {\n    h || T(), o = r() - (h ? f * n : 0), c = !1, u = P(l);\n  }\n  function O() {\n    c = !0;\n  }\n  function z() {\n    o = r(), f = 0, e && e(f);\n  }\n  function T() {\n    u && cancelAnimationFrame(u), f = 0, u = 0, c = !0;\n  }\n  function R(h) {\n    n = h;\n  }\n  function V() {\n    return c;\n  }\n  return {\n    start: K,\n    rewind: z,\n    pause: O,\n    cancel: T,\n    set: R,\n    isPaused: V\n  };\n}\nfunction Rn(n) {\n  let t = n;\n  function e(r) {\n    t = r;\n  }\n  function i(r) {\n    return G(q(r), t);\n  }\n  return { set: e, is: i };\n}\nfunction Vn(n, t) {\n  const e = sn(t || 0, n, void 0, 1);\n  return () => {\n    e.isPaused() && e.start();\n  };\n}\nexport {\n  b as EventBinder,\n  H as EventBus,\n  fn as EventInterface,\n  sn as RequestInterval,\n  Rn as State,\n  Vn as Throttle,\n  un as abs,\n  J as addClass,\n  Q as append,\n  a as apply,\n  Mn as approximatelyEqual,\n  v as assign,\n  yn as before,\n  _n as between,\n  rn as buildAttrs,\n  Hn as camelToKebab,\n  Fn as ceil,\n  Y as child,\n  X as children,\n  bn as clamp,\n  _ as classNames,\n  En as closest,\n  j as create,\n  An as display,\n  xn as div,\n  N as empty,\n  hn as find,\n  Dn as floor,\n  $n as focus,\n  d as forEach,\n  L as forOwn,\n  Kn as format,\n  wn as getAttribute,\n  Cn as hasClass,\n  G as includes,\n  g as isArray,\n  mn as isBoolean,\n  ln as isFunction,\n  x as isHTMLElement,\n  S as isNull,\n  y as isObject,\n  p as isString,\n  Z as isUndefined,\n  W as matches,\n  $ as max,\n  Sn as measure,\n  k as merge,\n  E as min,\n  dn as nextTick,\n  an as noop,\n  gn as omit,\n  A as ownKeys,\n  cn as pad,\n  qn as parseHtml,\n  Ln as prevent,\n  pn as push,\n  On as query,\n  Tn as queryAll,\n  P as raf,\n  tn as rect,\n  U as removeAttribute,\n  Pn as removeClass,\n  en as removeNode,\n  M as setAttribute,\n  In as sign,\n  F as slice,\n  nn as style,\n  on as tag,\n  Bn as timeOf,\n  q as toArray,\n  I as toggleClass,\n  zn as uniqueId,\n  Nn as unit\n};\n","export const CLASS_RENDERED = 'is-rendered';\r\n","import { RendererConfig } from '../types/types';\r\n\r\n\r\n/**\r\n * Default options for generating static HTML.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const RENDERER_DEFAULT_CONFIG: RendererConfig = {\r\n  listTag : 'ul',\r\n  slideTag: 'li',\r\n};\r\n","import { Options } from '../../types';\r\nimport { forOwn } from '@splidejs/utils';\r\n\r\n\r\ninterface Styles {\r\n  [ breakpoint: string ]: {\r\n    [ selector: string ]: Record<string, string | number>\r\n  };\r\n}\r\n\r\n/**\r\n * The class for generating styles as a string.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport class Style {\r\n  /**\r\n   * The collection of registered styles categorized by each breakpoint.\r\n   */\r\n  private readonly styles: Styles = {};\r\n\r\n  /**\r\n   * The ID of the slider.\r\n   */\r\n  private readonly id: string;\r\n\r\n  /**\r\n   * Holds options.\r\n   */\r\n  private readonly options: Options;\r\n\r\n  /**\r\n   * The Style constructor.\r\n   *\r\n   * @param id      - A slider ID.\r\n   * @param options - Options.\r\n   */\r\n  constructor( id: string, options: Options ) {\r\n    this.id      = id;\r\n    this.options = options;\r\n  }\r\n\r\n  /**\r\n   * Registers a CSS rule.\r\n   *\r\n   * @param selector - A selector.\r\n   * @param prop\r\n   * @param value\r\n   * @param breakpoint\r\n   */\r\n  rule( selector: string, prop: string, value: string | number, breakpoint?: string ): void {\r\n    breakpoint = breakpoint || 'default';\r\n    const selectors = ( this.styles[ breakpoint ] = this.styles[ breakpoint ] || {} );\r\n    const styles    = ( selectors[ selector ] = selectors[ selector ] || {} );\r\n    styles[ prop ] = value;\r\n  }\r\n\r\n  /**\r\n   * Builds styles as a single string.\r\n   *\r\n   * @return Built styles.\r\n   */\r\n  build(): string {\r\n    let css = '';\r\n\r\n    if ( this.styles.default ) {\r\n      css += this.buildSelectors( this.styles.default );\r\n    }\r\n\r\n    Object.keys( this.styles )\r\n      .sort( ( n, m ) => this.options.mediaQuery === 'min' ? +n - +m : +m - +n )\r\n      .forEach( breakpoint => {\r\n        if ( breakpoint !== 'default' ) {\r\n          css += `@media screen and (max-width: ${ breakpoint }px) {`;\r\n          css += this.buildSelectors( this.styles[ breakpoint ] );\r\n          css += `}`;\r\n        }\r\n      } );\r\n\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Builds styles for each breakpoint.\r\n   *\r\n   * @param selectors - An object with styles.\r\n   *\r\n   * @return Built styles.\r\n   */\r\n  private buildSelectors( selectors: Record<string, Record<string, string | number>> ): string {\r\n    let css = '';\r\n\r\n    forOwn( selectors, ( styles, selector ) => {\r\n      css += `${ `#${ this.id } ${ selector }`.trim() } {`;\r\n\r\n      forOwn( styles, ( value, prop ) => {\r\n        if ( value || value === 0 ) {\r\n          css += `${ prop }: ${ value };`;\r\n        }\r\n      } );\r\n\r\n      css += '}';\r\n    } );\r\n\r\n    return css;\r\n  }\r\n}\r\n","import { PROJECT_CODE } from '../../../constants/project';\r\n\r\n\r\n/**\r\n * Throws an error if the provided condition is falsy.\r\n *\r\n * @param condition - If falsy, an error is thrown.\r\n * @param message   - Optional. A message to display.\r\n */\r\nexport function assert( condition: any, message?: string ): void {\r\n  if ( ! condition ) {\r\n    throw new Error( `[${ PROJECT_CODE }] ${ message || '' }` );\r\n  }\r\n}\r\n","import { PATH, SIZE, XML_NAME_SPACE } from '../../components/Arrows/path';\r\nimport { Direction, DirectionComponent } from '../../components/Direction/Direction';\r\nimport { CLASS_ACTIVE, CLASS_CLONE, CLASS_LIST, CLASS_ROOT, CLASS_SLIDE, CLASS_TRACK } from '../../constants/classes';\r\nimport { DEFAULTS } from '../../constants/defaults';\r\nimport { TTB } from '../../constants/directions';\r\nimport { EVENT_MOUNTED } from '../../constants/events';\r\nimport { LOOP, SLIDE } from '../../constants/types';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { Options } from '../../types';\r\nimport {\r\n  assign,\r\n  camelToKebab,\r\n  child,\r\n  forOwn,\r\n  isObject,\r\n  isString,\r\n  max,\r\n  merge,\r\n  push,\r\n  queryAll,\r\n  removeNode,\r\n  uniqueId,\r\n  unit,\r\n} from '@splidejs/utils';\r\nimport { CLASS_RENDERED } from '../constants/classes';\r\nimport { RENDERER_DEFAULT_CONFIG } from '../constants/defaults';\r\nimport { Style } from '../Style/Style';\r\nimport { RendererConfig, SlideContent } from '../types/types';\r\nimport { assert } from '../../utils';\r\n\r\n\r\n/**\r\n * The class to generate static HTML of the slider for the first view.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport class SplideRenderer {\r\n  /**\r\n   * Removes a style element and clones.\r\n   *\r\n   * @param splide - A Splide instance.\r\n   */\r\n  static clean( splide: Splide ): void {\r\n    const { on } = splide.event;\r\n    const { root } = splide;\r\n    const clones = queryAll( root, `.${ CLASS_CLONE }` );\r\n\r\n    on( EVENT_MOUNTED, () => {\r\n      removeNode( child( root, 'style' ) );\r\n    } );\r\n\r\n    removeNode( clones );\r\n  }\r\n\r\n  /**\r\n   * Holds slide contents.\r\n   */\r\n  private readonly contents: string[] | SlideContent[];\r\n\r\n  /**\r\n   * Stores data of slides.\r\n   */\r\n  private readonly slides: SlideContent[] = [];\r\n\r\n  /**\r\n   * The Direction component.\r\n   */\r\n  private readonly Direction: DirectionComponent;\r\n\r\n  /**\r\n   * Holds the Style instance.\r\n   */\r\n  private readonly Style: Style;\r\n\r\n  /**\r\n   * Holds options.\r\n   */\r\n  private readonly options: Options = {};\r\n\r\n  /**\r\n   * Holds options for this instance.\r\n   */\r\n  private readonly config: RendererConfig;\r\n\r\n  /**\r\n   * The slider ID.\r\n   */\r\n  private readonly id: string;\r\n\r\n  /**\r\n   * An array with options for each breakpoint.\r\n   */\r\n  private readonly breakpoints: [ string, Options ][] = [];\r\n\r\n  /**\r\n   * The SplideRenderer constructor.\r\n   *\r\n   * @param contents - An array with slide contents. Each item must be an HTML or a plain text.\r\n   * @param options  - Optional. Slider options.\r\n   * @param config   - Static default options.\r\n   * @param defaults - Default options for the slider. Pass `Splide.defaults` if you are using it.\r\n   */\r\n  constructor( contents: string[] | SlideContent[], options?: Options, config?: RendererConfig, defaults?: Options ) {\r\n    merge( DEFAULTS, defaults || {} );\r\n    merge( merge( this.options, DEFAULTS ), options || {} );\r\n\r\n    this.contents  = contents;\r\n    this.config    = assign( {}, RENDERER_DEFAULT_CONFIG, config || {} );\r\n    this.id        = this.config.id || uniqueId( 'splide' );\r\n    this.Style     = new Style( this.id, this.options );\r\n    this.Direction = Direction( null, null, this.options );\r\n\r\n    assert( this.contents.length, 'Provide at least 1 content.' );\r\n\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Initializes the instance.\r\n   */\r\n  private init(): void {\r\n    this.parseBreakpoints();\r\n    this.initSlides();\r\n    this.registerRootStyles();\r\n    this.registerTrackStyles();\r\n    this.registerSlideStyles();\r\n    this.registerListStyles();\r\n  }\r\n\r\n  /**\r\n   * Initializes slides.\r\n   */\r\n  private initSlides(): void {\r\n    push( this.slides, this.contents.map( ( content, index ) => {\r\n      content = isString( content ) ? { html: content } : content;\r\n      content.styles = content.styles || {};\r\n      content.attrs  = content.attrs || {};\r\n\r\n      this.cover( content );\r\n\r\n      const classes = `${ this.options.classes.slide } ${ index === 0 ? CLASS_ACTIVE : '' }`;\r\n\r\n      assign( content.attrs, {\r\n        class: `${ classes } ${ content.attrs.class || '' }`.trim(),\r\n        style: this.buildStyles( content.styles ),\r\n      } );\r\n\r\n      return content;\r\n    } ) );\r\n\r\n    if ( this.isLoop() ) {\r\n      this.generateClones( this.slides );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers styles for the root element.\r\n   */\r\n  private registerRootStyles(): void {\r\n    this.breakpoints.forEach( ( [ width, options ] ) => {\r\n      this.Style.rule( ' ', 'max-width', unit( options.width ), width );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Registers styles for the track element.\r\n   */\r\n  private registerTrackStyles(): void {\r\n    const { Style } = this;\r\n    const selector = `.${ CLASS_TRACK }`;\r\n\r\n    this.breakpoints.forEach( ( [ width, options ] ) => {\r\n      Style.rule( selector, this.resolve( 'paddingLeft' ), this.cssPadding( options, false ), width );\r\n      Style.rule( selector, this.resolve( 'paddingRight' ), this.cssPadding( options, true ), width );\r\n      Style.rule( selector, 'height', this.cssTrackHeight( options ), width );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Registers styles for the list element.\r\n   */\r\n  private registerListStyles(): void {\r\n    const { Style } = this;\r\n    const selector = `.${ CLASS_LIST }`;\r\n\r\n    this.breakpoints.forEach( ( [ width, options ] ) => {\r\n      Style.rule( selector, 'transform', this.buildTranslate( options ), width );\r\n\r\n      if ( ! this.cssSlideHeight( options ) ) {\r\n        Style.rule( selector, 'aspect-ratio', this.cssAspectRatio( options ), width );\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Registers styles for slides and clones.\r\n   */\r\n  private registerSlideStyles(): void {\r\n    const { Style } = this;\r\n    const selector = `.${ CLASS_SLIDE }`;\r\n\r\n    this.breakpoints.forEach( ( [ width, options ] ) => {\r\n      Style.rule( selector, 'width', this.cssSlideWidth( options ), width );\r\n      Style.rule( selector, 'height', this.cssSlideHeight( options ) || '100%', width );\r\n      Style.rule( selector, this.resolve( 'marginRight' ), unit( options.gap ) || '0px', width );\r\n      Style.rule( `${ selector } > img`, 'display', options.cover ? 'none' : 'inline', width );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Builds multiple `translateX` for the list element.\r\n   *\r\n   * @param options - Options for each breakpoint.\r\n   *\r\n   * @return A string with multiple translate functions.\r\n   */\r\n  private buildTranslate( options: Options ): string {\r\n    const { resolve, orient } = this.Direction;\r\n    const values = [];\r\n\r\n    values.push( this.cssOffsetClones( options ) );\r\n    values.push( this.cssOffsetGaps( options ) );\r\n\r\n    if ( this.isCenter( options ) ) {\r\n      values.push( this.buildCssValue( orient( -50 ), '%' ) );\r\n      values.push( ...this.cssOffsetCenter( options ) );\r\n    }\r\n\r\n    return values\r\n      .filter( Boolean )\r\n      .map( value => `translate${ resolve( 'X' ) }(${ value })` )\r\n      .join( ' ' );\r\n  }\r\n\r\n  /**\r\n   * Returns offset for the list element.\r\n   * This does not include gaps because it can not be converted into percent.\r\n   *\r\n   * @param options - Options for each breakpoint.\r\n   *\r\n   * @return The offset.\r\n   */\r\n  private cssOffsetClones( options: Options ): string {\r\n    const { resolve, orient } = this.Direction;\r\n    const cloneCount = this.getCloneCount();\r\n\r\n    if ( this.isFixedWidth( options ) ) {\r\n      const { value, unit } = this.parseCssValue( options[ resolve( 'fixedWidth' ) ] );\r\n      return this.buildCssValue( orient( value ) * cloneCount, unit );\r\n    }\r\n\r\n    const percent = 100 * cloneCount / options.perPage;\r\n    return `${ orient( percent ) }%`;\r\n  }\r\n\r\n  /**\r\n   * Returns offset for centering the active slide.\r\n   *\r\n   * Note:\r\n   * ( 100% + gap ) / perPage - gap\r\n   * 100% / perPage + gap / perPage - gap;\r\n   * 50% / perPage + ( gap / perPage - gap ) / 2;\r\n   *\r\n   * @param options - Options for each breakpoint.\r\n   *\r\n   * @return The offset.\r\n   */\r\n  private cssOffsetCenter( options: Options ): string[] {\r\n    const { resolve, orient } = this.Direction;\r\n\r\n    if ( this.isFixedWidth( options ) ) {\r\n      const { value, unit } = this.parseCssValue( options[ resolve( 'fixedWidth' ) ] );\r\n      return [ this.buildCssValue( orient( value / 2 ), unit ) ];\r\n    }\r\n\r\n    const values = [];\r\n    const { perPage, gap } = options;\r\n\r\n    values.push( `${ orient( 50 / perPage ) }%` );\r\n\r\n    if ( gap ) {\r\n      const { value, unit } = this.parseCssValue( gap );\r\n      const gapOffset = ( value / perPage - value ) / 2;\r\n      values.push( this.buildCssValue( orient( gapOffset ), unit ) );\r\n    }\r\n\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Returns offset for gaps.\r\n   *\r\n   * @param options - Options for each breakpoint.\r\n   *\r\n   * @return The offset as `calc()`.\r\n   */\r\n  private cssOffsetGaps( options: Options ): string {\r\n    const cloneCount = this.getCloneCount();\r\n\r\n    if ( cloneCount && options.gap ) {\r\n      const { orient } = this.Direction;\r\n      const { value, unit } = this.parseCssValue( options.gap );\r\n\r\n      if ( this.isFixedWidth( options ) ) {\r\n        return this.buildCssValue( orient( value * cloneCount ), unit );\r\n      }\r\n\r\n      const { perPage } = options;\r\n      const gaps = cloneCount / perPage;\r\n      return this.buildCssValue( orient( gaps * value ), unit );\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Resolves the prop for the current direction and converts it into the Kebab case.\r\n   *\r\n   * @param prop - A property name to resolve.\r\n   *\r\n   * @return A resolved property name in the Kebab case.\r\n   */\r\n  private resolve( prop: string ): string {\r\n    return camelToKebab( this.Direction.resolve( prop ) );\r\n  }\r\n\r\n  /**\r\n   * Returns padding in the CSS format.\r\n   *\r\n   * @param options - Options.\r\n   * @param right   - Determines whether to get padding right or left.\r\n   *\r\n   * @return Padding in the CSS format.\r\n   */\r\n  private cssPadding( options: Options, right: boolean ): string {\r\n    const { padding } = options;\r\n    const prop = this.Direction.resolve( right ? 'right' : 'left', true );\r\n    return padding && unit( padding[ prop ] || ( isObject( padding ) ? 0 : padding ) ) || '0px';\r\n  }\r\n\r\n  /**\r\n   * Returns height of the track element in the CSS format.\r\n   *\r\n   * @param options - Options.\r\n   *\r\n   * @return Height in the CSS format.\r\n   */\r\n  private cssTrackHeight( options: Options ): string {\r\n    let height = '';\r\n\r\n    if ( this.isVertical() ) {\r\n      height = this.cssHeight( options );\r\n      assert( height, '\"height\" is missing.' );\r\n      height = `calc(${ height } - ${ this.cssPadding( options, false ) } - ${ this.cssPadding( options, true ) })`;\r\n    }\r\n\r\n    return height;\r\n  }\r\n\r\n  /**\r\n   * Returns height provided though options in the CSS format.\r\n   *\r\n   * @param options - Options.\r\n   *\r\n   * @return Height in the CSS format.\r\n   */\r\n  private cssHeight( options: Options ): string {\r\n    return unit( options.height );\r\n  }\r\n\r\n  /**\r\n   * Returns width of each slide in the CSS format.\r\n   *\r\n   * @param options - Options.\r\n   *\r\n   * @return Width in the CSS format.\r\n   */\r\n  private cssSlideWidth( options: Options ): string {\r\n    return options.autoWidth\r\n      ? ''\r\n      : unit( options.fixedWidth ) || ( this.isVertical() ? '' : this.cssSlideSize( options ) );\r\n  }\r\n\r\n  /**\r\n   * Returns height of each slide in the CSS format.\r\n   *\r\n   * @param options - Options.\r\n   *\r\n   * @return Height in the CSS format.\r\n   */\r\n  private cssSlideHeight( options: Options ): string {\r\n    return unit( options.fixedHeight )\r\n      || ( this.isVertical()\r\n        ? ( options.autoHeight ? '' : this.cssSlideSize( options ) )\r\n        : this.cssHeight( options )\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Returns width or height of each slide in the CSS format, considering the current direction.\r\n   *\r\n   * @param options - Options.\r\n   *\r\n   * @return Width or height in the CSS format.\r\n   */\r\n  private cssSlideSize( options: Options ): string {\r\n    const gap = unit( options.gap );\r\n    return `calc((100%${ gap && ` + ${ gap }` })/${ options.perPage || 1 }${ gap && ` - ${ gap }` })`;\r\n  }\r\n\r\n  /**\r\n   * Returns the aspectRatio value to simulate the `heightRatio` option.\r\n   *\r\n   * @param options - Options.\r\n   *\r\n   * @return aspectRatio in the CSS format.\r\n   */\r\n  private cssAspectRatio( options: Options ): string {\r\n    const { heightRatio } = options;\r\n    return heightRatio ? `${ 1 / heightRatio }` : '';\r\n  }\r\n\r\n  /**\r\n   * Builds the css value by the provided value and unit.\r\n   *\r\n   * @param value - A value.\r\n   * @param unit  - A CSS unit.\r\n   *\r\n   * @return A built value for a CSS value.\r\n   */\r\n  private buildCssValue( value: number, unit: string ): string {\r\n    return `${ value }${ unit }`;\r\n  }\r\n\r\n  /**\r\n   * Parses the CSS value into number and unit.\r\n   *\r\n   * @param value - A value to parse.\r\n   *\r\n   * @return An object with value and unit.\r\n   */\r\n  private parseCssValue( value: string | number ): { value: number, unit: string } {\r\n    if ( isString( value ) ) {\r\n      const number = parseFloat( value ) || 0;\r\n      const unit   = value.replace( /\\d*(\\.\\d*)?/, '' ) || 'px';\r\n      return { value: number, unit };\r\n    }\r\n\r\n    return { value, unit: 'px' };\r\n  }\r\n\r\n  /**\r\n   * Parses breakpoints and generate options for each breakpoint.\r\n   */\r\n  private parseBreakpoints(): void {\r\n    const { breakpoints } = this.options;\r\n\r\n    this.breakpoints.push( [ 'default', this.options ] );\r\n\r\n    if ( breakpoints ) {\r\n      forOwn( breakpoints, ( options, width ) => {\r\n        this.breakpoints.push( [ width, merge( merge( {}, this.options ), options ) ] );\r\n      } );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if the slide width is fixed or not.\r\n   *\r\n   * @return `true` if the slide width is fixed, or otherwise `false`.\r\n   */\r\n  private isFixedWidth( options: Options ): boolean {\r\n    return !! options[ this.Direction.resolve( 'fixedWidth' ) ];\r\n  }\r\n\r\n  /**\r\n   * Checks if the slider type is loop or not.\r\n   *\r\n   * @return `true` if the slider type is loop, or otherwise `false`.\r\n   */\r\n  private isLoop(): boolean {\r\n    return this.options.type === LOOP;\r\n  }\r\n\r\n  /**\r\n   * Checks if the active slide should be centered or not.\r\n   *\r\n   * @return `true` if the slide should be centered, or otherwise `false`.\r\n   */\r\n  private isCenter( options: Options ): boolean {\r\n    if( options.focus === 'center' ) {\r\n      if ( this.isLoop() ) {\r\n        return true;\r\n      }\r\n\r\n      if ( this.options.type === SLIDE ) {\r\n        return ! this.options.trimSpace;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Checks if the direction is TTB or not.\r\n   *\r\n   * @return `true` if the direction is TTB, or otherwise `false`.\r\n   */\r\n  private isVertical(): boolean {\r\n    return this.options.direction === TTB;\r\n  }\r\n\r\n  /**\r\n   * Builds classes of the root element.\r\n   *\r\n   * @return Classes for the root element as a single string.\r\n   */\r\n  private buildClasses(): string {\r\n    const { options } = this;\r\n\r\n    return [\r\n      CLASS_ROOT,\r\n      `${ CLASS_ROOT }--${ options.type }`,\r\n      `${ CLASS_ROOT }--${ options.direction }`,\r\n      options.drag && `${ CLASS_ROOT }--draggable`,\r\n      options.isNavigation && `${ CLASS_ROOT }--nav`,\r\n      CLASS_ACTIVE,\r\n      ! this.config.hidden && CLASS_RENDERED,\r\n    ].filter( Boolean ).join( ' ' );\r\n  }\r\n\r\n  /**\r\n   * Converts provided attributes into a single string.\r\n   *\r\n   * @param attrs - An object with attributes.\r\n   *\r\n   * @return A built string.\r\n   */\r\n  private buildAttrs( attrs: Record<string, string | number | boolean> ): string {\r\n    let attr = '';\r\n\r\n    forOwn( attrs, ( value, key ) => {\r\n      attr += value ? ` ${ camelToKebab( key ) }=\"${ value }\"` : '';\r\n    } );\r\n\r\n    return attr.trim();\r\n  }\r\n\r\n  /**\r\n   * Converts provided styles into a single string.\r\n   *\r\n   * @param styles - An object with styles.\r\n   *\r\n   * @return A built string.\r\n   */\r\n  private buildStyles( styles: Record<string, string | number> ): string {\r\n    let style = '';\r\n\r\n    forOwn( styles, ( value, key ) => {\r\n      style += ` ${ camelToKebab( key ) }:${ value };`;\r\n    } );\r\n\r\n    return style.trim();\r\n  }\r\n\r\n  /**\r\n   * Generates HTML of slides with inserting provided contents.\r\n   *\r\n   * @return The HTML for all slides and clones.\r\n   */\r\n  private renderSlides(): string {\r\n    const { slideTag: tag } = this.config;\r\n\r\n    return this.slides.map( content => {\r\n      return `<${ tag } ${ this.buildAttrs( content.attrs ) }>${ content.html || '' }</${ tag }>`;\r\n    } ).join( '' );\r\n  }\r\n\r\n  /**\r\n   * Add the `background` style for the cover mode.\r\n   *\r\n   * @param content - A slide content.\r\n   */\r\n  private cover( content: SlideContent ): void {\r\n    const { styles, html = '' } = content;\r\n\r\n    if ( this.options.cover && ! this.options.lazyLoad ) {\r\n      const src = html.match( /<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/ );\r\n\r\n      if ( src && src[ 2 ] ) {\r\n        styles.background = `center/cover no-repeat url('${ src[ 2 ] }')`;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates clones.\r\n   *\r\n   * @param contents - An array with SlideContent objects.\r\n   */\r\n  private generateClones( contents: SlideContent[] ): void {\r\n    const { classes } = this.options;\r\n    const count  = this.getCloneCount();\r\n    const slides = contents.slice();\r\n\r\n    while ( slides.length < count ) {\r\n      push( slides, slides );\r\n    }\r\n\r\n    push( slides.slice( -count ).reverse(), slides.slice( 0, count ) ).forEach( ( content, index ) => {\r\n      const attrs = assign( {}, content.attrs, { class: `${ content.attrs.class } ${ classes.clone }` } );\r\n      const clone = assign( {}, content, { attrs } );\r\n      index < count ? contents.unshift( clone ) : contents.push( clone );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Returns the number of clones to generate.\r\n   *\r\n   * @return A number of clones.\r\n   */\r\n  private getCloneCount(): number {\r\n    if ( this.isLoop() ) {\r\n      const { options } = this;\r\n\r\n      if ( options.clones ) {\r\n        return options.clones;\r\n      }\r\n\r\n      const perPage = max( ...this.breakpoints.map( ( [ , options ] ) => options.perPage ) );\r\n      return perPage * ( ( options.flickMaxPages || 1 ) + 1 );\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Generates arrows and the wrapper element.\r\n   *\r\n   * @return The HTML for arrows.\r\n   */\r\n  private renderArrows(): string {\r\n    let html = '';\r\n\r\n    html += `<div class=\"${ this.options.classes.arrows }\">`;\r\n    html += this.renderArrow( true );\r\n    html += this.renderArrow( false );\r\n    html += `</div>`;\r\n\r\n    return html;\r\n  }\r\n\r\n  /**\r\n   * Generates an arrow HTML.\r\n   * Some attributes are temporary, and Splide changes them after mount.\r\n   *\r\n   * @param prev - Options for each breakpoint.\r\n   *\r\n   * @return The HTML for the prev or next arrow.\r\n   */\r\n  private renderArrow( prev: boolean ): string {\r\n    const { classes, i18n } = this.options;\r\n    const attrs = {\r\n      class    : `${ classes.arrow } ${ prev ? classes.prev : classes.next }`,\r\n      type     : 'button',\r\n      ariaLabel: prev ? i18n.prev : i18n.next,\r\n    };\r\n\r\n    return `<button ${ this.buildAttrs( attrs ) }>`\r\n      +\t`<svg xmlns=\"${ XML_NAME_SPACE }\" viewBox=\"0 0 ${ SIZE } ${ SIZE }\" width=\"${ SIZE }\" height=\"${ SIZE }\">`\r\n      + `<path d=\"${ this.options.arrowPath || PATH }\" />`\r\n      + `</svg>`\r\n      + `</button>`;\r\n  }\r\n\r\n  /**\r\n   * Returns the HTML of the slider.\r\n   *\r\n   * @return The generated HTML.\r\n   */\r\n  html(): string {\r\n    const { rootClass, listTag, arrows, beforeTrack, afterTrack, slider, beforeSlider, afterSlider } = this.config;\r\n\r\n    let html = '';\r\n\r\n    html += `<div id=\"${ this.id }\" class=\"${ this.buildClasses() } ${ rootClass || '' }\">`;\r\n    html += `<style>${ this.Style.build() }</style>`;\r\n\r\n    if ( slider ) {\r\n      html += beforeSlider || '';\r\n      html += `<div class=\"splide__slider\">`;\r\n    }\r\n\r\n    html += beforeTrack || '';\r\n\r\n    if ( arrows ) {\r\n      html += this.renderArrows();\r\n    }\r\n\r\n    html += `<div class=\"splide__track\">`;\r\n    html += `<${ listTag } class=\"splide__list\">`;\r\n\r\n    html += this.renderSlides();\r\n\r\n    html += `</${ listTag }>`;\r\n    html += `</div>`; // .track\r\n\r\n    html += afterTrack || '';\r\n\r\n    if ( slider ) {\r\n      html += `</div>`;\r\n      html += afterSlider || '';\r\n    }\r\n\r\n    html += `</div>`; // .splide\r\n\r\n    return html;\r\n  }\r\n}\r\n","export const EVENT_MOUNTED            = 'mounted';\r\nexport const EVENT_READY              = 'ready';\r\nexport const EVENT_MOVE               = 'move';\r\nexport const EVENT_MOVED              = 'moved';\r\nexport const EVENT_CLICK              = 'click';\r\nexport const EVENT_ACTIVE             = 'active';\r\nexport const EVENT_INACTIVE           = 'inactive';\r\nexport const EVENT_VISIBLE            = 'visible';\r\nexport const EVENT_HIDDEN             = 'hidden';\r\nexport const EVENT_REFRESH            = 'refresh';\r\nexport const EVENT_UPDATED            = 'updated';\r\nexport const EVENT_RESIZE             = 'resize';\r\nexport const EVENT_RESIZED            = 'resized';\r\nexport const EVENT_DRAG               = 'drag';\r\nexport const EVENT_DRAGGING           = 'dragging';\r\nexport const EVENT_DRAGGED            = 'dragged';\r\nexport const EVENT_SCROLL             = 'scroll';\r\nexport const EVENT_SCROLLED           = 'scrolled';\r\nexport const EVENT_OVERFLOW           = 'overflow';\r\nexport const EVENT_DESTROY            = 'destroy';\r\nexport const EVENT_ARROWS_MOUNTED     = 'arrows:mounted';\r\nexport const EVENT_ARROWS_UPDATED     = 'arrows:updated';\r\nexport const EVENT_PAGINATION_MOUNTED = 'pagination:mounted';\r\nexport const EVENT_PAGINATION_UPDATED = 'pagination:updated';\r\nexport const EVENT_NAVIGATION_MOUNTED = 'navigation:mounted';\r\nexport const EVENT_AUTOPLAY_PLAY      = 'autoplay:play';\r\nexport const EVENT_AUTOPLAY_PLAYING   = 'autoplay:playing';\r\nexport const EVENT_AUTOPLAY_PAUSE     = 'autoplay:pause';\r\nexport const EVENT_LAZYLOAD_LOADED    = 'lazyload:loaded';\r\n\r\n/** @internal */\r\nexport const EVENT_SLIDE_KEYDOWN     = 'sk';\r\nexport const EVENT_SHIFTED           = 'sh';\r\nexport const EVENT_END_INDEX_CHANGED = 'ei';\r\n","/**\r\n * The type for the regular slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SLIDE = 'slide';\r\n\r\n/**\r\n * The type for the carousel slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const LOOP = 'loop';\r\n\r\n/**\r\n * The type for the fade slider that can not have multiple slides in a page.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FADE = 'fade';\r\n","/**\r\n * The namespace for SVG elements.\r\n */\r\nexport const XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\r\n\r\n/**\r\n * The arrow path.\r\n */\r\nexport const PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\r\n\r\n/**\r\n * SVG width and height.\r\n */\r\nexport const SIZE = 40;\r\n"],"names":["ORIENTATION_MAP","width","left","right","x","X","Y","ArrowLeft","ArrowRight","Direction","Splide","Components","options","resolve","prop","axisOnly","direction","index","replace","match","offset","replacement","toLowerCase","charAt","toUpperCase","slice","orient","value","PROJECT_CODE","CLASS_PREFIX","CLASS_ROOT","CLASS_SLIDE","CLASS_CLONE","CLASS_ARROW","CLASS_PAGINATION","CLASS_ACTIVE","DEFAULTS","type","role","speed","perPage","cloneStatus","arrows","pagination","paginationKeyboard","interval","pauseOnHover","pauseOnFocus","resetProgress","easing","drag","trimSpace","focusableNodes","live","classes","slide","clone","arrow","prev","next","page","spinner","i18n","first","last","slideX","pageX","play","pause","carousel","select","slideLabel","reducedMotion","rewindSpeed","autoplay","a","n","t","bind","m","y","g","Array","isArray","p","q","pn","push","D","prototype","F","e","call","W","ownerDocument","defaultView","window","HTMLElement","matches","children","filter","i","firstElementChild","v","Object","assign","A","keys","L","reverse","forEach","k","r","en","parentNode","removeChild","Nn","class","_","reduce","trim","let","$","Math","max","Hn","B","RENDERER_DEFAULT_CONFIG","listTag","slideTag","Style","styles","id","constructor","this","rule","selector","breakpoint","selectors","build","css","default","buildSelectors","sort","mediaQuery","forOwn","assert","condition","message","Error","clean","splide","on","event","root","clones","querySelectorAll","removeNode","child","contents","slides","config","breakpoints","defaults","merge","padStart","length","init","parseBreakpoints","initSlides","registerRootStyles","registerTrackStyles","registerSlideStyles","registerListStyles","map","content","isString","html","attrs","cover","style","buildStyles","isLoop","generateClones","unit","cssPadding","cssTrackHeight","buildTranslate","cssSlideHeight","cssAspectRatio","cssSlideWidth","gap","values","cssOffsetClones","cssOffsetGaps","isCenter","buildCssValue","cssOffsetCenter","Boolean","join","percent","cloneCount","getCloneCount","isFixedWidth","parseCssValue","camelToKebab","padding","isObject","height","isVertical","cssHeight","autoWidth","fixedWidth","cssSlideSize","fixedHeight","autoHeight","heightRatio","parseFloat","focus","buildClasses","isNavigation","hidden","buildAttrs","attr","key","renderSlides","tag","lazyLoad","src","background","count","unshift","flickMaxPages","renderArrows","renderArrow","ariaLabel","arrowPath","rootClass","beforeTrack","afterTrack","slider","beforeSlider","afterSlider"],"mappings":"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"}