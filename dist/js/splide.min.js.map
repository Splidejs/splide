{"version":3,"file":"splide.min.js","sources":["../../src/js/constants/media.ts","../../src/js/constants/states.ts","../../src/js/utils/array/empty/empty.ts","../../src/js/utils/arrayLike/slice/slice.ts","../../src/js/utils/function/apply/apply.ts","../../src/js/utils/function/noop/noop.ts","../../src/js/utils/function/nextTick/nextTick.ts","../../src/js/utils/function/raf/raf.ts","../../src/js/utils/type/type.ts","../../src/js/utils/array/toArray/toArray.ts","../../src/js/utils/array/forEach/forEach.ts","../../src/js/utils/array/includes/includes.ts","../../src/js/utils/array/push/push.ts","../../src/js/utils/dom/toggleClass/toggleClass.ts","../../src/js/utils/dom/addClass/addClass.ts","../../src/js/utils/dom/append/append.ts","../../src/js/utils/dom/before/before.ts","../../src/js/utils/dom/matches/matches.ts","../../src/js/utils/dom/children/children.ts","../../src/js/utils/dom/child/child.ts","../../src/js/utils/object/ownKeys/ownKeys.ts","../../src/js/utils/object/forOwn/forOwn.ts","../../src/js/utils/object/assign/assign.ts","../../src/js/utils/object/merge/merge.ts","../../src/js/utils/object/omit/omit.ts","../../src/js/utils/dom/removeAttribute/removeAttribute.ts","../../src/js/utils/dom/setAttribute/setAttribute.ts","../../src/js/utils/dom/create/create.ts","../../src/js/utils/dom/style/style.ts","../../src/js/utils/dom/display/display.ts","../../src/js/utils/dom/focus/focus.ts","../../src/js/utils/dom/getAttribute/getAttribute.ts","../../src/js/utils/dom/hasClass/hasClass.ts","../../src/js/utils/dom/rect/rect.ts","../../src/js/utils/dom/remove/remove.ts","../../src/js/utils/dom/parseHtml/parseHtml.ts","../../src/js/utils/dom/prevent/prevent.ts","../../src/js/utils/dom/query/query.ts","../../src/js/utils/dom/queryAll/queryAll.ts","../../src/js/utils/dom/removeClass/removeClass.ts","../../src/js/utils/dom/timeOf/timeOf.ts","../../src/js/utils/dom/unit/unit.ts","../../src/js/constants/project.ts","../../src/js/utils/error/assert/assert.ts","../../src/js/utils/math/math/math.ts","../../src/js/utils/math/approximatelyEqual/approximatelyEqual.ts","../../src/js/utils/math/between/between.ts","../../src/js/utils/math/clamp/clamp.ts","../../src/js/utils/math/sign/sign.ts","../../src/js/utils/string/format/format.ts","../../src/js/utils/string/pad/pad.ts","../../src/js/utils/string/uniqueId/uniqueId.ts","../../src/js/constructors/EventBinder/EventBinder.ts","../../src/js/constants/events.ts","../../src/js/constructors/EventInterface/EventInterface.ts","../../src/js/constructors/RequestInterval/RequestInterval.ts","../../src/js/constructors/State/State.ts","../../src/js/constants/arrows.ts","../../src/js/constants/directions.ts","../../src/js/components/Direction/Direction.ts","../../src/js/constants/attributes.ts","../../src/js/constants/classes.ts","../../src/js/components/Drag/constants.ts","../../src/js/constants/types.ts","../../src/js/components/Slides/Slide.ts","../../src/js/components/Autoplay/constants.ts","../../src/js/constants/listener-options.ts","../../src/js/utils/dom/normalizeKey/normalizeKey.ts","../../src/js/components/Keyboard/Keyboard.ts","../../src/js/components/LazyLoad/constants.ts","../../src/js/components/Sync/Sync.ts","../../src/js/components/Media/Media.ts","../../src/js/components/Elements/Elements.ts","../../src/js/utils/dom/closest/closest.ts","../../src/js/components/Slides/Slides.ts","../../src/js/components/Layout/Layout.ts","../../src/js/constructors/Throttle/Throttle.ts","../../src/js/components/Clones/Clones.ts","../../src/js/components/Move/Move.ts","../../src/js/components/Controller/Controller.ts","../../src/js/components/Arrows/Arrows.ts","../../src/js/components/Arrows/path.ts","../../src/js/components/Autoplay/Autoplay.ts","../../src/js/components/Cover/Cover.ts","../../src/js/components/Scroll/Scroll.ts","../../src/js/components/Scroll/constants.ts","../../src/js/components/Drag/Drag.ts","../../src/js/components/LazyLoad/LazyLoad.ts","../../src/js/components/Pagination/Pagination.ts","../../src/js/components/Wheel/Wheel.ts","../../src/js/components/Live/Live.ts","../../src/js/constants/defaults.ts","../../src/js/constants/i18n.ts","../../src/js/transitions/Fade/Fade.ts","../../src/js/transitions/Slide/Slide.ts","../../src/js/core/Splide/Splide.ts"],"sourcesContent":["/**\n * Matches when users request reducing non-essential animations.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\n */\nexport const MEDIA_PREFERS_REDUCED_MOTION = '(prefers-reduced-motion: reduce)';","/**\n * Splide has been just created.\n */\nexport const CREATED = 1;\n\n/**\n * Splide has mounted components.\n */\nexport const MOUNTED = 2;\n\n/**\n * Splide is ready.\n */\nexport const IDLE = 3;\n\n/**\n * Splide is moving.\n */\nexport const MOVING = 4;\n\n/**\n * Splide is moving.\n */\nexport const SCROLLING = 5;\n\n/**\n * The user is dragging the slider.\n */\nexport const DRAGGING = 6;\n\n/**\n * Splide has been destroyed.\n */\nexport const DESTROYED = 7;\n\n/**\n * The collection of all states.\n *\n * @since 3.0.0\n */\nexport const STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  SCROLLING,\n  DRAGGING,\n  DESTROYED,\n};\n","/**\n * Empties the array.\n *\n * @param array - A array to empty.\n */\nexport function empty( array: any[] ): void {\n  array.length = 0;\n}\n","/**\n * The slice method for an array-like object.\n *\n * @param arrayLike - An array-like object.\n * @param start     - Optional. A start index.\n * @param end       - Optional. A end index.\n *\n * @return An array with sliced elements.\n */\nexport function slice<T>( arrayLike: ArrayLike<T>, start?: number, end?: number ): T[] {\n  return Array.prototype.slice.call( arrayLike, start, end );\n}\n","import { AnyFunction, ShiftN } from '../../../types';\nimport { slice } from '../../arrayLike';\n\n\n/**\n * Create a function where provided arguments are bound.\n * `this` parameter will be always null.\n *\n * @param func - A function.\n * @param args - Arguments to bind to the function.\n *\n * @return A function where arguments are bound.\n */\nexport function apply<F extends AnyFunction, A extends any[] = any[]>(\n  func: F,\n  ...args: A\n): ( ...args: ShiftN<Parameters<F>, A[\"length\"]> ) => ReturnType<F>;\n\n/**\n * Create a function where provided arguments are bound.\n * `this` parameter will be always null.\n *\n * @param func - A function.\n */\nexport function apply( func: AnyFunction ): any {\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\n  return func.bind( null, ...slice( arguments, 1 ) );\n}\n","/**\n * No operation.\n */\nexport const noop = (): void => {}; // eslint-disable-line no-empty-function, @typescript-eslint/no-empty-function\n","import { AnyFunction } from '../../../types';\n\n\n/**\n * Invokes the callback on the next tick.\n *\n * @param callback - A callback function.\n */\nexport const nextTick: ( callback: AnyFunction ) => ReturnType<typeof setTimeout> = setTimeout;\n","/**\n * The arias of `window.requestAnimationFrame()`.\n */\nexport function raf( func: FrameRequestCallback ): number {\n  return requestAnimationFrame( func );\n}\n","import { AnyFunction } from '../../types';\nimport { apply } from '../function';\n\n\n/**\n * The alias of the type check function.\n *\n * @param type    - A type.\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is the specified type.\n */\nfunction typeOf( type: string, subject: unknown ): boolean {\n  return typeof subject === type;\n}\n\n/**\n * Checks if the given subject is an object or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an object, or otherwise `false`.\n */\nexport function isObject( subject: unknown ): subject is object {\n  return ! isNull( subject ) && typeOf( 'object', subject );\n}\n\n/**\n * Checks if the given subject is an array or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an array, or otherwise `false`.\n */\nexport const isArray: <T>( subject: unknown ) => subject is T[] = Array.isArray;\n\n/**\n * Checks if the given subject is a function or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is a function, or otherwise `false`.\n */\nexport const isFunction = <( subject: unknown ) => subject is AnyFunction>apply( typeOf, 'function' );\n\n/**\n * Checks if the given subject is a string or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is a string, or otherwise `false`.\n */\nexport const isString = <( subject: unknown ) => subject is string>apply( typeOf, 'string' );\n\n/**\n * Checks if the given subject is `undefined` or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is `undefined`, or otherwise `false`.\n */\nexport const isUndefined = <( subject: unknown ) => subject is undefined>apply( typeOf, 'undefined' );\n\n/**\n * Checks if the given subject is `null` or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is `null`, or otherwise `false`.\n */\nexport function isNull( subject: unknown ): subject is null {\n  return subject === null;\n}\n\n/**\n * Checks if the given subject is an HTMLElement instance or not.\n * This method takes into account which `window` the node belongs to.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\n */\nexport function isHTMLElement( subject: unknown ): subject is HTMLElement {\n  try {\n    return subject instanceof ( ( subject as Node ).ownerDocument.defaultView || window ).HTMLElement;\n  } catch ( e ) {\n    return false;\n  }\n}","import { isArray } from '../../type/type';\n\n\n/**\n * Push the provided value to an array if the value is not an array.\n *\n * @param value - A value to push.\n *\n * @return An array containing the value, or the value itself if it is already an array.\n */\nexport function toArray<T>( value: T | T[] ): T[] {\n  return isArray( value ) ? value : [ value ];\n}\n","import { toArray } from '../toArray/toArray';\n\n\n/**\n * The extended `Array#forEach` method that accepts a single value as an argument.\n *\n * @param values   - A value or values to iterate over.\n * @param iteratee - An iteratee function.\n */\nexport function forEach<T>( values: T | T[], iteratee: ( value: T, index: number, array: T[] ) => void ): void {\n  toArray( values ).forEach( iteratee );\n}\n","/**\n * Checks if the array includes the value or not.\n * `Array#includes` is not supported by IE.\n *\n * @param array - An array.\n * @param value - A value to search for.\n *\n * @return `true` if the array includes the value, or otherwise `false`.\n */\nexport function includes<T>( array: T[], value: T ): boolean {\n  return array.indexOf( value ) > -1;\n}\n","import { toArray } from '../toArray/toArray';\n\n\n/**\n * Extended `Array#push()` that accepts an item or an array with items.\n *\n * @param array - An array to push items.\n * @param items - An item or items to push.\n *\n * @return A provided array itself.\n */\nexport function push<T>( array: T[], items: T | T[] ): T[] {\n  array.push( ...toArray( items ) );\n  return array;\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Toggles the provided class or classes by following the `add` boolean.\n *\n * @param elm     - An element whose classes are toggled.\n * @param classes - A class or class names.\n * @param add     - Whether to add or remove a class.\n */\nexport function toggleClass( elm: Element, classes: string | string[], add: boolean ): void {\n  if ( elm ) {\n    forEach( classes, name => {\n      if ( name ) {\n        elm.classList[ add ? 'add' : 'remove' ]( name );\n      }\n    } );\n  }\n}\n","import { isString } from '../../type/type';\nimport { toggleClass } from '../toggleClass/toggleClass';\n\n\n/**\n * Adds classes to the element.\n *\n * @param elm     - An element to add classes to.\n * @param classes - Classes to add.\n */\nexport function addClass( elm: Element, classes: string | string[] ): void {\n  toggleClass( elm, isString( classes ) ? classes.split( ' ' ) : classes, true );\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Appends children to the parent element.\n *\n * @param parent   - A parent element.\n * @param children - A child or children to append to the parent.\n */\nexport function append( parent: Element, children: Node | Node[] ): void {\n  forEach( children, parent.appendChild.bind( parent ) );\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Inserts a node or nodes before the specified reference node.\n *\n * @param nodes - A node or nodes to insert.\n * @param ref   - A reference node.\n */\nexport function before( nodes: Node | Node[], ref: Node | null ): void {\n  forEach( nodes, node => {\n    const parent = ( ref || node ).parentNode;\n\n    if ( parent ) {\n      parent.insertBefore( node, ref );\n    }\n  } );\n}\n","import { isHTMLElement } from '../../type/type';\n\n\n/**\n * Checks if the element can be selected by the provided selector or not.\n *\n * @param elm      - An element to check.\n * @param selector - A selector to test.\n *\n * @return `true` if the selector matches the element, or otherwise `false`.\n */\nexport function matches( elm: Element | EventTarget, selector: string ): boolean {\n  return isHTMLElement( elm ) && ( elm[ 'msMatchesSelector' ] || elm.matches ).call( elm, selector );\n}\n","import { slice } from '../../arrayLike';\nimport { matches } from '../matches/matches';\n\n\n/**\n * Finds children that has the specified tag or class name.\n *\n * @param parent   - A parent element.\n * @param selector - Optional. A selector to filter children.\n *\n * @return An array with filtered children.\n */\nexport function children<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E[] {\n  const children = parent ? slice( parent.children ) as E[] : [];\n  return selector ? children.filter( child => matches( child, selector ) ) : children;\n}\n","import { children } from '../children/children';\n\n\n/**\n * Returns a child element that matches the specified tag or class name.\n *\n * @param parent   - A parent element.\n * @param selector - A selector to filter children.\n *\n * @return A matched child element if available, or otherwise `undefined`.\n */\nexport function child<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E | undefined {\n  return selector ? children<E>( parent, selector )[ 0 ] : parent.firstElementChild as E;\n}\n","/**\n * An alias of `Object.keys()`\n */\nexport const ownKeys = Object.keys;","import { ownKeys } from '../ownKeys/ownKeys';\n\n\n/**\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\n *\n * @param object   - An object to iterate over.\n * @param iteratee - An iteratee function that takes `value` and `key` as arguments.\n * @param right    - If `true`, the method iterates over the object from the end like `forEachRight()`.\n *\n * @return A provided object itself.\n */\nexport function forOwn<T extends object>(\n  object: T,\n  iteratee: ( value: T[ keyof T ], key: string ) => boolean | void,\n  right?: boolean\n): T {\n  if ( object ) {\n    ( right ? ownKeys( object ).reverse() : ownKeys( object ) ).forEach( key => {\n      key !== '__proto__' && iteratee( object[ key ], key );\n    } );\n  }\n\n  return object;\n}\n","import { Cast, Head, Push, Resolve, Shift } from '../../../types';\nimport { slice } from '../../arrayLike';\nimport { forOwn } from '../forOwn/forOwn';\n\n\n/**\n * Assigns U to T.\n *\n * @typeParam T - An object to assign to.\n * @typeParam U - An object to assign.\n *\n * @return An assigned object type.\n */\nexport type Assign<T, U> = Omit<T, keyof U> & U;\n\n/**\n * Recursively assigns U[] to T.\n *\n * @typeParam T - An object to assign to.\n * @typeParam U - A tuple contains objects.\n *\n * @return An assigned object type.\n */\nexport type Assigned<T extends object, U extends object[], N extends number, C extends any[] = []> = {\n  0: T,\n  1: Assigned<Assign<T, Head<U>>, Shift<U>, N, Push<C>>,\n}[ C['length'] extends N ? 0 : 1 ] extends infer A ? Cast<A, any> : never;\n\nexport function assign<T extends object>( object: T ): T;\n\nexport function assign<T extends object, U extends object[]>(\n  object: T,\n  ...sources: U\n): Resolve<Assigned<T, U, U['length']>>\n\n/**\n * Assigns all own enumerable properties of all source objects to the provided object.\n *\n * @param object - An object to assign properties to.\n *\n * @return An object assigned properties of the sources to.\n */\nexport function assign<T extends object>( object: T ): any {\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\n  slice( arguments, 1 ).forEach( source => {\n    forOwn( source, ( value, key ) => {\n      object[ key ] = source[ key ];\n    } );\n  } );\n\n  return object;\n}\n","import { Cast, Head, Push, Resolve, Shift } from '../../../types';\nimport { slice } from '../../arrayLike';\nimport { isArray, isObject } from '../../type/type';\nimport { forOwn } from '../forOwn/forOwn';\n\n\n/**\n * Merges U to T.\n *\n * @typeParam T - An object to merge U into.\n * @typeParam U - An object to merge properties from.\n *\n * @return A merged object type.\n */\nexport type Merge<T extends object, U extends object> = Omit<T, keyof U> & {\n  [ K in ( keyof T & keyof U ) ]: U[ K ] extends object\n    ? U[ K ] extends any[]\n      ? U[ K ]\n      : T[ K ] extends object\n        ? Merge<T[ K ], U[ K ]> extends infer A ? Resolve<Cast<A, object>> : never\n        : U[ K ]\n    : U[ K ];\n} & Omit<U, keyof T>;\n\n/**\n * Recursively merges U[] to T.\n *\n * @typeParam T - An object to assign to.\n * @typeParam U - A tuple contains objects.\n *\n * @return An assigned object type.\n */\nexport type Merged<T extends object, U extends object[], N extends number, C extends any[] = []> = {\n  0: T,\n  1: Merged<Merge<T, Head<U>>, Shift<U>, N, Push<C>>,\n}[ C['length'] extends N ? 0 : 1 ] extends infer A ? Cast<A, any> : never;\n\nexport function merge<T extends object>( object: T ): T;\n\nexport function merge<T extends object, U extends object[]>(\n  object: T,\n  ...sources: U\n): Resolve<Merged<T, U, U['length']>>\n\n/**\n * Recursively merges source properties to the object.\n * Be aware that this method does not merge arrays. They are just duplicated by `slice()`.\n *\n * @param object - An object to merge properties to.\n *\n * @return A new object with merged properties.\n */\nexport function merge<T extends object>( object: T ): any {\n  // eslint-disable-next-line prefer-rest-params\n  slice( arguments, 1 ).forEach( source => {\n    forOwn( source, ( value, key ) => {\n      if ( isArray( value ) ) {\n        object[ key ] = value.slice();\n      } else if ( isObject( value ) ) {\n        object[ key ] = merge( {}, isObject( object[ key ] ) ? object[ key ] : {}, value );\n      } else {\n        object[ key ] = value;\n      }\n    } );\n  } );\n\n  return object;\n}\n","import { forEach } from '../../array';\nimport { ownKeys } from '../ownKeys/ownKeys';\n\n\n/**\n * Deletes specified own keys from the object.\n *\n * @param object - An object.\n * @param keys   - A key or keys to delete. If not specified, all own enumerable keys will be deleted.\n */\nexport function omit( object: object, keys?: string | string[] ): void {\n  forEach( keys || ownKeys( object ), key => {\n    delete object[ key ];\n  } );\n}","import { forEach } from '../../array';\n\n\n/**\n * Removes attributes from the element.\n *\n * @param elms  - An element or elements.\n * @param attrs - An attribute or attributes to remove.\n */\nexport function removeAttribute( elms: Element | Element[], attrs: string | string[] ): void {\n  forEach( elms, elm => {\n    forEach( attrs, attr => {\n      elm && elm.removeAttribute( attr );\n    } );\n  } );\n}\n","import { forEach } from '../../array';\nimport { forOwn } from '../../object';\nimport { isNull, isObject } from '../../type/type';\nimport { removeAttribute } from '../removeAttribute/removeAttribute';\n\n\nexport function setAttribute( elms: Element | Element[], attr: string, value: string | number | boolean ): void;\nexport function setAttribute( elms: Element | Element[], attrs: Record<string, string | number | boolean> ): void;\n\n/**\n * Sets attribute/attributes to the element or elements.\n * If the value is `null` or an empty string, the attribute will be removed.\n *\n * @param elms  - An element or an array with elements.\n * @param attrs - An attribute name of an object with pairs of a name and a value.\n * @param value - A value to set.\n */\nexport function setAttribute(\n  elms: Element | Element[],\n  attrs: string | Record<string, string | number | boolean>,\n  value?: string | number | boolean\n): void {\n  if ( isObject( attrs ) ) {\n    forOwn( attrs, ( value, name ) => {\n      setAttribute( elms, name, value );\n    } );\n  } else {\n    forEach( elms, elm => {\n      isNull( value ) || value === '' ? removeAttribute( elm, attrs ) : elm.setAttribute( attrs, String( value ) );\n    } );\n  }\n}\n","import { isString } from '../../type/type';\nimport { addClass } from '../addClass/addClass';\nimport { append } from '../append/append';\nimport { setAttribute } from '../setAttribute/setAttribute';\n\n\nexport function create<K extends keyof HTMLElementTagNameMap>(\n  tag: K,\n  attrs?: Record<string, string | number | boolean> | string,\n  parent?: HTMLElement\n): HTMLElementTagNameMap[ K ];\n\nexport function create(\n  tag: string,\n  attrs?: Record<string, string | number | boolean> | string,\n  parent?: HTMLElement\n): HTMLElement;\n\n/**\n * Creates a HTML element.\n *\n * @param tag    - A tag name.\n * @param attrs  - Optional. An object with attributes to apply the created element to, or a string with classes.\n * @param parent - Optional. A parent element where the created element is appended.\n */\nexport function create<K extends keyof HTMLElementTagNameMap>(\n  tag: K,\n  attrs?: Record<string, string | number | boolean> | string,\n  parent?: HTMLElement\n): HTMLElementTagNameMap[ K ] {\n  const elm = document.createElement( tag );\n\n  if ( attrs ) {\n    isString( attrs ) ? addClass( elm, attrs ) : setAttribute( elm, attrs );\n  }\n\n  parent && append( parent, elm );\n\n  return elm;\n}\n","import { isNull, isUndefined } from '../../type/type';\n\n\nexport function style<K extends keyof CSSStyleDeclaration>(\n  elm: HTMLElement,\n  prop: K,\n): CSSStyleDeclaration[ K ];\n\nexport function style(\n  elm: HTMLElement,\n  prop: string,\n): string;\n\nexport function style(\n  elm: HTMLElement,\n  prop: string,\n  value: string | number\n): void;\n\n\n/**\n * Applies inline styles to the provided element by an object literal.\n *\n * @param elm   - An element to apply styles to.\n * @param prop  - An object literal with styles or a property name.\n * @param value - A value to set.\n */\nexport function style(\n  elm: HTMLElement,\n  prop: string,\n  value?: string | number\n): string | void {\n  if ( isUndefined( value ) ) {\n    return getComputedStyle( elm )[ prop ];\n  }\n\n  if ( ! isNull( value ) ) {\n    elm.style[ prop ] = `${ value }`;\n  }\n}\n","import { style } from '../style/style';\n\n\n/**\n * Sets the `display` CSS value to the element.\n *\n * @param elm     - An element to set a new value to.\n * @param display - A new `display` value.\n */\nexport function display( elm: HTMLElement, display: string ): void {\n  style( elm, 'display', display );\n}\n","/**\n * Focuses the provided element without scrolling the ascendant element.\n *\n * @param elm - An element to focus.\n */\nexport function focus( elm: HTMLElement ): void {\n  elm[ 'setActive' ] && elm[ 'setActive' ]() || elm.focus( { preventScroll: true } );\n}\n","/**\n * Returns the specified attribute value.\n *\n * @param elm  - An element.\n * @param attr - An attribute to get.\n */\nexport function getAttribute( elm: Element, attr: string ): string | null {\n  return elm.getAttribute( attr );\n}\n","/**\n * Checks if the element contains the specified class or not.\n *\n * @param elm       - An element to check.\n * @param className - A class name that may be contained by the element.\n *\n * @return `true` if the element contains the class, or otherwise `false`.\n */\nexport function hasClass( elm: Element, className: string ): boolean {\n  return elm && elm.classList.contains( className );\n}\n","/**\n * Returns a DOMRect object of the provided element.\n *\n * @param target - An element.\n */\nexport function rect( target: Element ): DOMRect {\n  return target.getBoundingClientRect();\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Removes the provided node from its parent.\n *\n * @param nodes - A node or nodes to remove.\n */\nexport function remove( nodes: Node | Node[] ): void {\n  forEach( nodes, node => {\n    if ( node && node.parentNode ) {\n      node.parentNode.removeChild( node );\n    }\n  } );\n}\n","import { child } from '../child/child';\n\n\n/**\n * Parses the provided HTML string and returns the first element.\n *\n * @param html - An HTML string to parse.\n *\n * @return An Element on success, or otherwise `undefined`.\n */\nexport function parseHtml<E extends HTMLElement>( html: string ): E | undefined {\n  return child<E>( new DOMParser().parseFromString( html, 'text/html' ).body );\n}\n","/**\n * Call the `preventDefault()` of the provided event.\n *\n * @param e               - An Event object.\n * @param stopPropagation - Optional. Whether to stop the event propagation or not.\n */\nexport function prevent( e: Event, stopPropagation?: boolean ): void {\n  e.preventDefault();\n\n  if ( stopPropagation ) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n","/**\n * Returns an element that matches the provided selector.\n *\n * @param parent   - A parent element to start searching from.\n * @param selector - A selector to query.\n *\n * @return A found element or `null`.\n */\nexport function query<E extends Element = Element>( parent: Element | Document, selector: string ): E | null {\n  return parent && parent.querySelector( selector );\n}\n","import { slice } from '../../arrayLike';\n\n\n/**\n * Returns elements that match the provided selector.\n *\n * @param parent   - A parent element to start searching from.\n * @param selector - A selector to query.\n *\n * @return An array with matched elements.\n */\nexport function queryAll<E extends Element = Element>( parent: Element | Document, selector?: string ): E[] {\n  return selector ? slice<E>( parent.querySelectorAll( selector ) ) : [];\n}\n","import { toggleClass } from '../toggleClass/toggleClass';\n\n\n/**\n * Removes classes from the element.\n *\n * @param elm     - An element to remove classes from.\n * @param classes - Classes to remove.\n */\nexport function removeClass( elm: Element, classes: string | string[] ): void {\n  toggleClass( elm, classes, false );\n}\n","/**\n * Extracts the timestamp from the event object.\n *\n * @param e - An Event object.\n */\nexport function timeOf( e: Event ): number {\n  return e.timeStamp;\n}","import { isString } from '../../type/type';\n\n\n/**\n * Appends `px` to the provided number.\n * If the value is already string, just returns it.\n *\n * @param value - A value to append `px` to.\n *\n * @return A string with the CSS unit.\n */\nexport function unit( value: number | string ): string {\n  return isString( value ) ? value : value ? `${ value }px` : '';\n}\n","/**\n * The project code.\n *\n * @since 3.0.0\n */\nexport const PROJECT_CODE = 'splide';\n\n/**\n * The data attribute prefix.\n *\n * @since 3.0.0\n */\nexport const DATA_ATTRIBUTE = `data-${ PROJECT_CODE }`;\n","import { PROJECT_CODE } from '../../../constants/project';\n\n\n/**\n * Throws an error if the provided condition is falsy.\n *\n * @param condition - If falsy, an error is thrown.\n * @param message   - Optional. A message to display.\n */\nexport function assert( condition: any, message?: string ): void {\n  if ( ! condition ) {\n    throw new Error( `[${ PROJECT_CODE }] ${ message || '' }` );\n  }\n}\n","export const { min, max, floor, ceil, abs } = Math;\n","import { abs } from '../math/math';\n\n\n/**\n * Checks if the provided 2 numbers are approximately equal or not.\n *\n * @param x       - A number.\n * @param y       - Another number to compare.\n * @param epsilon - An accuracy that defines the approximation.\n *\n * @return `true` if 2 numbers are considered to be equal, or otherwise `false`.\n */\nexport function approximatelyEqual( x: number, y: number, epsilon: number ): boolean {\n  return abs( x - y ) < epsilon;\n}\n","import { max, min } from '../math/math';\n\n\n/**\n * Checks if the subject number is between `x` and `y`.\n *\n * @param number    - A subject number to check.\n * @param x         - A min or max number.\n * @param y         - A max or min number.\n * @param exclusive - Optional. Whether to exclude `x` or `y`.\n */\nexport function between( number: number, x: number, y: number, exclusive?: boolean ): boolean {\n  const minimum = min( x, y );\n  const maximum = max( x, y );\n  return exclusive\n    ? minimum < number && number < maximum\n    : minimum <= number && number <= maximum;\n}\n","import { max, min } from '../math/math';\n\n\n/**\n * Clamps a number.\n *\n * @param number - A subject number to check.\n * @param x      - A min or max number.\n * @param y      - A min or max number.\n *\n * @return A clamped number.\n */\nexport function clamp( number: number, x: number, y: number ): number {\n  const minimum = min( x, y );\n  const maximum = max( x, y );\n  return min( max( minimum, number ), maximum );\n}\n","/**\n * Returns the sign of the provided number.\n *\n * @param x - A number.\n *\n * @return `1` for positive numbers, `-1` for negative numbers, or `0` for `0`.\n */\nexport function sign( x: number ): number {\n  return +( x > 0 ) - +( x < 0 );\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Formats a string.\n *\n * @param string       - A string to format.\n * @param replacements - A replacement or replacements.\n *\n * @return A formatted string.\n */\nexport function format( string: string, replacements: string | number | Array<string | number> ): string {\n  forEach( replacements, replacement => {\n    string = string.replace( '%s', `${ replacement }` );\n  } );\n\n  return string;\n}\n","/**\n * Pads the number with 0.\n *\n * @param number - A number to pad.\n *\n * @return string - Padded number.\n */\nexport function pad( number: number ): string {\n  return number < 10 ? `0${ number }` : `${ number }`;\n}\n","import { pad } from '../pad/pad';\n\n\n/**\n * Stores unique IDs.\n *\n * @since 3.0.0\n */\nconst ids: Record<string, number> = {};\n\n/**\n * Returns a sequential unique ID as \"{ prefix }-{ number }\".\n *\n * @param prefix - A prefix for the ID.\n */\nexport function uniqueId( prefix: string ): string {\n  return `${ prefix }${ pad( ( ids[ prefix ] = ( ids[ prefix ] || 0 ) + 1 ) ) }`;\n}\n","import { AnyFunction } from '../../types';\nimport { empty, forEach } from '../../utils';\n\n\n/**\n * The type for an EventTarget or an array with EventTarget objects.\n *\n * @since 4.0.0\n */\ntype EventTargets = EventTarget | EventTarget[];\n\n/**\n * The interface for the EventBinder object.\n *\n * @since 3.0.0\n */\nexport interface EventBinderObject {\n  bind( target: EventTargets, events: string | string[], callback: AnyFunction, options?: AddEventListenerOptions ): void\n  unbind( target: EventTarget | EventTarget[], events: string | string[], callback?: AnyFunction ): void;\n  dispatch<T>( target: EventTarget, event: string, detail?: T ): void;\n  destroy(): void;\n}\n\n/**\n * The constructor function to provide methods to subscribe native events.\n *\n * @since 4.0.0\n * @constructor\n *\n * @return An EventBinder object.\n */\nexport function EventBinder(): EventBinderObject {\n  /**\n   * Stores all handlers that listen to native events.\n   * `[ target, event, namespace, callback, remover ]`\n   */\n  let listeners: [ EventTarget, string, string | undefined, AnyFunction, () => void ][] = [];\n\n  /**\n   * Listens to native events.\n   * - `destroy()` can unsubscribe all events.\n   * - In IE, mediaQueryList does not inherit EventTarget,\n   *   and only supports deprecated `addListener` and `removeListener`.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener\n   *\n   * @param targets  - A target element, the window object or the document object.\n   * @param events   - An event or events to listen to.\n   * @param callback - A callback function.\n   * @param options  - Optional. The options to pass to the `addEventListener` function.\n   */\n  function bind(\n    targets: EventTargets,\n    events: string | string[],\n    callback: AnyFunction,\n    options?: AddEventListenerOptions\n  ): void {\n    forEachEvent( targets, events, ( target, event, namespace ) => {\n      const isEventTarget = 'addEventListener' in target;\n      const remover = isEventTarget\n        ? target.removeEventListener.bind( target, event, callback, options )\n        : target[ 'removeListener' ].bind( target, callback );\n\n      isEventTarget ? target.addEventListener( event, callback, options ) : target[ 'addListener' ]( callback );\n      listeners.push( [ target, event, namespace, callback, remover ] );\n    } );\n  }\n\n  /**\n   * Removes the event handler.\n   *\n   * @param targets  - A target element, the window object or the document object.\n   * @param events   - An event name or names to remove.\n   * @param callback - Optional. Specify the callback to remove.\n   */\n  function unbind( targets: EventTargets, events: string | string[], callback?: AnyFunction ): void {\n    forEachEvent( targets, events, ( target, event, namespace ) => {\n      listeners = listeners.filter( listener => {\n        if ( listener[ 0 ] === target\n          && listener[ 1 ] === event\n          && listener[ 2 ] === namespace\n          && ( ! callback || listener[ 3 ] === callback )\n        ) {\n          listener[ 4 ]();\n          return false;\n        }\n\n        return true;\n      } );\n    } );\n  }\n\n  /**\n   * Dispatches a custom event of the target.\n   *\n   * @param target - An event target.\n   * @param type   - An event type.\n   * @param detail - Optional. The `detail` object of the event.\n   *\n   * @return An event object.\n   */\n  function dispatch<T>( target: EventTarget, type: string, detail?: T ): CustomEvent {\n    let e: CustomEvent;\n    const bubbles = true;\n\n    if ( typeof CustomEvent === 'function' ) {\n      e = new CustomEvent( type, { bubbles, detail } );\n    } else {\n      e = document.createEvent( 'CustomEvent' );\n      e.initCustomEvent( type, bubbles, false, detail );\n    }\n\n    target.dispatchEvent( e );\n    return e;\n  }\n\n  /**\n   * Iterates over each target and event.\n   *\n   * @param targets  - A target element, the window object or the document object.\n   * @param events   - An event name or names.\n   * @param iteratee - An iteratee function.\n   */\n  function forEachEvent(\n    targets: EventTargets,\n    events: string | string[],\n    iteratee: ( target: EventTarget, event: string, namespace: string | undefined ) => void\n  ): void {\n    forEach( targets, target => {\n      target && forEach( events, events => {\n        events.split( ' ' ).forEach( eventNS => {\n          const fragment = eventNS.split( '.' );\n          iteratee( target, fragment[ 0 ], fragment[ 1 ] );\n        } );\n      } );\n    } );\n  }\n\n  /**\n   * Removes all listeners.\n   */\n  function destroy(): void {\n    listeners.forEach( data => { data[ 4 ]() } );\n    empty( listeners );\n  }\n\n  return {\n    bind,\n    unbind,\n    dispatch,\n    destroy,\n  };\n}\n","export const EVENT_MOUNTED            = 'mounted';\nexport const EVENT_READY              = 'ready';\nexport const EVENT_MOVE               = 'move';\nexport const EVENT_MOVED              = 'moved';\nexport const EVENT_CLICK              = 'click';\nexport const EVENT_ACTIVE             = 'active';\nexport const EVENT_INACTIVE           = 'inactive';\nexport const EVENT_VISIBLE            = 'visible';\nexport const EVENT_HIDDEN             = 'hidden';\nexport const EVENT_REFRESH            = 'refresh';\nexport const EVENT_UPDATED            = 'updated';\nexport const EVENT_RESIZE             = 'resize';\nexport const EVENT_RESIZED            = 'resized';\nexport const EVENT_DRAG               = 'drag';\nexport const EVENT_DRAGGING           = 'dragging';\nexport const EVENT_DRAGGED            = 'dragged';\nexport const EVENT_SCROLL             = 'scroll';\nexport const EVENT_SCROLLED           = 'scrolled';\nexport const EVENT_OVERFLOW           = 'overflow';\nexport const EVENT_DESTROY            = 'destroy';\nexport const EVENT_ARROWS_MOUNTED     = 'arrows:mounted';\nexport const EVENT_ARROWS_UPDATED     = 'arrows:updated';\nexport const EVENT_PAGINATION_MOUNTED = 'pagination:mounted';\nexport const EVENT_PAGINATION_UPDATED = 'pagination:updated';\nexport const EVENT_NAVIGATION_MOUNTED = 'navigation:mounted';\nexport const EVENT_AUTOPLAY_PLAY      = 'autoplay:play';\nexport const EVENT_AUTOPLAY_PLAYING   = 'autoplay:playing';\nexport const EVENT_AUTOPLAY_PAUSE     = 'autoplay:pause';\nexport const EVENT_LAZYLOAD_LOADED    = 'lazyload:loaded';\n\n/** @internal */\nexport const EVENT_SLIDE_KEYDOWN     = 'sk';\nexport const EVENT_SHIFTED           = 'sh';\nexport const EVENT_END_INDEX_CHANGED = 'ei';\n","import { EVENT_DESTROY } from '../../constants/events';\nimport { Splide } from '../../core/Splide/Splide';\nimport { AnyFunction, EventMap } from '../../types';\nimport { apply, assign, isArray, slice, toArray } from '../../utils';\nimport { EventBinder, EventBinderObject } from '../EventBinder/EventBinder';\n\n\n/**\n * The interface for the EventInterface object.\n *\n * @since 3.0.0\n */\nexport interface EventInterfaceObject extends EventBinderObject {\n  on<K extends keyof EventMap>( event: K, callback: EventMap[ K ] ): void;\n  on( events: string | string[], callback: AnyFunction ): void;\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): void;\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): void\n  emit( event: string, ...args: any[] ): void;\n\n  /** @internal */\n  bus: DocumentFragment;\n}\n\n/**\n * The constructor function that provides interface for internal and native events.\n *\n * @since 3.0.0\n * @constructor\n *\n * @param Splide - A Splide instance.\n *\n * @return A collection of interface functions.\n */\nexport function EventInterface( Splide?: Splide ): EventInterfaceObject {\n  /**\n   * The document fragment for internal events.\n   * Provide the Splide instance to share the bus.\n   */\n  const bus = Splide ? Splide.event.bus : document.createDocumentFragment();\n\n  /**\n   * An event binder object.\n   */\n  const binder = EventBinder();\n\n  /**\n   * Listens to an internal event or events.\n   *\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\n   * @param callback - A callback function to register.\n   */\n  function on( events: string | string[], callback: AnyFunction ): void {\n    binder.bind( bus, toArray( events ).join( ' ' ), e => {\n      callback.apply( callback, isArray( e.detail ) ? e.detail : [] );\n    } );\n  }\n\n  /**\n   * Triggers callback functions.\n   * This accepts additional arguments and passes them to callbacks.\n   *\n   * @param event - An event name.\n   */\n  function emit( event: string ): void {\n    // eslint-disable-next-line prefer-rest-params, prefer-spread\n    binder.dispatch( bus, event, slice( arguments, 1 ) );\n  }\n\n  if ( Splide ) {\n    Splide.event.on( EVENT_DESTROY, binder.destroy );\n  }\n\n  return assign( binder, {\n    bus,\n    on,\n    off: apply( binder.unbind, bus ),\n    emit,\n  } );\n}","import { min, raf } from '../../utils';\n\n\n/**\n * The interface for the returning value of the RequestInterval.\n *\n * @since 3.0.0\n */\nexport interface RequestIntervalInterface {\n  start( resume?: boolean ): void;\n  pause(): void;\n  rewind(): void;\n  cancel(): void;\n  set( interval: number ): void;\n  isPaused(): boolean;\n}\n\n/**\n * Requests interval like the native `setInterval()` with using `requestAnimationFrame`.\n *\n * @since 3.0.0\n *\n * @param interval   - The interval duration in milliseconds.\n * @param onInterval - The callback fired on every interval.\n * @param onUpdate   - Optional. Called on every animation frame, taking the progress rate.\n * @param limit      - Optional. Limits the number of interval.\n */\nexport function RequestInterval(\n  interval: number,\n  onInterval: () => void,\n  onUpdate?: ( rate: number ) => void,\n  limit?: number\n): RequestIntervalInterface {\n  const { now } = Date;\n\n  /**\n   * The time when the interval starts.\n   */\n  let startTime: number;\n\n  /**\n   * The current progress rate.\n   */\n  let rate = 0;\n\n  /**\n   * The animation frame ID.\n   */\n  let id: number;\n\n  /**\n   * Indicates whether the interval is currently paused or not.\n   */\n  let paused = true;\n\n  /**\n   * The loop count. This only works when the `limit` argument is provided.\n   */\n  let count = 0;\n\n  /**\n   * The update function called on every animation frame.\n   */\n  function update(): void {\n    if ( ! paused ) {\n      rate = interval ? min( ( now() - startTime ) / interval, 1 ) : 1;\n      onUpdate && onUpdate( rate );\n\n      if ( rate >= 1 ) {\n        onInterval();\n        startTime = now();\n\n        if ( limit && ++count >= limit ) {\n          return pause();\n        }\n      }\n\n      id = raf( update );\n    }\n  }\n\n  /**\n   * Starts the interval.\n   *\n   * @param resume - Optional. Whether to resume the paused progress or not.\n   */\n  function start( resume?: boolean ): void {\n    resume || cancel();\n    startTime = now() - ( resume ? rate * interval : 0 );\n    paused    = false;\n    id        = raf( update );\n  }\n\n  /**\n   * Pauses the interval.\n   */\n  function pause(): void {\n    paused = true;\n  }\n\n  /**\n   * Rewinds the current progress.\n   */\n  function rewind(): void {\n    startTime = now();\n    rate      = 0;\n\n    if ( onUpdate ) {\n      onUpdate( rate );\n    }\n  }\n\n  /**\n   * Cancels the interval.\n   */\n  function cancel() {\n    id && cancelAnimationFrame( id );\n    rate   = 0;\n    id     = 0;\n    paused = true;\n  }\n\n  /**\n   * Sets new interval duration.\n   *\n   * @param time - The interval duration in milliseconds.\n   */\n  function set( time: number ): void {\n    interval = time;\n  }\n\n  /**\n   * Checks if the interval is paused or not.\n   *\n   * @return `true` if the interval is paused, or otherwise `false`.\n   */\n  function isPaused(): boolean {\n    return paused;\n  }\n\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    set,\n    isPaused,\n  };\n}\n","import { includes, toArray } from '../../utils';\n\n\n/**\n * The interface for the State object.\n *\n * @since 3.0.0\n */\nexport interface StateObject {\n  set( state: number ): void;\n  is( states: number | number[] ): boolean;\n}\n\n/**\n * The function providing a super simple state system.\n *\n * @param initialState - Specifies the initial state.\n */\nexport function State( initialState: number ): StateObject {\n  /**\n   * The current state.\n   */\n  let state = initialState;\n\n  /**\n   * Sets a new state.\n   *\n   * @param value - A new state value.\n   */\n  function set( value: number ): void {\n    state = value;\n  }\n\n  /**\n   * Checks if the current state matches the provided one.\n   *\n   * @param states - A state to check.\n   *\n   * @return `true` if the current state is the provided one.\n   */\n  function is( states: number | number[] ): boolean {\n    return includes( toArray( states ), state );\n  }\n\n  return { set, is };\n}\n","const ARROW = 'Arrow';\nexport const ARROW_LEFT  = `${ ARROW }Left`;\nexport const ARROW_RIGHT = `${ ARROW }Right`;\nexport const ARROW_UP    = `${ ARROW }Up`;\nexport const ARROW_DOWN  = `${ ARROW }Down`;","/**\n * Enumerates slides from left to right.\n */\nexport const LTR = 'ltr';\n\n/**\n * Enumerates slides from right to left.\n */\nexport const RTL = 'rtl';\n\n/**\n * Enumerates slides in a col.\n */\nexport const TTB = 'ttb';\n","import { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from '../../constants/arrows';\nimport { RTL, TTB } from '../../constants/directions';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\n\n\n/**\n * The interface for the Direction component.\n *\n * @since 3.0.0\n */\nexport interface DirectionComponent extends BaseComponent {\n  resolve( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): string;\n  orient( value: number ): number;\n}\n\n/**\n * The translation map for directions.\n *\n * @since 3.0.0\n */\nexport const ORIENTATION_MAP = {\n  width     : [ 'height' ],\n  left      : [ 'top', 'right' ],\n  right     : [ 'bottom', 'left' ],\n  x         : [ 'y' ],\n  X         : [ 'Y' ],\n  Y         : [ 'X' ],\n  ArrowLeft : [ ARROW_UP, ARROW_RIGHT ],\n  ArrowRight: [ ARROW_DOWN, ARROW_LEFT ],\n};\n\n/**\n * The component that absorbs the difference among directions.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Direction component object.\n */\nexport function Direction( Splide: Splide, Components: Components, options: Options ): DirectionComponent {\n  /**\n   * Resolves the provided property name.\n   *\n   * @param prop      - A property name to translate.\n   * @param axisOnly  - Optional. If `ture`, returns the same property for LTR and RTL.\n   * @param direction - Optional. Specify the direction. The default value is the `direction` option.\n   */\n  function resolve( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): string {\n    direction = direction || options.direction;\n    const index = direction === RTL && ! axisOnly ? 1 : direction === TTB ? 0 : -1;\n\n    return ORIENTATION_MAP[ prop ] && ORIENTATION_MAP[ prop ][ index ]\n      || prop.replace( /width|left|right/i, ( match, offset ) => {\n        const replacement = ORIENTATION_MAP[ match.toLowerCase() ][ index ] || match;\n        return offset > 0 ? replacement.charAt( 0 ).toUpperCase() + replacement.slice( 1 ) : replacement;\n      } );\n  }\n\n  /**\n   * Orients the value towards the current direction.\n   *\n   * @param value - A value to orient.\n   *\n   * @return The oriented value.\n   */\n  function orient( value: number ): number {\n    return value * ( options.direction === RTL ? 1 : -1 );\n  }\n\n  return {\n    resolve,\n    orient,\n  };\n}\n","export const ROLE      = 'role';\nexport const TAB_INDEX = 'tabindex';\nexport const DISABLED  = 'disabled';\n\nexport const ARIA_PREFIX          = 'aria-';\nexport const ARIA_CONTROLS        = `${ ARIA_PREFIX }controls`;\nexport const ARIA_CURRENT         = `${ ARIA_PREFIX }current`;\nexport const ARIA_SELECTED        = `${ ARIA_PREFIX }selected`;\nexport const ARIA_LABEL           = `${ ARIA_PREFIX }label`;\nexport const ARIA_LABELLEDBY      = `${ ARIA_PREFIX }labelledby`;\nexport const ARIA_HIDDEN          = `${ ARIA_PREFIX }hidden`;\nexport const ARIA_ORIENTATION     = `${ ARIA_PREFIX }orientation`;\nexport const ARIA_ROLEDESCRIPTION = `${ ARIA_PREFIX }roledescription`;\nexport const ARIA_LIVE            = `${ ARIA_PREFIX }live`;\nexport const ARIA_BUSY            = `${ ARIA_PREFIX }busy`;\nexport const ARIA_ATOMIC          = `${ ARIA_PREFIX }atomic`;\n\n/**\n * The array with all attributes to remove later.\n * Need to manually remove attributes that are not in this.\n * Note that removing `aria-live` disables the live region until the page reload.\n *\n * @since 3.0.0\n */\nexport const ALL_ATTRIBUTES = [\n  ROLE,\n  TAB_INDEX,\n  DISABLED,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_LABEL,\n  ARIA_LABELLEDBY,\n  ARIA_HIDDEN,\n  ARIA_ORIENTATION,\n  ARIA_ROLEDESCRIPTION,\n];\n","import { PROJECT_CODE } from './project';\n\n/**\n * The prefix for classes.\n *\n * @since 4.1.0\n */\nconst CLASS_PREFIX = `${ PROJECT_CODE }__`;\n\n/**\n * The prefix for status classes.\n *\n * @since 4.1.0\n */\nconst STATUS_CLASS_PREFIX = 'is-';\n\n/**\n * All classes as constants.\n */\nexport const CLASS_ROOT            = PROJECT_CODE;\nexport const CLASS_TRACK           = `${ CLASS_PREFIX }track`;\nexport const CLASS_LIST            = `${ CLASS_PREFIX }list`;\nexport const CLASS_SLIDE           = `${ CLASS_PREFIX }slide`;\nexport const CLASS_CLONE           = `${ CLASS_SLIDE }--clone`;\nexport const CLASS_CONTAINER       = `${ CLASS_SLIDE }__container`;\nexport const CLASS_ARROWS          = `${ CLASS_PREFIX }arrows`;\nexport const CLASS_ARROW           = `${ CLASS_PREFIX }arrow`;\nexport const CLASS_ARROW_PREV      = `${ CLASS_ARROW }--prev`;\nexport const CLASS_ARROW_NEXT      = `${ CLASS_ARROW }--next`;\nexport const CLASS_PAGINATION      = `${ CLASS_PREFIX }pagination`;\nexport const CLASS_PAGINATION_PAGE = `${ CLASS_PAGINATION }__page`;\nexport const CLASS_PROGRESS        = `${ CLASS_PREFIX }progress`;\nexport const CLASS_PROGRESS_BAR    = `${ CLASS_PROGRESS }__bar`;\nexport const CLASS_TOGGLE          = `${ CLASS_PREFIX }toggle`;\nexport const CLASS_TOGGLE_PLAY     = `${ CLASS_TOGGLE }__play`;\nexport const CLASS_TOGGLE_PAUSE    = `${ CLASS_TOGGLE }__pause`;\nexport const CLASS_SPINNER         = `${ CLASS_PREFIX }spinner`;\nexport const CLASS_SR              = `${ CLASS_PREFIX }sr`;\nexport const CLASS_INITIALIZED     = `${ STATUS_CLASS_PREFIX }initialized`;\nexport const CLASS_ACTIVE          = `${ STATUS_CLASS_PREFIX }active`;\nexport const CLASS_PREV            = `${ STATUS_CLASS_PREFIX }prev`;\nexport const CLASS_NEXT            = `${ STATUS_CLASS_PREFIX }next`;\nexport const CLASS_VISIBLE         = `${ STATUS_CLASS_PREFIX }visible`;\nexport const CLASS_LOADING         = `${ STATUS_CLASS_PREFIX }loading`;\nexport const CLASS_FOCUS_IN        = `${ STATUS_CLASS_PREFIX }focus-in`;\nexport const CLASS_OVERFLOW        = `${ STATUS_CLASS_PREFIX }overflow`;\n\n/**\n * The array with all status classes except for `is-initialized`.\n *\n * @since 3.0.0\n */\nexport const STATUS_CLASSES = [\n  CLASS_ACTIVE,\n  CLASS_VISIBLE,\n  CLASS_PREV,\n  CLASS_NEXT,\n  CLASS_LOADING,\n  CLASS_FOCUS_IN,\n  CLASS_OVERFLOW,\n];\n\n/**\n * The collection of classes for elements that Splide dynamically creates.\n *\n * @since 3.0.0\n */\nexport const CLASSES = {\n  slide     : CLASS_SLIDE,\n  clone     : CLASS_CLONE,\n  arrows    : CLASS_ARROWS,\n  arrow     : CLASS_ARROW,\n  prev      : CLASS_ARROW_PREV,\n  next      : CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page      : CLASS_PAGINATION_PAGE,\n  spinner   : CLASS_SPINNER,\n};\n","/**\n * The power of the friction.\n *\n * @since 3.0.0\n */\nexport const FRICTION = 5;\n\n/**\n * If the user stops dragging for this duration with keeping the pointer down, updates the base coord and time.\n *\n * @since 3.0.0\n */\nexport const LOG_INTERVAL = 200;\n\n/**\n * Start events for dragging.\n *\n * @since 3.0.0\n */\nexport const POINTER_DOWN_EVENTS = 'touchstart mousedown';\n\n/**\n * Update events for dragging.\n *\n * @since 3.0.0\n */\nexport const POINTER_MOVE_EVENTS = 'touchmove mousemove';\n\n/**\n * End events for dragging.\n * The `click` event is required because the browser sometimes dispatches `drag` events instead of `mouse`.\n *\n * @since 3.0.0\n */\nexport const POINTER_UP_EVENTS = 'touchend touchcancel mouseup click';\n","/**\n * The type for the regular slider.\n *\n * @since 3.0.0\n */\nexport const SLIDE = 'slide';\n\n/**\n * The type for the carousel slider.\n *\n * @since 3.0.0\n */\nexport const LOOP = 'loop';\n\n/**\n * The type for the fade slider that can not have multiple slides in a page.\n *\n * @since 3.0.0\n */\nexport const FADE = 'fade';\n","import {\n  ALL_ATTRIBUTES,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_HIDDEN,\n  ARIA_LABEL,\n  ARIA_ROLEDESCRIPTION,\n  ROLE,\n  TAB_INDEX,\n} from '../../constants/attributes';\nimport {\n  CLASS_ACTIVE,\n  CLASS_CONTAINER,\n  CLASS_NEXT,\n  CLASS_PREV,\n  CLASS_VISIBLE,\n  STATUS_CLASSES,\n} from '../../constants/classes';\nimport {\n  EVENT_ACTIVE,\n  EVENT_CLICK,\n  EVENT_HIDDEN,\n  EVENT_INACTIVE,\n  EVENT_MOVE,\n  EVENT_MOVED,\n  EVENT_NAVIGATION_MOUNTED,\n  EVENT_SCROLLED,\n  EVENT_SHIFTED,\n  EVENT_SLIDE_KEYDOWN,\n  EVENT_VISIBLE,\n} from '../../constants/events';\nimport { MOVING, SCROLLING } from '../../constants/states';\nimport { FADE, LOOP } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent } from '../../types';\nimport {\n  abs,\n  apply,\n  ceil,\n  child,\n  floor,\n  focus,\n  format,\n  getAttribute,\n  hasClass,\n  min,\n  pad,\n  queryAll,\n  rect,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  style as _style,\n  toggleClass,\n} from '../../utils';\n\n\n/**\n * The interface for the Slide sub component.\n *\n * @since 3.0.0\n */\nexport interface  SlideComponent extends BaseComponent {\n  index: number;\n  slideIndex: number;\n  slide: HTMLElement;\n  container: HTMLElement;\n  isClone: boolean;\n  update(): void;\n  style( prop: string, value: string | number, useContainer?: boolean ): void\n  isWithin( from: number, distance: number ): boolean;\n}\n\n/**\n * The subcomponent for managing each slide.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param index      - A slide index.\n * @param slideIndex - A slide index for clones. This must be `-1` if the slide is not a clone.\n * @param slide      - A slide element.\n *\n * @return A Slide subcomponent.\n */\nexport function Slide( Splide: Splide, index: number, slideIndex: number, slide: HTMLElement ): SlideComponent {\n  const event = EventInterface( Splide );\n  const { on, emit, bind } = event;\n  const { Components, root, options } = Splide;\n  const { isNavigation, updateOnMove, i18n, pagination, slideFocus } = options;\n  const { resolve } = Components.Direction;\n  const styles    = getAttribute( slide, 'style' );\n  const label     = getAttribute( slide, ARIA_LABEL );\n  const isClone   = slideIndex > -1;\n  const container = child( slide, `.${ CLASS_CONTAINER }` );\n\n  /**\n   * Turns into `true` when the component is destroyed.\n   */\n  let destroyed: boolean;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount( this: SlideComponent ): void {\n    if ( ! isClone ) {\n      slide.id = `${ root.id }-slide${ pad( index + 1 ) }`;\n      setAttribute( slide, ROLE, pagination ? 'tabpanel' : 'group' );\n      setAttribute( slide, ARIA_ROLEDESCRIPTION, i18n.slide );\n      setAttribute( slide, ARIA_LABEL, label || format( i18n.slideLabel, [ index + 1, Splide.length ] ) );\n    }\n\n    listen();\n  }\n\n  /**\n   * Listens to some events.\n   */\n  function listen(): void {\n    bind( slide, 'click', apply( emit, EVENT_CLICK, self ) );\n    bind( slide, 'keydown', apply( emit, EVENT_SLIDE_KEYDOWN, self ) );\n    on( [ EVENT_MOVED, EVENT_SHIFTED, EVENT_SCROLLED ], update );\n    on( EVENT_NAVIGATION_MOUNTED, initNavigation );\n\n    if ( updateOnMove ) {\n      on( EVENT_MOVE, onMove );\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    destroyed = true;\n    event.destroy();\n    removeClass( slide, STATUS_CLASSES );\n    removeAttribute( slide, ALL_ATTRIBUTES );\n    setAttribute( slide, 'style', styles );\n    setAttribute( slide, ARIA_LABEL, label || '' );\n  }\n\n  /**\n   * Initializes slides as navigation.\n   */\n  function initNavigation(): void {\n    const controls = Splide.splides.map( target => {\n      const Slide = target.splide.Components.Slides.getAt( index );\n      return Slide ? Slide.slide.id : '';\n    } ).join( ' ' );\n\n    setAttribute( slide, ARIA_LABEL, format( i18n.slideX, ( isClone ? slideIndex : index ) + 1 ) );\n    setAttribute( slide, ARIA_CONTROLS, controls );\n    setAttribute( slide, ROLE, slideFocus ? 'button' : '' );\n    slideFocus && removeAttribute( slide, ARIA_ROLEDESCRIPTION );\n  }\n\n  /**\n   * If the `updateOnMove` option is `true`, called when the slider starts moving.\n   */\n  function onMove(): void {\n    if ( ! destroyed ) {\n      update();\n    }\n  }\n\n  /**\n   * Updates attribute and classes of the slide.\n   */\n  function update(): void {\n    if ( ! destroyed ) {\n      const { index: curr } = Splide;\n\n      updateActivity();\n      updateVisibility();\n      toggleClass( slide, CLASS_PREV, index === curr - 1 );\n      toggleClass( slide, CLASS_NEXT, index === curr + 1 );\n    }\n  }\n\n  /**\n   * Updates the status related with activity.\n   */\n  function updateActivity(): void {\n    const active = isActive();\n\n    if ( active !== hasClass( slide, CLASS_ACTIVE ) ) {\n      toggleClass( slide, CLASS_ACTIVE, active );\n      setAttribute( slide, ARIA_CURRENT, isNavigation && active || '' );\n      emit( active ? EVENT_ACTIVE : EVENT_INACTIVE, self );\n    }\n  }\n\n  /**\n   * Updates classes and attributes related with visibility.\n   * - Do not update aria-hidden on shifting to avoid Window Narrator from start reading contents.\n   * - If the slide has focus and gets hidden, moves focus to the active slide.\n   */\n  function updateVisibility(): void {\n    const visible = isVisible();\n    const hidden = ! visible && ( ! isActive() || isClone );\n\n    if ( ! Splide.state.is( [ MOVING, SCROLLING ] ) ) {\n      setAttribute( slide, ARIA_HIDDEN, hidden || '' );\n    }\n\n    setAttribute( queryAll( slide, options.focusableNodes || '' ), TAB_INDEX, hidden ? -1 : '' );\n\n    if ( slideFocus ) {\n      setAttribute( slide, TAB_INDEX, hidden ? -1 : 0 );\n    }\n\n    if ( visible !== hasClass( slide, CLASS_VISIBLE ) ) {\n      toggleClass( slide, CLASS_VISIBLE, visible );\n      emit( visible ? EVENT_VISIBLE : EVENT_HIDDEN, self );\n    }\n\n    if ( ! visible && document.activeElement === slide ) {\n      const Slide = Components.Slides.getAt( Splide.index );\n      Slide && focus( Slide.slide );\n    }\n  }\n\n  /**\n   * Adds a CSS rule to the slider or the container.\n   *\n   * @param prop         - A property name.\n   * @param value        - A CSS value to add.\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\n   */\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\n    _style( ( useContainer && container ) || slide, prop, value );\n  }\n\n  /**\n   * Checks if the slide is active or not.\n   *\n   * @return `true` if the slide is active.\n   */\n  function isActive(): boolean {\n    const { index: curr } = Splide;\n    return curr === index || ( options.cloneStatus && curr === slideIndex );\n  }\n\n  /**\n   * Checks if the slide is visible or not.\n   */\n  function isVisible(): boolean {\n    if ( Splide.is( FADE ) ) {\n      return isActive();\n    }\n\n    const trackRect = rect( Components.Elements.track );\n    const slideRect = rect( slide );\n    const left      = resolve( 'left', true );\n    const right     = resolve( 'right', true );\n\n    return floor( trackRect[ left ] ) <= ceil( slideRect[ left ] )\n      && floor( slideRect[ right ] ) <= ceil( trackRect[ right ] );\n  }\n\n  /**\n   * Calculates how far this slide is from another slide and\n   * returns `true` if the distance is within the given number.\n   *\n   * @param from     - An index of a base slide.\n   * @param distance - `true` if the slide is within this number.\n   *\n   * @return `true` if the slide is within the `distance` from the base slide, or otherwise `false`.\n   */\n  function isWithin( from: number, distance: number ): boolean {\n    let diff = abs( from - index );\n\n    if ( ! isClone && ( options.rewind || Splide.is( LOOP ) ) ) {\n      diff = min( diff, Splide.length - diff );\n    }\n\n    return diff <= distance;\n  }\n\n  const self = {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    update,\n    style,\n    isWithin,\n  };\n\n  return self;\n}\n","import { DATA_ATTRIBUTE } from '../../constants/project';\n\n\n/**\n * The data attribute for the autoplay interval duration.\n *\n * @since 3.5.0\n */\nexport const INTERVAL_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-interval`;\n","/**\n * AddEventListenerOptions for listeners that may prevent the browser scroll.\n *\n * @since 3.4.1\n */\nexport const SCROLL_LISTENER_OPTIONS = { passive: false, capture: true };\n","import { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from '../../../constants/arrows';\nimport { isString } from '../../type/type';\n\n\n/**\n * The map to associate a non-standard name to the standard one.\n *\n * @since 4.0.0\n */\nexport const NORMALIZATION_MAP = {\n  Spacebar: ' ',\n  Right   : ARROW_RIGHT,\n  Left    : ARROW_LEFT,\n  Up      : ARROW_UP,\n  Down    : ARROW_DOWN,\n};\n\n/**\n * Normalizes the key.\n *\n * @param key - A string or a KeyboardEvent object.\n *\n * @return A normalized key.\n */\nexport function normalizeKey( key: string | KeyboardEvent ): string {\n  key = isString( key ) ? key : key.key;\n  return NORMALIZATION_MAP[ key ] || key;\n}","import { ARROW_LEFT, ARROW_RIGHT } from '../../constants/arrows';\nimport { EVENT_MOVE, EVENT_UPDATED } from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { nextTick } from '../../utils';\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\n\n\n/**\n * The interface for the Keyboard component.\n *\n * @since 3.0.0\n */\nexport interface KeyboardComponent extends BaseComponent {\n  disable( disabled: boolean ): void;\n}\n\n/**\n * The keyboard event name.\n *\n * @since 3.6.0\n */\nconst KEYBOARD_EVENT = 'keydown';\n\n/**\n * The component for controlling the slider by keyboards.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Keyboard component object.\n */\nexport function Keyboard( Splide: Splide, Components: Components, options: Options ): KeyboardComponent {\n  const { on, bind, unbind } = EventInterface( Splide );\n  const { root } = Splide;\n  const { resolve } = Components.Direction;\n\n  /**\n   * The target element of the keyboard event.\n   */\n  let target: Window | HTMLElement;\n\n  /**\n   * Indicates whether the component is currently disabled or not.\n   */\n  let disabled: boolean;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( EVENT_UPDATED, destroy );\n    on( EVENT_UPDATED, init );\n    on( EVENT_MOVE, onMove );\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    const { keyboard } = options;\n\n    if ( keyboard ) {\n      target = keyboard === 'global' ? window : root;\n      bind( target, KEYBOARD_EVENT, onKeydown );\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    unbind( target, KEYBOARD_EVENT );\n  }\n\n  /**\n   * Disables the keyboard input.\n   *\n   * @param value - Toggles disabling/enabling the keyboard input.\n   */\n  function disable( value: boolean ): void {\n    disabled = value;\n  }\n\n  /**\n   * Called when the slider moves.\n   * To avoid the slider from moving twice, wait for a tick.\n   */\n  function onMove(): void {\n    const _disabled = disabled;\n    disabled = true;\n    nextTick( () => { disabled = _disabled } );\n  }\n\n  /**\n   * Called when any key is pressed on the target.\n   *\n   * @param e - A KeyboardEvent object.\n   */\n  function onKeydown( e: KeyboardEvent ): void {\n    if ( ! disabled ) {\n      const key = normalizeKey( e );\n\n      if ( key === resolve( ARROW_LEFT ) ) {\n        Splide.go( '<' );\n      } else if ( key === resolve( ARROW_RIGHT ) ) {\n        Splide.go( '>' );\n      }\n    }\n  }\n\n  return {\n    mount,\n    destroy,\n    disable,\n  };\n}\n","import { DATA_ATTRIBUTE } from '../../constants/project';\n\n\n/**\n * The data attribute for the src value.\n *\n * @since 3.0.0\n */\nexport const SRC_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-lazy`;\n\n/**\n * The data attribute for the srcset value.\n *\n * @since 3.0.0\n */\nexport const SRCSET_DATA_ATTRIBUTE = `${ SRC_DATA_ATTRIBUTE }-srcset`;\n\n/**\n * The selector string for images to load.\n *\n * @since 3.0.0\n */\nexport const IMAGE_SELECTOR = `[${ SRC_DATA_ATTRIBUTE }], [${ SRCSET_DATA_ATTRIBUTE }]`;\n","import { ARIA_ORIENTATION } from '../../constants/attributes';\nimport { TTB } from '../../constants/directions';\nimport {\n  EVENT_CLICK,\n  EVENT_MOUNTED,\n  EVENT_MOVE,\n  EVENT_NAVIGATION_MOUNTED,\n  EVENT_SLIDE_KEYDOWN,\n  EVENT_UPDATED,\n} from '../../constants/events';\nimport { LOOP } from '../../constants/types';\nimport { EventInterface, EventInterfaceObject } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { apply, empty, includes, isUndefined, prevent, setAttribute } from '../../utils';\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\nimport { SlideComponent } from '../Slides/Slide';\n\n\n/**\n * The interface for the Sync component.\n *\n * @since 3.0.0\n */\nexport interface SyncComponent extends BaseComponent {\n  remount(): void;\n}\n\n/**\n * The keys for triggering the navigation slide.\n *\n * @since 3.0.0\n */\nconst TRIGGER_KEYS = [ ' ', 'Enter' ];\n\n/**\n * The component for syncing multiple sliders.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Sync component object.\n */\nexport function Sync( Splide: Splide, Components: Components, options: Options ): SyncComponent {\n  const { isNavigation, slideFocus } = options;\n\n  /**\n   * Stores event objects.\n   */\n  const events: EventInterfaceObject[] = [];\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    Splide.splides.forEach( target => {\n      if ( ! target.isParent ) {\n        sync( Splide, target.splide );\n        sync( target.splide, Splide );\n      }\n    } );\n\n    if ( isNavigation ) {\n      navigate();\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    events.forEach( event => { event.destroy() } );\n    empty( events );\n  }\n\n  /**\n   * Remounts the component.\n   *\n   * @internal\n   */\n  function remount(): void {\n    destroy();\n    mount();\n  }\n\n  /**\n   * Syncs the current index with a provided child splide instance.\n   *\n   * @param splide - A splide instance to sync with.\n   * @param target - A target splide instance.\n   */\n  function sync( splide: Splide, target: Splide ): void {\n    const event = EventInterface( splide );\n\n    event.on( EVENT_MOVE, ( index, prev, dest ) => {\n      target.go( target.is( LOOP ) ? dest : index );\n    } );\n\n    events.push( event );\n  }\n\n  /**\n   * Makes slides clickable and moves the slider to the index of clicked slide.\n   * Note that the direction of `menu` is implicitly `vertical` as default.\n   */\n  function navigate(): void {\n    const event = EventInterface( Splide );\n    const { on } = event;\n\n    on( EVENT_CLICK, onClick );\n    on( EVENT_SLIDE_KEYDOWN, onKeydown );\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], update );\n\n    events.push( event );\n    event.emit( EVENT_NAVIGATION_MOUNTED, Splide.splides );\n  }\n\n  /**\n   * Update attributes.\n   */\n  function update(): void {\n    setAttribute( Components.Elements.list, ARIA_ORIENTATION, options.direction === TTB ? 'vertical' : '' );\n  }\n\n  /**\n   * Called when the navigation slide is clicked.\n   *\n   * @param Slide - A clicked Slide component.\n   */\n  function onClick( Slide: SlideComponent ): void {\n    Splide.go( Slide.index );\n  }\n\n  /**\n   * Called when any key is pressed on the navigation slide.\n   *\n   * @param Slide - A Slide component.\n   * @param e     - A KeyboardEvent object.\n   */\n  function onKeydown( Slide: SlideComponent, e: KeyboardEvent ): void {\n    if ( includes( TRIGGER_KEYS, normalizeKey( e ) ) ) {\n      onClick( Slide );\n      prevent( e );\n    }\n  }\n\n  return {\n    setup: apply(\n      Components.Media.set,\n      { slideFocus: isUndefined( slideFocus ) ? isNavigation : slideFocus },\n      true\n    ),\n    mount,\n    destroy,\n    remount,\n  };\n}\n","import { MEDIA_PREFERS_REDUCED_MOTION } from '../../constants/media';\nimport { CREATED, DESTROYED } from '../../constants/states';\nimport { EventBinder } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { merge, omit, ownKeys } from '../../utils';\nimport { EVENT_UPDATED } from '../../constants/events';\n\n\n/**\n * The interface for the Media component.\n *\n * @since 4.0.0\n */\nexport interface MediaComponent extends BaseComponent {\n  /** @internal */\n  reduce( reduced: boolean ): void;\n  set( options: Options, base?: boolean, notify?: boolean ): void;\n}\n\n/**\n * The component for observing media queries and updating options if necessary.\n * This used to be the Options component.\n *\n * @since 4.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Media component object.\n */\nexport function Media( Splide: Splide, Components: Components, options: Options ): MediaComponent {\n  const { state } = Splide;\n  const breakpoints   = options.breakpoints || {};\n  const reducedMotion = options.reducedMotion || {};\n  const binder        = EventBinder();\n\n  /**\n   * Stores options and MediaQueryList object.\n   */\n  const queries: Array<[ Options, MediaQueryList ]> = [];\n\n  /**\n   * Called when the component is constructed.\n   */\n  function setup(): void {\n    const isMin = options.mediaQuery === 'min';\n\n    ownKeys( breakpoints )\n      .sort( ( n, m ) => isMin ? +n - +m : +m - +n )\n      .forEach( key => {\n        register( breakpoints[ key ], `(${ isMin ? 'min' : 'max' }-width:${ key }px)` );\n      } );\n\n    register( reducedMotion, MEDIA_PREFERS_REDUCED_MOTION );\n    update();\n  }\n\n  /**\n   * Destroys the component.\n   *\n   * @param completely - Will be `true` for complete destruction.\n   */\n  function destroy( completely: boolean ): void {\n    if ( completely ) {\n      binder.destroy();\n    }\n  }\n\n  /**\n   * Registers entries as [ Options, media query string ].\n   *\n   * @param options - Options merged to current options when the document matches the query.\n   * @param query   - A query string.\n   */\n  function register( options: Options, query: string ): void {\n    const queryList = matchMedia( query );\n    binder.bind( queryList, 'change', update );\n    queries.push( [ options, queryList ] );\n  }\n\n  /**\n   * Checks all media queries in entries and updates options.\n   */\n  function update(): void {\n    const destroyed = state.is( DESTROYED );\n    const direction = options.direction;\n    const merged = queries.reduce<Options>( ( merged, entry ) => {\n      return merge( merged, entry[ 1 ].matches ? entry[ 0 ] : {} );\n    }, {} );\n\n    omit( options );\n    set( merged );\n\n    if ( options.destroy ) {\n      Splide.destroy( options.destroy === 'completely' );\n    } else if ( destroyed ) {\n      destroy( true );\n      Splide.mount();\n    } else {\n      direction !== options.direction && Splide.refresh();\n    }\n  }\n\n  /**\n   * Disables or enables `reducedMotion` options.\n   * This method does nothing when the document does not match the query.\n   *\n   * @internal\n   *\n   * @param enable - Determines whether to apply `reducedMotion` options or not.\n   */\n  function reduce( enable: boolean ): void {\n    if ( matchMedia( MEDIA_PREFERS_REDUCED_MOTION ).matches ) {\n      enable ? merge( options, reducedMotion ) : omit( options, ownKeys( reducedMotion ) );\n    }\n  }\n\n  /**\n   * Sets current options or base options (prototype).\n   * If changing base options, always emits the `updated` event.\n   *\n   * @internal\n   *\n   * @param opts   - New options.\n   * @param base   - Optional. Determines whether to also update base options or not.\n   * @param notify - Optional. If `true`, always emits the `update` event.\n   */\n  function set( opts: Options, base?: boolean, notify?: boolean ): void {\n    merge( options, opts );\n    base && merge( Object.getPrototypeOf( options ), opts );\n\n    if ( notify || ! state.is( CREATED ) ) {\n      Splide.emit( EVENT_UPDATED, options );\n    }\n  }\n\n  return {\n    setup,\n    destroy,\n    reduce,\n    set,\n  };\n}\n","import { ALL_ATTRIBUTES, ARIA_LABEL, ARIA_LABELLEDBY, ARIA_ROLEDESCRIPTION, ROLE } from '../../constants/attributes';\nimport {\n  CLASS_ACTIVE,\n  CLASS_ARROW_NEXT,\n  CLASS_ARROW_PREV,\n  CLASS_ARROWS,\n  CLASS_CLONE,\n  CLASS_FOCUS_IN,\n  CLASS_LIST,\n  CLASS_PAGINATION,\n  CLASS_PROGRESS_BAR,\n  CLASS_ROOT,\n  CLASS_SLIDE,\n  CLASS_TOGGLE,\n  CLASS_TRACK,\n} from '../../constants/classes';\nimport { EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\nimport { PROJECT_CODE } from '../../constants/project';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport {\n  addClass,\n  assert,\n  assign,\n  child,\n  children,\n  empty,\n  forOwn,\n  getAttribute,\n  push,\n  query,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  toggleClass,\n  uniqueId,\n} from '../../utils';\nimport { closest } from '../../utils/dom/closest/closest';\nimport { POINTER_DOWN_EVENTS } from '../Drag/constants';\n\n\n/**\n * The interface for elements which the slider consists of.\n *\n * @since 3.0.0\n */\nexport interface ElementCollection {\n  root: HTMLElement;\n  track: HTMLElement;\n  list: HTMLElement;\n  slides: HTMLElement[];\n  arrows?: HTMLElement;\n  pagination?: HTMLUListElement;\n  prev?: HTMLButtonElement;\n  next?: HTMLButtonElement;\n  bar?: HTMLElement;\n  toggle?: HTMLElement;\n}\n\n/**\n * The interface for the Elements component.\n *\n * @since 3.0.0\n */\nexport interface ElementsComponent extends BaseComponent, ElementCollection {\n}\n\n/**\n * The component that collects and handles elements which the slider consists of.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Elements component object.\n */\nexport function Elements( Splide: Splide, Components: Components, options: Options ): ElementsComponent {\n  const { on, bind } = EventInterface( Splide );\n  const { root } = Splide;\n  const { i18n } = options;\n  const elements: ElementCollection = {} as ElementCollection;\n\n  /**\n   * Stores all slide elements.\n   */\n  const slides: HTMLElement[] = [];\n\n  /**\n   * Stores all root classes.\n   */\n  let rootClasses: string[] = [];\n\n  /**\n   * Stores all list classes.\n   */\n  let trackClasses: string[] = [];\n\n  /**\n   * The track element.\n   */\n  let track: HTMLElement;\n\n  /**\n   * The list element.\n   */\n  let list: HTMLElement;\n\n  /**\n   * Turns into `true` when detecting keydown, and `false` when detecting pointerdown.\n   */\n  let isUsingKey: boolean;\n\n  /**\n   * Called when the component is constructed.\n   */\n  function setup(): void {\n    collect();\n    init();\n    update();\n  }\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    on( EVENT_REFRESH, destroy );\n    on( EVENT_REFRESH, setup );\n    on( EVENT_UPDATED, update );\n\n    bind( document, `${ POINTER_DOWN_EVENTS } keydown`, e => {\n      isUsingKey = e.type === 'keydown';\n    }, { capture: true } );\n\n    bind( root, 'focusin', () => {\n      toggleClass( root, CLASS_FOCUS_IN, !! isUsingKey );\n    } );\n  }\n\n  /**\n   * Destroys the component.\n   *\n   * @param completely - Whether to destroy the component completely or not.\n   */\n  function destroy( completely?: boolean ): void {\n    const attrs = ALL_ATTRIBUTES.concat( 'style' );\n\n    empty( slides );\n    removeClass( root, rootClasses );\n    removeClass( track, trackClasses );\n    removeAttribute( [ track, list ], attrs );\n    removeAttribute( root, completely ? attrs : [ 'style', ARIA_ROLEDESCRIPTION ] );\n  }\n\n  /**\n   * Updates the status of elements.\n   */\n  function update(): void {\n    removeClass( root, rootClasses );\n    removeClass( track, trackClasses );\n\n    rootClasses  = getClasses( CLASS_ROOT );\n    trackClasses = getClasses( CLASS_TRACK );\n\n    addClass( root, rootClasses );\n    addClass( track, trackClasses );\n\n    setAttribute( root, ARIA_LABEL, options.label );\n    setAttribute( root, ARIA_LABELLEDBY, options.labelledby );\n  }\n\n  /**\n   * Collects elements which the slider consists of.\n   */\n  function collect(): void {\n    track = find( `.${ CLASS_TRACK }` );\n    list  = child( track, `.${ CLASS_LIST }` );\n\n    assert( track && list, 'A track/list element is missing.' );\n    push( slides, children( list, `.${ CLASS_SLIDE }:not(.${ CLASS_CLONE })` ) );\n\n    forOwn( {\n      arrows    : CLASS_ARROWS,\n      pagination: CLASS_PAGINATION,\n      prev      : CLASS_ARROW_PREV,\n      next      : CLASS_ARROW_NEXT,\n      bar       : CLASS_PROGRESS_BAR,\n      toggle    : CLASS_TOGGLE,\n    }, ( className, key ) => {\n      elements[ key ] = find( `.${ className }` );\n    } );\n\n    assign( elements, { root, track, list, slides } );\n  }\n\n  /**\n   * Initializes essential elements.\n   * Note that do not change the role of the root element,\n   * which removes the region from the accessibility tree.\n   */\n  function init(): void {\n    const id   = root.id || uniqueId( PROJECT_CODE );\n    const role = options.role;\n\n    root.id  = id;\n    track.id = track.id || `${ id }-track`;\n    list.id  = list.id || `${ id }-list`;\n\n    if ( ! getAttribute( root, ROLE ) && root.tagName !== 'SECTION' && role ) {\n      setAttribute( root, ROLE, role );\n    }\n\n    setAttribute( root, ARIA_ROLEDESCRIPTION, i18n.carousel );\n    setAttribute( list, ROLE, 'presentation' );\n  }\n\n  /**\n   * Finds an element only in this slider, ignoring elements in a nested slider.\n   *\n   * @return A found element or null.\n   */\n  function find( selector: string ): HTMLElement | undefined {\n    const elm = query<HTMLElement>( root, selector );\n    return elm && closest( elm, `.${ CLASS_ROOT }` ) === root ? elm : undefined;\n  }\n\n  /**\n   * Return an array with modifier classes.\n   *\n   * @param base - A base class name.\n   *\n   * @return An array with classes.\n   */\n  function getClasses( base: string ): string[] {\n    return [\n      `${ base }--${ options.type }`,\n      `${ base }--${ options.direction }`,\n      options.drag && `${ base }--draggable`,\n      options.isNavigation && `${ base }--nav`,\n      base === CLASS_ROOT && CLASS_ACTIVE,\n    ];\n  }\n\n  return assign( elements, {\n    setup,\n    mount,\n    destroy,\n  } );\n}\n","import { isFunction } from '../../type/type';\nimport { matches } from '../matches/matches';\n\n\n/**\n * Starts from the provided element, searches for the first element that matches the selector in ascendants.\n *\n * @param from     - An element to search from.\n * @param selector - A selector.\n *\n * @return The found element if available, or `null`.\n */\nexport function closest( from: HTMLElement, selector: string ): HTMLElement | null {\n  if ( isFunction( from.closest ) ) {\n    return from.closest( selector );\n  }\n\n  let elm: HTMLElement | null = from;\n\n  while ( elm && elm.nodeType === 1 ) {\n    if ( matches( elm, selector ) ) {\n      break;\n    }\n\n    elm = elm.parentElement;\n  }\n\n  return elm;\n}","import { EVENT_REFRESH, EVENT_RESIZE } from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\nimport {\n  addClass,\n  append,\n  apply,\n  before,\n  between,\n  empty,\n  forEach as forEachItem,\n  includes,\n  isFunction,\n  isHTMLElement,\n  isString,\n  matches,\n  parseHtml,\n  queryAll,\n  remove as removeNode,\n  toArray,\n} from '../../utils';\nimport { Slide, SlideComponent } from './Slide';\n\n\n/**\n * The interface for the Slides component.\n *\n * @since 3.0.0\n */\nexport interface SlidesComponent extends BaseComponent {\n  update(): void;\n  register( slide: HTMLElement, index: number, slideIndex: number ): void;\n  get( excludeClones?: boolean ): SlideComponent[];\n  getIn( page: number ): SlideComponent[];\n  getAt( index: number ): SlideComponent | undefined;\n  add( slide: string | Element | Array<string | Element>, index?: number ): void;\n  remove( selector: SlideMatcher ): void;\n  forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void;\n  filter( matcher: SlideMatcher ): SlideComponent[];\n  style( prop: string, value: string | number, useContainer?: boolean ): void\n  getLength( excludeClones?: boolean ): number;\n  isEnough(): boolean;\n}\n\n/**\n * The iteratee function for Slides.\n *\n * @since 3.0.0\n */\nexport type SlidesIteratee = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => void\n\n/**\n * The predicate function for Slides.\n *\n * @since 3.0.0\n */\nexport type SlidesPredicate = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => any\n\n/**\n * The type for filtering SlideComponent objects.\n *\n * @since 3.0.0\n */\nexport type SlideMatcher = number | number[] | string | SlidesPredicate;\n\n/**\n * The component for managing all slides include clones.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Slides component object.\n */\nexport function Slides( Splide: Splide, Components: Components, options: Options ): SlidesComponent {\n  const { on, emit, bind } = EventInterface( Splide );\n  const { slides, list } = Components.Elements;\n\n  /**\n   * Stores all SlideComponent objects.\n   */\n  const Slides: SlideComponent[] = [];\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( EVENT_REFRESH, destroy );\n    on( EVENT_REFRESH, init );\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    slides.forEach( ( slide, index ) => { register( slide, index, -1 ) } );\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    forEach( Slide => { Slide.destroy() } );\n    empty( Slides );\n  }\n\n  /**\n   * Manually updates the status of all slides.\n   */\n  function update(): void {\n    forEach( Slide => { Slide.update() } );\n  }\n\n  /**\n   * Registers a slide element and creates a Slide object.\n   * Needs to sort every time when a new slide is registered especially for clones.\n   *\n   * @param slide      - A slide element to register.\n   * @param index      - A slide index.\n   * @param slideIndex - A slide index for clones. This must be `-1` for regular slides.\n   */\n  function register( slide: HTMLElement, index: number, slideIndex: number ): void {\n    const object = Slide( Splide, index, slideIndex, slide );\n    object.mount();\n    Slides.push( object );\n    Slides.sort( ( Slide1, Slide2 ) => Slide1.index - Slide2.index );\n  }\n\n  /**\n   * Returns all Slide objects.\n   *\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\n   *\n   * @return An array with Slide objects.\n   */\n  function get( excludeClones?: boolean ): SlideComponent[] {\n    return excludeClones ? filter( Slide => ! Slide.isClone ) : Slides;\n  }\n\n  /**\n   * Returns slides in the specified page.\n   *\n   * @param page - A page index.\n   *\n   * @return An array with slides that belong to the page.\n   */\n  function getIn( page: number ): SlideComponent[] {\n    const { Controller } = Components;\n    const index = Controller.toIndex( page );\n    const max   = Controller.hasFocus() ? 1 : options.perPage;\n    return filter( Slide => between( Slide.index, index, index + max - 1 ) );\n  }\n\n  /**\n   * Returns a Slide object at the specified index.\n   *\n   * @param index - A slide index.\n   *\n   * @return A Slide object if available, or otherwise `undefined`.\n   */\n  function getAt( index: number ): SlideComponent | undefined {\n    return filter( index )[ 0 ];\n  }\n\n  /**\n   * Inserts a slide or slides at a specified index.\n   *\n   * @param items - A slide element, an HTML string or an array with them.\n   * @param index - Optional. An index to insert the slide at. If omitted, appends it to the list.\n   */\n  function add( items: string | Element | Array<string | Element>, index?: number ): void {\n    forEachItem( items, slide => {\n      if ( isString( slide ) ) {\n        slide = parseHtml( slide );\n      }\n\n      if ( isHTMLElement( slide ) ) {\n        const ref = slides[ index ];\n        ref ? before( slide, ref ) : append( list, slide );\n        addClass( slide, options.classes.slide );\n        observeImages( slide, apply( emit, EVENT_RESIZE ) );\n      }\n    } );\n\n    emit( EVENT_REFRESH );\n  }\n\n  /**\n   * Removes slides that match the matcher\n   * that can be an index, an array with indices, a selector, or an iteratee function.\n   *\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\n   */\n  function remove( matcher: SlideMatcher ): void {\n    removeNode( filter( matcher ).map( Slide => Slide.slide ) );\n    emit( EVENT_REFRESH );\n  }\n\n  /**\n   * Iterates over Slide objects by the iteratee function.\n   *\n   * @param iteratee      - An iteratee function that takes a Slide object, an index and an array with Slides.\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\n   */\n  function forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void {\n    get( excludeClones ).forEach( iteratee );\n  }\n\n  /**\n   * Filters Slides by the matcher\n   * that can be an index, an array with indices, a selector, or a predicate function.\n   *\n   * @param matcher - An index, an array with indices, a selector string, or a predicate function.\n   *\n   * @return An array with SlideComponent objects.\n   */\n  function filter( matcher: SlideMatcher ): SlideComponent[] {\n    return Slides.filter( isFunction( matcher )\n      ? matcher\n      : Slide => isString( matcher )\n        ? matches( Slide.slide, matcher )\n        : includes( toArray( matcher ), Slide.index )\n    );\n  }\n\n  /**\n   * Adds a CSS rule to all slides or containers.\n   *\n   * @param prop         - A property name.\n   * @param value        - A CSS value to add.\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\n   */\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\n    forEach( Slide => { Slide.style( prop, value, useContainer ) } );\n  }\n\n  /**\n   * Invokes the callback after all images in the element are loaded.\n   *\n   * @param elm      - An element that may contain images.\n   * @param callback - A callback function.\n   */\n  function observeImages( elm: Element, callback: AnyFunction ): void {\n    const images = queryAll( elm, 'img' );\n    let { length } = images;\n\n    if ( length ) {\n      images.forEach( img => {\n        bind( img, 'load error', () => {\n          if ( ! --length ) {\n            callback();\n          }\n        } );\n      } );\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * Returns the length of slides.\n   *\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\n   *\n   * @return The length of slides.\n   */\n  function getLength( excludeClones?: boolean ): number {\n    return excludeClones ? slides.length : Slides.length;\n  }\n\n  /**\n   * Checks if the number of slides is over than the `perPage` option, including clones.\n   *\n   * @return `true` if there are enough slides, or otherwise `false`.\n   */\n  function isEnough(): boolean {\n    return Slides.length > options.perPage;\n  }\n\n  return {\n    mount,\n    destroy,\n    update,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove,\n    forEach,\n    filter,\n    style,\n    getLength,\n    isEnough,\n  };\n}\n","import { TTB } from '../../constants/directions';\nimport { EVENT_OVERFLOW, EVENT_REFRESH, EVENT_RESIZE, EVENT_RESIZED, EVENT_UPDATED } from '../../constants/events';\nimport { EventInterface, Throttle } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { abs, apply, assert, isObject, rect, style, toggleClass, unit } from '../../utils';\nimport { FADE } from '../../constants/types';\nimport { CLASS_OVERFLOW } from '../../constants/classes';\n\n\n/**\n * The interface for the Layout component.\n *\n * @since 3.0.0\n */\nexport interface LayoutComponent extends BaseComponent {\n  listSize(): number;\n  slideSize( index: number, withoutGap?: boolean ): number;\n  sliderSize( withoutGap?: boolean ): number;\n  totalSize( index?: number, withoutGap?: boolean ): number;\n  getPadding( right: boolean ): number;\n  isOverflow(): boolean;\n\n  /** @internal */\n  resize( force?: boolean ): void;\n}\n\n/**\n * The component that adjusts slider styles and provides methods for dimensions.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Layout component object.\n */\nexport function Layout( Splide: Splide, Components: Components, options: Options ): LayoutComponent {\n  const { on, bind, emit } = EventInterface( Splide );\n  const { Slides } = Components;\n  const { resolve } = Components.Direction;\n  const { root, track, list } = Components.Elements;\n  const { getAt, style: styleSlides } = Slides;\n\n  /**\n   * Indicates whether the slider direction is vertical or not.\n   */\n  let vertical: boolean;\n\n  /**\n   * Keeps the DOMRect object of the root element.\n   */\n  let rootRect: DOMRect;\n\n  /**\n   * Turns into `true` when the carousel is wider than the list.\n   */\n  let overflow: boolean;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    bind( window, 'resize load', Throttle( apply( emit, EVENT_RESIZE ) ) );\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\n    on( EVENT_RESIZE, resize );\n  }\n\n  /**\n   * Initializes the component on `mount` or `updated`.\n   * Uses `max-width` for the root to prevent the slider from exceeding the parent element.\n   */\n  function init(): void {\n    vertical = options.direction === TTB;\n\n    style( root, 'maxWidth', unit( options.width ) );\n    style( track, resolve( 'paddingLeft' ), cssPadding( false ) );\n    style( track, resolve( 'paddingRight' ), cssPadding( true ) );\n\n    resize( true );\n  }\n\n  /**\n   * Updates dimensions of some elements when the carousel is resized.\n   * Also checks the carousel size and emits `overflow` events when it exceeds the list width.\n   *\n   * @param force - Skips checking the root dimension change and always performs the resizing process.\n   */\n  function resize( force?: boolean ): void {\n    const newRect = rect( root );\n\n    if ( force || rootRect.width !== newRect.width || rootRect.height !== newRect.height ) {\n      style( track, 'height', cssTrackHeight() );\n\n      styleSlides( resolve( 'marginRight' ), unit( options.gap ) );\n      styleSlides( 'width', cssSlideWidth() );\n      styleSlides( 'height', cssSlideHeight(), true );\n\n      rootRect = newRect;\n      emit( EVENT_RESIZED );\n\n      if ( overflow !== ( overflow = isOverflow() ) ) {\n        toggleClass( root, CLASS_OVERFLOW, overflow );\n        emit( EVENT_OVERFLOW, overflow );\n      }\n    }\n  }\n\n  /**\n   * Parses the padding option and returns the value for each side.\n   * This method returns `paddingTop` or `paddingBottom` for the vertical slider.\n   *\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\n   *\n   * @return The padding value as a CSS string.\n   */\n  function cssPadding( right: boolean ): string {\n    const { padding } = options;\n    const prop = resolve( right ? 'right' : 'left' );\n    return padding\n      && unit( padding[ prop ] || ( isObject( padding ) ? 0 : padding ) )\n      || '0px';\n  }\n\n  /**\n   * Returns the height of the track element as a CSS string.\n   *\n   * @return The height of the track.\n   */\n  function cssTrackHeight(): string {\n    let height = '';\n\n    if ( vertical ) {\n      height = cssHeight();\n      assert( height, 'height or heightRatio is missing.' );\n      height = `calc(${ height } - ${ cssPadding( false ) } - ${ cssPadding( true ) })`;\n    }\n\n    return height;\n  }\n\n  /**\n   * Converts options related with height to a CSS string.\n   *\n   * @return The height as a CSS string if available, or otherwise an empty string.\n   */\n  function cssHeight(): string {\n    return unit( options.height || rect( list ).width * options.heightRatio );\n  }\n\n  /**\n   * Returns the width of the slide as a CSS string.\n   *\n   * @return The width of the slide.\n   */\n  function cssSlideWidth(): string | null {\n    return options.autoWidth\n      ? null\n      : unit( options.fixedWidth ) || ( vertical ? '' : cssSlideSize() );\n  }\n\n  /**\n   * Returns the height of the slide as a CSS string.\n   *\n   * @return The height of the slide.\n   */\n  function cssSlideHeight(): string | null {\n    return unit( options.fixedHeight )\n      || ( vertical ? ( options.autoHeight ? null : cssSlideSize() ) : cssHeight() );\n  }\n\n  /**\n   * Returns the CSS string for slide width or height without gap.\n   *\n   * @return The CSS string for slide width or height.\n   */\n  function cssSlideSize(): string {\n    const gap = unit( options.gap );\n    return `calc((100%${ gap && ` + ${ gap }` })/${ options.perPage || 1 }${ gap && ` - ${ gap }` })`;\n  }\n\n  /**\n   * Returns the list width for the horizontal slider, or the height for the vertical slider.\n   *\n   * @return The size of the list element in pixel.\n   */\n  function listSize(): number {\n    return rect( list )[ resolve( 'width' ) ];\n  }\n\n  /**\n   * Returns the slide width for the horizontal slider, or the height for the vertical slider.\n   *\n   * @param index      - Optional. A slide index.\n   * @param withoutGap - Optional. Determines whether to exclude the gap amount or not.\n   *\n   * @return The size of the specified slide element in pixel.\n   */\n  function slideSize( index?: number, withoutGap?: boolean ): number {\n    const Slide = getAt( index || 0 );\n    return Slide\n      ? rect( Slide.slide )[ resolve( 'width' ) ] + ( withoutGap ? 0 : getGap() )\n      : 0;\n  }\n\n  /**\n   * Returns the total width or height of slides from the head of the slider to the specified index.\n   * This includes sizes of clones before the first slide.\n   *\n   * @param index      - A slide index. If omitted, uses the last index.\n   * @param withoutGap - Optional. Determines whether to exclude the last gap or not.\n   *\n   * @return The total width of slides in the horizontal slider, or the height in the vertical one.\n   */\n  function totalSize( index: number, withoutGap?: boolean ): number {\n    const Slide = getAt( index );\n\n    if ( Slide ) {\n      const right = rect( Slide.slide )[ resolve( 'right' ) ];\n      const left  = rect( list )[ resolve( 'left' ) ];\n      return abs( right - left ) + ( withoutGap ? 0 : getGap() );\n    }\n\n    return 0;\n  }\n\n  /**\n   * Returns the slider size without clones before the first slide.\n   * Do not use the clone's size because it's unstable while initializing and refreshing process.\n   *\n   * @param withoutGap - Optional. Determines whether to exclude the last gap or not.\n   *\n   * @return The width or height of the slider without clones.\n   */\n  function sliderSize( withoutGap?: boolean ): number {\n    return totalSize( Splide.length - 1 ) - totalSize( 0 ) + slideSize( 0, withoutGap );\n  }\n\n  /**\n   * Returns the gap value in pixel by using the computed style of the first slide.\n   *\n   * @return The gap value in pixel.\n   */\n  function getGap(): number {\n    const Slide = getAt( 0 );\n    return Slide && parseFloat( style( Slide.slide, resolve( 'marginRight' ) ) ) || 0;\n  }\n\n  /**\n   * Returns the padding value.\n   * This method resolves the difference of the direction.\n   *\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\n   *\n   * @return The padding value in pixel.\n   */\n  function getPadding( right: boolean ): number {\n    return parseFloat( style( track, resolve( `padding${ right ? 'Right' : 'Left' }` ) ) ) || 0;\n  }\n\n  /**\n   * Checks if the carousel is wider than the list.\n   * This method always returns `true` for a fade carousel.\n   *\n   * @return `true` if the carousel is wider than the list, or otherwise `false`.\n   */\n  function isOverflow(): boolean {\n    return Splide.is( FADE ) || sliderSize( true ) > listSize();\n  }\n\n  return {\n    mount,\n    resize,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding,\n    isOverflow,\n  };\n}\n","import { AnyFunction } from '../../types';\nimport { RequestInterval } from '../RequestInterval/RequestInterval';\n\n\n/**\n * The interface for the returning value of the RequestInterval.\n *\n * @since 3.0.0\n */\nexport interface ThrottleInstance<F extends AnyFunction> extends Function {\n  ( ...args: Parameters<F> ): void;\n}\n\n/**\n * Returns the throttled function.\n *\n * @param func     - A function to throttle.\n * @param duration - Optional. Throttle duration in milliseconds.\n *\n * @return A throttled function.\n */\nexport function Throttle<F extends AnyFunction>(\n  func: F,\n  duration?: number\n): ThrottleInstance<F> {\n  const interval = RequestInterval( duration || 0, func, null, 1 );\n\n  return () => {\n    interval.isPaused() && interval.start();\n  };\n}\n","import { EVENT_REFRESH, EVENT_RESIZE, EVENT_UPDATED } from '../../constants/events';\nimport { LOOP } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { addClass, append, before, ceil, empty, isUndefined, pad, push, rect, remove } from '../../utils';\n\n\n/**\n * The interface for the Clone component.\n *\n * @since 3.0.0\n */\nexport interface ClonesComponent extends BaseComponent {\n}\n\n/**\n * The multiplier to determine the number of clones.\n *\n * @since 4.0.0\n */\nexport const MULTIPLIER = 2;\n\n/**\n * The component that generates clones for the loop slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Clones component object.\n */\nexport function Clones( Splide: Splide, Components: Components, options: Options ): ClonesComponent {\n  const event = EventInterface( Splide );\n  const { on } = event;\n  const { Elements, Slides } = Components;\n  const { resolve } = Components.Direction;\n\n  /**\n   * Stores all cloned elements.\n   */\n  const clones: HTMLElement[] = [];\n\n  /**\n   * Keeps the current number of clones.\n   */\n  let cloneCount: number;\n\n  /**\n   * Called when the component is mounted.\n   * Needs to remount the component on refresh, otherwise `refresh` event will be triggered again while refreshing.\n   */\n  function mount(): void {\n    on( EVENT_REFRESH, remount );\n    on( [ EVENT_UPDATED, EVENT_RESIZE ], observe );\n\n    if ( ( cloneCount = computeCloneCount() ) ) {\n      generate( cloneCount );\n      Components.Layout.resize( true );\n    }\n  }\n\n  /**\n   * Remounts the component.\n   */\n  function remount(): void {\n    destroy();\n    mount();\n  }\n\n  /**\n   * Destroys clones.\n   */\n  function destroy(): void {\n    remove( clones );\n    empty( clones );\n    event.destroy();\n  }\n\n  /**\n   * Observes the required clone count and refreshes the slider if necessary.\n   */\n  function observe(): void {\n    const count = computeCloneCount();\n\n    if ( cloneCount !== count ) {\n      if ( cloneCount < count || ! count ) {\n        event.emit( EVENT_REFRESH );\n      }\n    }\n  }\n\n  /**\n   * Generates the specified number of clones.\n   *\n   * @param count - The number of clones to generate for each side.\n   */\n  function generate( count: number ): void {\n    const slides = Slides.get().slice();\n    const { length } = slides;\n\n    if ( length ) {\n      while ( slides.length < count ) {\n        push( slides, slides );\n      }\n\n      push( slides.slice( -count ), slides.slice( 0, count ) ).forEach( ( Slide, index ) => {\n        const isHead = index < count;\n        const clone  = cloneDeep( Slide.slide, index );\n        isHead ? before( clone, slides[ 0 ].slide ) : append( Elements.list, clone );\n        push( clones, clone );\n        Slides.register( clone, index - count + ( isHead ? 0 : length ), Slide.index );\n      } );\n    }\n  }\n\n  /**\n   * Deeply clones the provided element with removing the ID attribute.\n   *\n   * @param elm   - An element to clone.\n   * @param index - An index of the clone.\n   *\n   * @return A cloned element.\n   */\n  function cloneDeep( elm: HTMLElement, index: number ): HTMLElement {\n    const clone = elm.cloneNode( true ) as HTMLElement;\n    addClass( clone, options.classes.clone );\n    clone.id = `${ Splide.root.id }-clone${ pad( index + 1 ) }`;\n    return clone;\n  }\n\n  /**\n   * Returns the number of elements to generate.\n   * This always returns 0 if the slider type is not `'loop'`.\n   *\n   * @return The number of clones.\n   */\n  function computeCloneCount(): number {\n    let { clones } = options;\n\n    if ( ! Splide.is( LOOP ) ) {\n      clones = 0;\n    } else if ( isUndefined( clones ) ) {\n      const fixedSize  = options[ resolve( 'fixedWidth' ) ] && Components.Layout.slideSize( 0 );\n      const fixedCount = fixedSize && ceil( rect( Elements.track )[ resolve( 'width' ) ] / fixedSize );\n      clones = fixedCount || ( options[ resolve( 'autoWidth' ) ] && Splide.length ) || options.perPage * MULTIPLIER;\n    }\n\n    return clones;\n  }\n\n  return {\n    mount,\n    destroy,\n  };\n}\n","import {\n  EVENT_MOUNTED,\n  EVENT_MOVE,\n  EVENT_MOVED,\n  EVENT_REFRESH,\n  EVENT_RESIZED,\n  EVENT_SHIFTED,\n  EVENT_UPDATED,\n} from '../../constants/events';\nimport { IDLE, MOVING } from '../../constants/states';\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { AnyFunction, BaseComponent, Components, Options, TransitionComponent } from '../../types';\nimport { abs, ceil, clamp, isUndefined, rect, style } from '../../utils';\n\n\n/**\n * The interface for the Move component.\n *\n * @since 3.0.0\n */\nexport interface MoveComponent extends BaseComponent {\n  move( dest: number, index: number, prev: number, callback?: AnyFunction ): void;\n  jump( index: number ): void;\n  translate( position: number, preventLoop?: boolean ): void;\n  shift( position: number, backwards: boolean ): number;\n  cancel(): void;\n  toIndex( position: number ): number;\n  toPosition( index: number, trimming?: boolean ): number;\n  getPosition(): number;\n  getLimit( max: boolean ): number;\n  exceededLimit( max?: boolean | undefined, position?: number ): boolean;\n\n  /** @internal */\n  reposition(): void;\n}\n\n/**\n * The component for moving the slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Move component object.\n */\nexport function Move( Splide: Splide, Components: Components, options: Options ): MoveComponent {\n  const { on, emit } = EventInterface( Splide );\n  const { set } = Splide.state;\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components.Layout;\n  const { resolve, orient } = Components.Direction;\n  const { list, track } = Components.Elements;\n\n  /**\n   * Holds the Transition component.\n   */\n  let Transition: TransitionComponent;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    Transition = Components.Transition;\n    on( [ EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH ], reposition );\n  }\n\n  /**\n   * Repositions the slider.\n   * - Do not call `cancel()` here because LazyLoad may emit resize while transitioning.\n   * - iOS Safari emits window resize event while the user swipes the slider because of the bottom bar.\n   */\n  function reposition(): void {\n    if ( ! Components.Controller.isBusy() ) {\n      Components.Scroll.cancel();\n      jump( Splide.index );\n      Components.Slides.update();\n    }\n  }\n\n  /**\n   * Moves the slider to the dest index with the Transition component.\n   *\n   * @param dest     - A destination index to go to, including clones'.\n   * @param index    - A slide index.\n   * @param prev     - A previous index.\n   * @param callback - Optional. A callback function invoked after transition ends.\n   */\n  function move( dest: number, index: number, prev: number, callback?: AnyFunction ): void {\n    if ( dest !== index && canShift( dest > prev ) ) {\n      cancel();\n      translate( shift( getPosition(), dest > prev ), true );\n    }\n\n    set( MOVING );\n    emit( EVENT_MOVE, index, prev, dest );\n\n    Transition.start( index, () => {\n      set( IDLE );\n      emit( EVENT_MOVED, index, prev, dest );\n      callback && callback();\n    } );\n  }\n\n  /**\n   * Jumps to the slide at the specified index.\n   *\n   * @param index - An index to jump to.\n   */\n  function jump( index: number ): void {\n    translate( toPosition( index, true ) );\n  }\n\n  /**\n   * Moves the slider to the provided position.\n   *\n   * @param position    - The position to move to.\n   * @param preventLoop - Optional. If `true`, sets the provided position as is.\n   */\n  function translate( position: number, preventLoop?: boolean ): void {\n    if ( ! Splide.is( FADE ) ) {\n      const destination = preventLoop ? position : loop( position );\n      style( list, 'transform', `translate${ resolve( 'X' ) }(${ destination }px)` );\n      position !== destination && emit( EVENT_SHIFTED );\n    }\n  }\n\n  /**\n   * Loops the provided position if it exceeds bounds (limit indices).\n   *\n   * @param position - A position to loop.\n   */\n  function loop( position: number ): number {\n    if ( Splide.is( LOOP ) ) {\n      const index       = toIndex( position );\n      const exceededMax = index > Components.Controller.getEnd();\n      const exceededMin = index < 0;\n\n      if ( exceededMin || exceededMax ) {\n        position = shift( position, exceededMax );\n      }\n    }\n\n    return position;\n  }\n\n  /**\n   * Adds or subtracts the slider width to the provided position.\n   *\n   * @param position  - A position to shift.\n   * @param backwards - Determines whether to shift the slider backwards or forwards.\n   *\n   * @return The shifted position.\n   */\n  function shift( position: number, backwards: boolean ): number {\n    const excess = position - getLimit( backwards );\n    const size   = sliderSize();\n    position -= orient( size * ( ceil( abs( excess ) / size ) || 1 ) ) * ( backwards ? 1 : -1 );\n    return position;\n  }\n\n  /**\n   * Cancels transition.\n   */\n  function cancel(): void {\n    translate( getPosition(), true );\n    Transition.cancel();\n  }\n\n  /**\n   * Returns the closest index to the position.\n   *\n   * @param position - A position to convert.\n   *\n   * @return The closest index to the position.\n   */\n  function toIndex( position: number ): number {\n    const Slides = Components.Slides.get();\n\n    let index       = 0;\n    let minDistance = Infinity;\n\n    for ( let i = 0; i < Slides.length; i++ ) {\n      const slideIndex = Slides[ i ].index;\n      const distance   = abs( toPosition( slideIndex, true ) - position );\n\n      if ( distance <= minDistance ) {\n        minDistance = distance;\n        index       = slideIndex;\n      } else {\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  /**\n   * Converts the slide index to the position.\n   *\n   * @param index    - An index to convert.\n   * @param trimming - Optional. Whether to trim edge spaces or not.\n   *\n   * @return The position corresponding with the index.\n   */\n  function toPosition( index: number, trimming?: boolean ): number {\n    const position = orient( totalSize( index - 1 ) - offset( index ) );\n    return trimming ? trim( position ) : position;\n  }\n\n  /**\n   * Returns the current position.\n   *\n   * @return The position of the list element.\n   */\n  function getPosition(): number {\n    const left = resolve( 'left' );\n    return rect( list )[ left ] - rect( track )[ left ] + orient( getPadding( false ) );\n  }\n\n  /**\n   * Trims spaces on the edge of the slider.\n   *\n   * @param position - A position to trim.\n   *\n   * @return A trimmed position.\n   */\n  function trim( position: number ): number {\n    if ( options.trimSpace && Splide.is( SLIDE ) ) {\n      position = clamp( position, 0, orient( sliderSize( true ) - listSize() ) );\n    }\n\n    return position;\n  }\n\n  /**\n   * Returns the offset amount.\n   *\n   * @param index - An index.\n   */\n  function offset( index: number ): number {\n    const { focus } = options;\n    return focus === 'center' ? ( listSize() - slideSize( index, true ) ) / 2 : +focus * slideSize( index ) || 0;\n  }\n\n  /**\n   * Returns the limit number that the slider can move to.\n   *\n   * @param max - Determines whether to return the maximum or minimum limit.\n   *\n   * @return The border number.\n   */\n  function getLimit( max: boolean ): number {\n    return toPosition( max ? Components.Controller.getEnd() : 0, !! options.trimSpace );\n  }\n\n  /**\n   * Checks if there is enough width to shift the slider.\n   *\n   * @param backwards - `true` for checking backwards, or `false` for doing forwards.\n   *\n   * @return `true` if the slider can be shifted for the specified direction, or otherwise `false`.\n   */\n  function canShift( backwards: boolean ): boolean {\n    const shifted = orient( shift( getPosition(), backwards ) );\n    return backwards\n      ? shifted >= 0\n      : shifted <= list[ resolve( 'scrollWidth' ) ] - rect( track )[ resolve( 'width' ) ];\n  }\n\n  /**\n   * Checks if the provided position exceeds the minimum or maximum limit or not.\n   *\n   * @param max      - Optional. `true` for testing max, `false` for min, and `undefined` for both.\n   * @param position - Optional. A position to test. If omitted, tests the current position.\n   *\n   * @return `true` if the position exceeds the limit, or otherwise `false`.\n   */\n  function exceededLimit( max?: boolean | undefined, position?: number ): boolean {\n    position = isUndefined( position ) ? getPosition() : position;\n    const exceededMin = max !== true && orient( position ) < orient( getLimit( false ) );\n    const exceededMax = max !== false && orient( position ) > orient( getLimit( true ) );\n    return exceededMin || exceededMax;\n  }\n\n  return {\n    mount,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    exceededLimit,\n    reposition,\n  };\n}\n","import { EVENT_END_INDEX_CHANGED, EVENT_REFRESH, EVENT_RESIZED, EVENT_UPDATED } from '../../constants/events';\nimport { MOVING, SCROLLING } from '../../constants/states';\nimport { LOOP, SLIDE } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\nimport { apply, approximatelyEqual, between, clamp, floor, isString, isUndefined, min } from '../../utils';\n\n\n/**\n * The interface for the Controller component.\n *\n * @since 3.0.0\n */\nexport interface ControllerComponent extends BaseComponent {\n  go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void;\n  scroll( destination: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void;\n  getNext( destination?: boolean ): number;\n  getPrev( destination?: boolean ): number;\n  getEnd(): number;\n  setIndex( index: number ): void;\n  getIndex( prev?: boolean ): number;\n  toIndex( page: number ): number;\n  toPage( index: number ): number;\n  toDest( position: number ): number;\n  hasFocus(): boolean;\n  isBusy(): boolean;\n\n  /** @internal */\n  getAdjacent( prev: boolean, destination?: boolean ): number;\n}\n\n/**\n * The component for controlling the slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Controller component object.\n */\nexport function Controller( Splide: Splide, Components: Components, options: Options ): ControllerComponent {\n  const { on, emit } = EventInterface( Splide );\n  const { Move } = Components;\n  const { getPosition, getLimit, toPosition } = Move;\n  const { isEnough, getLength } = Components.Slides;\n  const { omitEnd } = options;\n  const isLoop  = Splide.is( LOOP );\n  const isSlide = Splide.is( SLIDE );\n  const getNext = apply( getAdjacent, false );\n  const getPrev = apply( getAdjacent, true );\n\n  /**\n   * The current index.\n   */\n  let currIndex = options.start || 0;\n\n  /**\n   * The latest end index.\n   */\n  let endIndex: number;\n\n  /**\n   * The previous index.\n   */\n  let prevIndex = currIndex;\n\n  /**\n   * The latest number of slides.\n   */\n  let slideCount: number;\n\n  /**\n   * The latest `perMove` value.\n   */\n  let perMove: number;\n\n  /**\n   * The latest `perMove` value.\n   */\n  let perPage: number;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( [ EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED ], init );\n    on( EVENT_RESIZED, onResized );\n  }\n\n  /**\n   * Initializes some parameters.\n   * Needs to check the number of slides since the current index may be out of the range after refresh.\n   * The process order must be Elements -> Controller -> Move.\n   */\n  function init(): void {\n    slideCount = getLength( true );\n    perMove    = options.perMove;\n    perPage    = options.perPage;\n    endIndex   = getEnd();\n\n    const index = clamp( currIndex, 0, omitEnd ? endIndex : slideCount - 1 );\n\n    if ( index !== currIndex ) {\n      currIndex = index;\n      Move.reposition();\n    }\n  }\n\n  /**\n   * Called when the viewport width is changed.\n   * The end index can change if `autoWidth` or `fixedWidth` is enabled.\n   */\n  function onResized(): void {\n    if ( endIndex !== getEnd() ) {\n      emit( EVENT_END_INDEX_CHANGED );\n    }\n  }\n\n  /**\n   * Moves the slider by the control pattern.\n   *\n   * @see `Splide#go()`\n   *\n   * @param control        - A control pattern.\n   * @param allowSameIndex - Optional. Determines whether to allow to go to the current index or not.\n   * @param callback       - Optional. A callback function invoked after transition ends.\n   */\n  function go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void {\n    if ( ! isBusy() ) {\n      const dest  = parse( control );\n      const index = loop( dest );\n\n      if ( index > -1 && ( allowSameIndex || index !== currIndex ) ) {\n        setIndex( index );\n        Move.move( dest, index, prevIndex, callback );\n      }\n    }\n  }\n\n  /**\n   * Scrolls the slider to the specified destination with updating indices.\n   *\n   * @param destination - The position to scroll the slider to.\n   * @param duration    - Optional. Specifies the scroll duration.\n   * @param snap        - Optional. Whether to snap the slider to the closest slide or not.\n   * @param callback    - Optional. A callback function invoked after scroll ends.\n   */\n  function scroll( destination: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void {\n    Components.Scroll.scroll( destination, duration, snap, () => {\n      const index = loop( Move.toIndex( getPosition() ) );\n      setIndex( omitEnd ? min( index, endIndex ) : index );\n      callback && callback();\n    } );\n  }\n\n  /**\n   * Parses the control and returns a slide index.\n   *\n   * @param control - A control pattern to parse.\n   *\n   * @return A `dest` index.\n   */\n  function parse( control: number | string ): number {\n    let index = currIndex;\n\n    if ( isString( control ) ) {\n      const [ , indicator, number ] = control.match( /([+\\-<>])(\\d+)?/ ) || [];\n\n      if ( indicator === '+' || indicator === '-' ) {\n        index = computeDestIndex( currIndex + +`${ indicator }${ +number || 1 }`, currIndex );\n      } else if ( indicator === '>' ) {\n        index = number ? toIndex( +number ) : getNext( true );\n      } else if ( indicator === '<' ) {\n        index = getPrev( true );\n      }\n    } else {\n      index = isLoop ? control : clamp( control, 0, endIndex );\n    }\n\n    return index;\n  }\n\n  /**\n   * Returns an adjacent destination index.\n   *\n   * @internal\n   *\n   * @param prev        - Determines whether to return a previous or next index.\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\n   *\n   * @return An adjacent index if available, or otherwise `-1`.\n   */\n  function getAdjacent( prev: boolean, destination?: boolean ): number {\n    const number = perMove || ( hasFocus() ? 1 : perPage );\n    const dest   = computeDestIndex( currIndex + number * ( prev ? -1 : 1 ), currIndex, ! ( perMove || hasFocus() ) );\n\n    if ( dest === -1 && isSlide ) {\n      if ( ! approximatelyEqual( getPosition(), getLimit( ! prev ), 1 ) ) {\n        return prev ? 0 : endIndex;\n      }\n    }\n\n    return destination ? dest : loop( dest );\n  }\n\n  /**\n   * Converts the desired destination index to the valid one.\n   * - If the `move` option is `true`, finds the dest index whose position is different with the current one.\n   * - This may return clone indices if the editor is the loop mode,\n   *   or `-1` if there is no slide to go.\n   * - There are still slides where the carousel can go if borders are between `from` and `dest`.\n   * - If `focus` is available, needs to calculate the dest index even if there are enough number of slides.\n   *\n   * @param dest     - The desired destination index.\n   * @param from     - A base index.\n   * @param snapPage - Optional. Whether to snap a page or not.\n   *\n   * @return A converted destination index, including clones.\n   */\n  function computeDestIndex( dest: number, from: number, snapPage?: boolean ): number {\n    if ( isEnough() || hasFocus() ) {\n      const index = computeMovableDestIndex( dest );\n\n      if ( index !== dest ) {\n        from     = dest;\n        dest     = index;\n        snapPage = false;\n      }\n\n      if ( dest < 0 || dest > endIndex ) {\n        if ( ! perMove && ( between( 0, dest, from, true ) || between( endIndex, from, dest, true ) ) ) {\n          dest = toIndex( toPage( dest ) );\n        } else {\n          if ( isLoop ) {\n            dest = snapPage\n              ? dest < 0 ? - ( slideCount % perPage || perPage ) : slideCount\n              : dest;\n          } else if ( options.rewind ) {\n            dest = dest < 0 ? endIndex : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if ( snapPage && dest !== from ) {\n          dest = toIndex( toPage( from ) + ( dest < from ? -1 : 1 ) );\n        }\n      }\n    } else {\n      dest = -1;\n    }\n\n    return dest;\n  }\n\n  /**\n   * Finds the dest index whose position is different with the current one for `trimSpace: 'move'`.\n   * This can be negative or greater than `length - 1`.\n   *\n   * @param dest - A dest index.\n   *\n   * @return A dest index.\n   */\n  function computeMovableDestIndex( dest: number ): number {\n    if ( isSlide && options.trimSpace === 'move' && dest !== currIndex ) {\n      const position = getPosition();\n\n      while ( position === toPosition( dest, true ) && between( dest, 0, Splide.length - 1, ! options.rewind ) ) {\n        dest < currIndex ? --dest : ++dest;\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Loops the provided index only in the loop mode.\n   *\n   * @param index - An index to loop.\n   *\n   * @return A looped index.\n   */\n  function loop( index: number ): number {\n    return isLoop ? ( index + slideCount ) % slideCount || 0 : index;\n  }\n\n  /**\n   * Returns the end index where the slider can go.\n   * For example, if the slider has 10 slides and the `perPage` option is 3,\n   * the slider can go to the slide 8 (the index is 7).\n   * If the `omitEnd` option is available, computes the index from the slide position.\n   *\n   * @return An end index.\n   */\n  function getEnd(): number {\n    let end = slideCount - ( hasFocus() || ( isLoop && perMove ) ? 1 : perPage );\n\n    while ( omitEnd && end-- > 0 ) {\n      if ( toPosition( slideCount - 1, true ) !== toPosition( end, true ) ) {\n        end++;\n        break;\n      }\n    }\n\n    return clamp( end, 0, slideCount - 1 );\n  }\n\n  /**\n   * Converts the page index to the slide index.\n   *\n   * @param page - A page index to convert.\n   *\n   * @return A slide index.\n   */\n  function toIndex( page: number ): number {\n    return clamp( hasFocus() ? page : perPage * page, 0, endIndex );\n  }\n\n  /**\n   * Converts the slide index to the page index.\n   *\n   * @param index - An index to convert.\n   *\n   * @return A page index.\n   */\n  function toPage( index: number ): number {\n    return hasFocus()\n      ? min( index, endIndex )\n      : floor( ( index >= endIndex ? slideCount - 1 : index ) / perPage );\n  }\n\n  /**\n   * Converts the destination position to the dest index.\n   *\n   * @param destination - A position to convert.\n   *\n   * @return A dest index.\n   */\n  function toDest( destination: number ): number {\n    const closest = Move.toIndex( destination );\n    return isSlide ? clamp( closest, 0, endIndex ) : closest;\n  }\n\n  /**\n   * Sets a new index and retains old one.\n   *\n   * @param index - A new index to set.\n   */\n  function setIndex( index: number ): void {\n    if ( index !== currIndex ) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n\n  /**\n   * Returns the current/previous index.\n   *\n   * @param prev - Optional. Whether to return previous index or not.\n   */\n  function getIndex( prev?: boolean ): number {\n    return prev ? prevIndex : currIndex;\n  }\n\n  /**\n   * Verifies if the focus option is available or not.\n   *\n   * @return `true` if the slider has the focus option.\n   */\n  function hasFocus(): boolean {\n    return ! isUndefined( options.focus ) || options.isNavigation;\n  }\n\n  /**\n   * Checks if the slider is moving/scrolling or not.\n   *\n   * @return `true` if the slider can move, or otherwise `false`.\n   */\n  function isBusy(): boolean {\n    return Splide.state.is( [ MOVING, SCROLLING ] ) && !! options.waitForTransition;\n  }\n\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getAdjacent,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus,\n    isBusy,\n  };\n}\n","import { ALL_ATTRIBUTES, ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\nimport { CLASS_ARROWS } from '../../constants/classes';\nimport {\n  EVENT_ARROWS_MOUNTED,\n  EVENT_ARROWS_UPDATED,\n  EVENT_END_INDEX_CHANGED,\n  EVENT_MOUNTED,\n  EVENT_MOVED,\n  EVENT_REFRESH,\n  EVENT_SCROLLED,\n  EVENT_UPDATED,\n} from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport {\n  addClass,\n  append,\n  apply,\n  assign,\n  before,\n  create,\n  display,\n  parseHtml,\n  remove,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n} from '../../utils';\nimport { PATH, SIZE, XML_NAME_SPACE } from './path';\n\n\n/**\n * The interface for the Arrows component.\n *\n * @since 3.0.0\n */\nexport interface ArrowsComponent extends BaseComponent {\n  arrows: { prev?: HTMLButtonElement, next?: HTMLButtonElement };\n\n  /** @internal */\n  update(): void;\n}\n\n/**\n * The component for handling previous and next arrows.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Arrows component object.\n */\nexport function Arrows( Splide: Splide, Components: Components, options: Options ): ArrowsComponent {\n  const event = EventInterface( Splide );\n  const { on, bind, emit } = event;\n  const { classes, i18n } = options;\n  const { Elements, Controller } = Components;\n  const { arrows: placeholder, track } = Elements;\n\n  /**\n   * The wrapper element.\n   */\n  let wrapper = placeholder;\n\n  /**\n   * The previous arrow element.\n   */\n  let prev = Elements.prev;\n\n  /**\n   * The next arrow element.\n   */\n  let next = Elements.next;\n\n  /**\n   * Indicates whether the component creates arrows or retrieved from the DOM.\n   */\n  let created: boolean;\n\n  /**\n   * Holds modifier classes.\n   */\n  let wrapperClasses: string;\n\n  /**\n   * An object with previous and next arrows.\n   */\n  const arrows: ArrowsComponent[ 'arrows' ] = {};\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( EVENT_UPDATED, remount );\n  }\n\n  /**\n   * Remounts the component.\n   */\n  function remount(): void {\n    destroy();\n    mount();\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    const enabled = options.arrows;\n\n    if ( enabled && ! ( prev && next ) ) {\n      createArrows();\n    }\n\n    if ( prev && next ) {\n      assign( arrows, { prev, next } );\n      display( wrapper, enabled ? '' : 'none' );\n      addClass( wrapper, ( wrapperClasses = `${ CLASS_ARROWS }--${ options.direction }` ) );\n\n      if ( enabled ) {\n        listen();\n        update();\n        setAttribute( [ prev, next ], ARIA_CONTROLS, track.id );\n        emit( EVENT_ARROWS_MOUNTED, prev, next );\n      }\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    event.destroy();\n    removeClass( wrapper, wrapperClasses );\n\n    if ( created ) {\n      remove( placeholder ? [ prev, next ] : wrapper );\n      prev = next = null;\n    } else {\n      removeAttribute( [ prev, next ], ALL_ATTRIBUTES );\n    }\n  }\n\n  /**\n   * Listens to some events.\n   */\n  function listen(): void {\n    on( [ EVENT_MOUNTED, EVENT_MOVED, EVENT_REFRESH, EVENT_SCROLLED, EVENT_END_INDEX_CHANGED ], update );\n    bind( next, 'click', apply( go, '>' ) );\n    bind( prev, 'click', apply( go, '<' ) );\n  }\n\n  /**\n   * The wrapper function of Controller#go().\n   *\n   * @param control - The control pattern.\n   */\n  function go( control: string ): void {\n    Controller.go( control, true );\n  }\n\n  /**\n   * Create arrows and append them to the slider.\n   */\n  function createArrows(): void {\n    wrapper = placeholder || create( 'div', classes.arrows );\n    prev    = createArrow( true );\n    next    = createArrow( false );\n    created = true;\n\n    append( wrapper, [ prev, next ] );\n    ! placeholder && before( wrapper, track );\n  }\n\n  /**\n   * Creates an arrow button.\n   * In IE, A SVG element is focusable.\n   *\n   * @param prev - Determines whether to create a previous or next arrow.\n   *\n   * @return A created button element.\n   */\n  function createArrow( prev: boolean ): HTMLButtonElement {\n    const arrow = `<button class=\"${ classes.arrow } ${ prev ? classes.prev : classes.next }\" type=\"button\">`\n      +\t`<svg xmlns=\"${ XML_NAME_SPACE }\" viewBox=\"0 0 ${ SIZE } ${ SIZE }\" width=\"${ SIZE }\" height=\"${ SIZE }\" focusable=\"false\">`\n      + `<path d=\"${ options.arrowPath || PATH }\" />`;\n\n    return parseHtml<HTMLButtonElement>( arrow );\n  }\n\n  /**\n   * Updates status of arrows, such as `disabled` and `aria-label`.\n   */\n  function update(): void {\n    if ( prev && next ) {\n      const index     = Splide.index;\n      const prevIndex = Controller.getPrev();\n      const nextIndex = Controller.getNext();\n      const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n      const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n\n      prev.disabled = prevIndex < 0;\n      next.disabled = nextIndex < 0;\n\n      setAttribute( prev, ARIA_LABEL, prevLabel );\n      setAttribute( next, ARIA_LABEL, nextLabel );\n\n      emit( EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex );\n    }\n  }\n\n  return {\n    arrows,\n    mount,\n    destroy,\n    update,\n  };\n}\n","/**\n * The namespace for SVG elements.\n */\nexport const XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\n\n/**\n * The arrow path.\n */\nexport const PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\n\n/**\n * SVG width and height.\n */\nexport const SIZE = 40;\n","import { ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\nimport { CLASS_ACTIVE } from '../../constants/classes';\nimport {\n  EVENT_AUTOPLAY_PAUSE,\n  EVENT_AUTOPLAY_PLAY,\n  EVENT_AUTOPLAY_PLAYING,\n  EVENT_MOVE,\n  EVENT_REFRESH,\n  EVENT_SCROLL,\n} from '../../constants/events';\nimport { EventInterface, RequestInterval } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { getAttribute, setAttribute, style, toggleClass } from '../../utils';\nimport { INTERVAL_DATA_ATTRIBUTE } from './constants';\n\n\n/**\n * The interface for the Autoplay component.\n *\n * @since 3.0.0\n */\nexport interface AutoplayComponent extends BaseComponent {\n  play(): void;\n  pause(): void;\n  isPaused(): boolean;\n}\n\n/**\n * The component for autoplay, handling a progress bar and a toggle button.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Autoplay component object.\n */\nexport function Autoplay( Splide: Splide, Components: Components, options: Options ): AutoplayComponent {\n  const { on, bind, emit } = EventInterface( Splide );\n  const interval = RequestInterval( options.interval, Splide.go.bind( Splide, '>' ), onAnimationFrame );\n  const { isPaused } = interval;\n  const { Elements, Elements: { root, toggle } } = Components;\n  const { autoplay } = options;\n\n  /**\n   * Indicates whether the slider is hovered or not.\n   */\n  let hovered: boolean;\n\n  /**\n   * Indicates whether one of slider elements has focus or not.\n   */\n  let focused: boolean;\n\n  /**\n   * Indicates whether the autoplay is stopped or not.\n   * If stopped, autoplay won't start automatically unless `play()` is explicitly called.\n   */\n  let stopped = autoplay === 'pause';\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if ( autoplay ) {\n      listen();\n      toggle && setAttribute( toggle, ARIA_CONTROLS, Elements.track.id );\n      stopped || play();\n      update();\n    }\n  }\n\n  /**\n   * Listens to some events.\n   */\n  function listen(): void {\n    if ( options.pauseOnHover ) {\n      bind( root, 'mouseenter mouseleave', e => {\n        hovered = e.type === 'mouseenter';\n        autoToggle();\n      } );\n    }\n\n    if ( options.pauseOnFocus ) {\n      bind( root, 'focusin focusout', e => {\n        focused = e.type === 'focusin';\n        autoToggle();\n      } );\n    }\n\n    if ( toggle ) {\n      bind( toggle, 'click', () => {\n        stopped ? play() : pause( true );\n      } );\n    }\n\n    on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH ], interval.rewind );\n    on( EVENT_MOVE, onMove );\n  }\n\n  /**\n   * Starts autoplay and clears all flags.\n   */\n  function play(): void {\n    if ( isPaused() && Components.Slides.isEnough() ) {\n      interval.start( ! options.resetProgress );\n      focused = hovered = stopped = false;\n      update();\n      emit( EVENT_AUTOPLAY_PLAY );\n    }\n  }\n\n  /**\n   * Pauses autoplay.\n   *\n   * @param stop - If `true`, autoplay keeps paused until `play()` is explicitly called.\n   */\n  function pause( stop = true ): void {\n    stopped = !! stop;\n    update();\n\n    if ( ! isPaused() ) {\n      interval.pause();\n      emit( EVENT_AUTOPLAY_PAUSE );\n    }\n  }\n\n  /**\n   * Toggles play/pause according to current flags.\n   * If autoplay is manually paused, this will do nothing.\n   */\n  function autoToggle(): void {\n    if ( ! stopped ) {\n      hovered || focused ? pause( false ) : play();\n    }\n  }\n\n  /**\n   * Updates the toggle button status.\n   */\n  function update(): void {\n    if ( toggle ) {\n      toggleClass( toggle, CLASS_ACTIVE, ! stopped );\n      setAttribute( toggle, ARIA_LABEL, options.i18n[ stopped ? 'play' : 'pause' ] );\n    }\n  }\n\n  /**\n   * Called on every animation frame while autoplay is active.\n   *\n   * @param rate - The progress rate between 0 and 1.\n   */\n  function onAnimationFrame( rate: number ): void {\n    const { bar } = Elements;\n    bar && style( bar, 'width', `${ rate * 100 }%` );\n    emit( EVENT_AUTOPLAY_PLAYING, rate );\n  }\n\n  /**\n   * Updates or restores the interval duration.\n   *\n   * @param index - An index to move to.\n   */\n  function onMove( index: number ): void {\n    const Slide = Components.Slides.getAt( index );\n    interval.set( Slide && +getAttribute( Slide.slide, INTERVAL_DATA_ATTRIBUTE ) || options.interval );\n  }\n\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused,\n  };\n}\n","import { EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { apply, child, display } from '../../utils';\nimport { SlideComponent } from '../Slides/Slide';\n\n\n/**\n * The interface for the Cover component.\n *\n * @since 3.0.0\n */\nexport interface CoverComponent extends BaseComponent {\n}\n\n/**\n * The component for setting the image as the slide background.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Cover component object.\n */\nexport function Cover( Splide: Splide, Components: Components, options: Options ): CoverComponent {\n  const { on } = EventInterface( Splide );\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if ( options.cover ) {\n      on( EVENT_LAZYLOAD_LOADED, apply( toggle, true ) );\n      on( [ EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH ], apply( cover, true ) );\n    }\n  }\n\n  /**\n   * Sets/removes the background image to/from all slides.\n   *\n   * @param cover - If `false`, removes the background image.\n   */\n  function cover( cover: boolean ): void {\n    Components.Slides.forEach( Slide => {\n      const img = child<HTMLImageElement>( Slide.container || Slide.slide, 'img' );\n\n      if ( img && img.src ) {\n        toggle( cover, img, Slide );\n      }\n    } );\n  }\n\n  /**\n   * Sets/removes the background image to/from the parent element.\n   *\n   * @param cover - If `false`, removes the background image.\n   * @param img   - A target image element.\n   * @param Slide - A SlideComponent object where the image belongs.\n   */\n  function toggle( cover: boolean, img: HTMLImageElement, Slide: SlideComponent ): void {\n    Slide.style( 'background', cover ? `center/cover no-repeat url(\"${ img.src }\")` : '', true );\n    display( img, cover ? 'none' : '' );\n  }\n\n  return {\n    mount,\n    destroy: apply( cover, false ),\n  };\n}\n","import { EVENT_MOVE, EVENT_REFRESH, EVENT_SCROLL, EVENT_SCROLLED, EVENT_UPDATED } from '../../constants/events';\nimport { IDLE, SCROLLING } from '../../constants/states';\nimport { SLIDE } from '../../constants/types';\nimport { EventInterface, RequestInterval, RequestIntervalInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\nimport { abs, apply, approximatelyEqual, floor, max, sign } from '../../utils';\nimport { BASE_VELOCITY, BOUNCE_DIFF_THRESHOLD, BOUNCE_DURATION, FRICTION_FACTOR, MIN_DURATION } from './constants';\n\n\n/**\n * The interface for the Scroll component.\n *\n * @since 3.0.0\n */\nexport interface ScrollComponent extends BaseComponent {\n  scroll( position: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void;\n  cancel(): void;\n}\n\n/**\n * The component for scrolling the slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Scroll component object.\n */\nexport function Scroll( Splide: Splide, Components: Components, options: Options ): ScrollComponent {\n  const { on, emit } = EventInterface( Splide );\n  const { state: { set } } = Splide;\n  const { Move } = Components;\n  const { getPosition, getLimit, exceededLimit, translate } = Move;\n  const isSlide = Splide.is( SLIDE );\n\n  /**\n   * Retains the active RequestInterval object.\n   */\n  let interval: RequestIntervalInterface;\n\n  /**\n   * Holds the callback function.\n   */\n  let callback: AnyFunction;\n\n  /**\n   * The current friction (<= 1).\n   */\n  let friction = 1;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    on( EVENT_MOVE, clear );\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], cancel );\n  }\n\n  /**\n   * Scrolls the slider to the provided destination.\n   *\n   * @param destination - The destination to scroll the slider to.\n   * @param duration    - Optional. The scroll duration. If omitted, calculates it by the distance.\n   * @param snap        - Optional. Whether to snap the slider to the closest slide or not.\n   * @param onScrolled  - Optional. A callback invoked after scroll ends.\n   * @param noConstrain - Optional. Whether to suppress constraint process when the slider exceeds bounds.\n   */\n  function scroll(\n    destination: number,\n    duration?: number,\n    snap?: boolean,\n    onScrolled?: AnyFunction,\n    noConstrain?: boolean\n  ): void {\n    const from = getPosition();\n\n    clear();\n\n    if ( snap && ( ! isSlide || ! exceededLimit() ) ) {\n      const size   = Components.Layout.sliderSize();\n      const offset = sign( destination ) * size * floor( abs( destination ) / size ) || 0;\n      destination = Move.toPosition( Components.Controller.toDest( destination % size ) ) + offset;\n    }\n\n    const noDistance = approximatelyEqual( from, destination, 1 );\n\n    friction = 1;\n    duration = noDistance ? 0 : duration || max( abs( destination - from ) / BASE_VELOCITY, MIN_DURATION );\n    callback = onScrolled;\n    interval = RequestInterval( duration, onEnd, apply( update, from, destination, noConstrain ), 1 );\n\n    set( SCROLLING );\n    emit( EVENT_SCROLL );\n    interval.start();\n  }\n\n  /**\n   * Called when scroll ends or has been just canceled.\n   */\n  function onEnd(): void {\n    set( IDLE );\n    callback && callback();\n    emit( EVENT_SCROLLED );\n  }\n\n  /**\n   * Called whenever the interval timer is updated.\n   *\n   * @param from        - A position where scroll starts.\n   * @param to          - A destination where the slider goes.\n   * @param noConstrain - Whether to suppress constraint process when the slider exceeds bounds.\n   * @param rate        - A current rate.\n   */\n  function update( from: number, to: number, noConstrain: boolean | undefined, rate: number ): void {\n    const position = getPosition();\n    const target   = from + ( to - from ) * easing( rate );\n    const diff     = ( target - position ) * friction;\n\n    translate( position + diff );\n\n    if ( isSlide && ! noConstrain && exceededLimit() ) {\n      friction *= FRICTION_FACTOR;\n\n      if ( abs( diff ) < BOUNCE_DIFF_THRESHOLD ) {\n        scroll( getLimit( exceededLimit( true ) ), BOUNCE_DURATION, false, callback, true );\n      }\n    }\n  }\n\n  /**\n   * Clears the active interval.\n   */\n  function clear(): void {\n    if ( interval ) {\n      interval.cancel();\n    }\n  }\n\n  /**\n   * Cancels the active interval and emits the `scrolled` event.\n   */\n  function cancel(): void {\n    if ( interval && ! interval.isPaused() ) {\n      clear();\n      onEnd();\n    }\n  }\n\n  /**\n   * The easing function.\n   *\n   * @param t - A value to ease.\n   *\n   * @return An eased value.\n   */\n  function easing( t: number ): number {\n    const { easingFunc } = options;\n    return easingFunc ? easingFunc( t ) : 1 - Math.pow( 1 - t, 4 );\n  }\n\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel,\n  };\n}\n","/**\n * Triggers the bounce effect when the diff becomes less than this value.\n *\n * @since 3.0.0\n */\nexport const BOUNCE_DIFF_THRESHOLD = 10;\n\n/**\n * The duration of the bounce effect.\n *\n * @since 3.0.0\n */\nexport const BOUNCE_DURATION = 600;\n\n/**\n * The friction factor.\n *\n * @since 3.0.0\n */\nexport const FRICTION_FACTOR = 0.6;\n\n/**\n * The velocity to calculate the scroll duration.\n *\n * @since 3.0.0\n */\nexport const BASE_VELOCITY = 1.5;\n\n/**\n * The minimum duration of scroll.\n *\n * @since 3.0.0\n */\nexport const MIN_DURATION = 800;\n","import { CLASS_ARROW, CLASS_PAGINATION_PAGE } from '../../constants/classes';\nimport { EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_MOUNTED, EVENT_UPDATED } from '../../constants/events';\nimport { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\nimport { DRAGGING, IDLE, MOVING, SCROLLING } from '../../constants/states';\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { abs, isObject, matches, min, noop, prevent, sign, timeOf } from '../../utils';\nimport { FRICTION, LOG_INTERVAL, POINTER_DOWN_EVENTS, POINTER_MOVE_EVENTS, POINTER_UP_EVENTS } from './constants';\n\n\n/**\n * The interface for the Drag component.\n *\n * @since 3.0.0\n */\nexport interface DragComponent extends BaseComponent {\n  disable( disabled: boolean ): void;\n  isDragging(): boolean;\n}\n\n/**\n * The component for dragging the slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Drag component object.\n */\nexport function Drag( Splide: Splide, Components: Components, options: Options ): DragComponent {\n  const { on, emit, bind, unbind } = EventInterface( Splide );\n  const { state } = Splide;\n  const { Move, Scroll, Controller, Elements: { track }, Media: { reduce } } = Components;\n  const { resolve, orient } = Components.Direction;\n  const { getPosition, exceededLimit } = Move;\n\n  /**\n   * The base slider position to calculate the delta of coords.\n   */\n  let basePosition: number;\n\n  /**\n   * The base event object saved per specific sampling interval.\n   */\n  let baseEvent: TouchEvent | MouseEvent;\n\n  /**\n   * Holds the previous base event object.\n   */\n  let prevBaseEvent: TouchEvent | MouseEvent;\n\n  /**\n   * Indicates whether the drag mode is `free` or not.\n   */\n  let isFree: boolean;\n\n  /**\n   * Indicates whether the user is dragging the slider or not.\n   */\n  let dragging: boolean;\n\n  /**\n   * Indicates whether the slider exceeds limits or not.\n   * This must not be `undefined` for strict comparison.\n   */\n  let exceeded = false;\n\n  /**\n   * Turns into `true` when the user starts dragging the slider.\n   */\n  let clickPrevented: boolean;\n\n  /**\n   * Indicates whether the drag component is now disabled or not.\n   */\n  let disabled: boolean;\n\n  /**\n   * The target element to attach listeners.\n   */\n  let target: Window | HTMLElement;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    bind( track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\n    bind( track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\n    bind( track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS );\n    bind( track, 'click', onClick, { capture: true } );\n    bind( track, 'dragstart', prevent );\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], init );\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    const { drag } = options;\n    disable( ! drag );\n    isFree = drag === 'free';\n  }\n\n  /**\n   * Called when the user clicks or touches the slider.\n   * - Needs to prevent the default behaviour when the slider is busy to deny any action, such as dragging images\n   * - IE does not support MouseEvent and TouchEvent constructors\n   * - The `dragging` state always becomes `true` when the user starts dragging while the slider is moving\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   */\n  function onPointerDown( e: TouchEvent | MouseEvent ): void {\n    clickPrevented = false;\n\n    if ( ! disabled ) {\n      const isTouch = isTouchEvent( e );\n\n      if ( isDraggable( e.target ) && ( isTouch || ! e.button ) ) {\n        if ( ! Controller.isBusy() ) {\n          target        = isTouch ? track : window;\n          dragging      = state.is( [ MOVING, SCROLLING ] );\n          prevBaseEvent = null;\n\n          bind( target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS );\n          bind( target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS );\n          Move.cancel();\n          Scroll.cancel();\n          save( e );\n        } else {\n          prevent( e, true );\n        }\n      }\n    }\n  }\n\n  /**\n   * Called while the user moves the pointer on the slider.\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   */\n  function onPointerMove( e: TouchEvent | MouseEvent ): void {\n    if ( ! state.is( DRAGGING ) ) {\n      state.set( DRAGGING );\n      emit( EVENT_DRAG );\n    }\n\n    if ( e.cancelable ) {\n      if ( dragging ) {\n        Move.translate( basePosition + constrain( diffCoord( e ) ) );\n\n        const expired     = diffTime( e ) > LOG_INTERVAL;\n        const hasExceeded = exceeded !== ( exceeded = exceededLimit() );\n\n        if ( expired || hasExceeded ) {\n          save( e );\n        }\n\n        clickPrevented = true;\n        emit( EVENT_DRAGGING );\n        prevent( e );\n      } else if ( isSliderDirection( e ) ) {\n        dragging = shouldStart( e );\n        prevent( e );\n      }\n    }\n  }\n\n  /**\n   * Called when the user releases pointing devices.\n   * Needs to move the slider when:\n   * - The user drags the slider and the distance exceeds the threshold\n   * - The user aborted the slider moving by pointerdown and just released it without dragging the slider\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   */\n  function onPointerUp( e: TouchEvent | MouseEvent ): void {\n    if ( state.is( DRAGGING ) ) {\n      state.set( IDLE );\n      emit( EVENT_DRAGGED );\n    }\n\n    if ( dragging ) {\n      move( e );\n      prevent( e );\n    }\n\n    unbind( target, POINTER_MOVE_EVENTS, onPointerMove );\n    unbind( target, POINTER_UP_EVENTS, onPointerUp );\n    dragging = false;\n  }\n\n  /**\n   * Called when the track element is clicked.\n   * Disables click any elements inside it while dragging.\n   *\n   * @param e - A MouseEvent object.\n   */\n  function onClick( e: MouseEvent ): void {\n    if ( ! disabled && clickPrevented ) {\n      prevent( e, true );\n    }\n  }\n\n  /**\n   * Saves data at the specific moment.\n   *\n   * @param e - A TouchEvent or MouseEvent object.\n   */\n  function save( e: TouchEvent | MouseEvent ): void {\n    prevBaseEvent = baseEvent;\n    baseEvent     = e;\n    basePosition  = getPosition();\n  }\n\n  /**\n   * Calculates the destination by the drag velocity and moves the carousel.\n   * If motion is reduced, restores transition speed to the initial value\n   * because it's \"essential\" motion for the user to recognize what happens on the carousel.\n   *\n   * @param e - A TouchEvent or MouseEvent object.\n   */\n  function move( e: TouchEvent | MouseEvent ): void {\n    const velocity    = computeVelocity( e );\n    const destination = computeDestination( velocity );\n    const rewind      = options.rewind && options.rewindByDrag;\n\n    reduce( false );\n\n    if ( isFree ) {\n      Controller.scroll( destination, 0, options.snap );\n    } else if ( Splide.is( FADE ) ) {\n      Controller.go( orient( sign( velocity ) ) < 0 ? ( rewind ? '<' : '-' ) : ( rewind ? '>' : '+' ) );\n    } else if ( Splide.is( SLIDE ) && exceeded && rewind ) {\n      Controller.go( exceededLimit( true ) ? '>' : '<' );\n    } else {\n      Controller.go( Controller.toDest( destination ), true );\n    }\n\n    reduce( true );\n  }\n\n  /**\n   * Checks if the drag distance exceeds the defined threshold.\n   *\n   * @param e - A TouchEvent or MouseEvent object.\n   *\n   * @return `true` if the distance exceeds the threshold, or `false` if not.\n   */\n  function shouldStart( e: TouchEvent | MouseEvent ): boolean {\n    const { dragMinThreshold: thresholds } = options;\n    const isObj = isObject( thresholds );\n    const mouse = isObj && thresholds.mouse || 0;\n    const touch = ( isObj ? thresholds.touch : +thresholds ) || 10;\n    return abs( diffCoord( e ) ) > ( isTouchEvent( e ) ? touch : mouse );\n  }\n\n  /**\n   * Checks whether dragging towards the slider or the scroll direction.\n   *\n   * @return `true` if dragging towards the slider direction, or otherwise `false`.\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   */\n  function isSliderDirection( e: TouchEvent | MouseEvent ): boolean {\n    return abs( diffCoord( e ) ) > abs( diffCoord( e, true ) );\n  }\n\n  /**\n   * Computes the drag velocity.\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   *\n   * @return The drag velocity.\n   */\n  function computeVelocity( e: TouchEvent | MouseEvent ): number {\n    if ( Splide.is( LOOP ) || ! exceeded ) {\n      const time = diffTime( e );\n\n      if ( time && time < LOG_INTERVAL ) {\n        return diffCoord( e ) / time;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Computes the destination by the velocity and the `flickPower` option.\n   *\n   * @param velocity - The drag velocity.\n   *\n   * @return The destination.\n   */\n  function computeDestination( velocity: number ): number {\n    return getPosition() + sign( velocity ) * min(\n      abs( velocity ) * ( options.flickPower || 600 ),\n      isFree ? Infinity : Components.Layout.listSize() * ( options.flickMaxPages || 1 )\n    );\n  }\n\n  /**\n   * Returns the coord difference between the provided and base events.\n   *\n   * @param e          - A TouchEvent or MouseEvent object.\n   * @param orthogonal - Optional. If `true`, returns the coord of the orthogonal axis against the drag one.\n   *\n   * @return The difference of the coord.\n   */\n  function diffCoord( e: TouchEvent | MouseEvent, orthogonal?: boolean ): number {\n    return coordOf( e, orthogonal ) - coordOf( getBaseEvent( e ), orthogonal );\n  }\n\n  /**\n   * Returns the elapsed time from the base event to `e`.\n   *\n   * @param e - A TouchEvent or MouseEvent object.\n   *\n   * @return The elapsed time in milliseconds.\n   */\n  function diffTime( e: TouchEvent | MouseEvent ): number {\n    return timeOf( e ) - timeOf( getBaseEvent( e ) );\n  }\n\n  /**\n   * Returns the base event.\n   * If the base event is same with `e`, returns previous one.\n   *\n   * @param e - A TouchEvent or MouseEvent object.\n   *\n   * @return A base event.\n   */\n  function getBaseEvent( e: TouchEvent | MouseEvent ): TouchEvent | MouseEvent {\n    return baseEvent === e && prevBaseEvent || baseEvent;\n  }\n\n  /**\n   * Returns the `pageX` and `pageY` coordinates provided by the event.\n   * Be aware that IE does not support both TouchEvent and MouseEvent constructors.\n   *\n   * @param e          - A TouchEvent or MouseEvent object.\n   * @param orthogonal - Optional. If `true`, returns the coord of the orthogonal axis against the drag one.\n   *\n   * @return A pageX or pageY coordinate.\n   */\n  function coordOf( e: TouchEvent | MouseEvent, orthogonal?: boolean ): number {\n    return ( isTouchEvent( e ) ? e.changedTouches[ 0 ] : e )[ `page${ resolve( orthogonal ? 'Y' : 'X' ) }` ];\n  }\n\n  /**\n   * Reduces the distance to move by the predefined friction.\n   * This does nothing when the slider type is not `slide`, or the position is inside borders.\n   *\n   * @param diff - Diff to constrain.\n   *\n   * @return The constrained diff.\n   */\n  function constrain( diff: number ): number {\n    return diff / ( exceeded && Splide.is( SLIDE ) ? FRICTION : 1 );\n  }\n\n  /**\n   * Returns `true` if the user can drag the target.\n   *\n   * @param target - An event target.\n   *\n   * @return `true` if the target is draggable.\n   */\n  function isDraggable( target: EventTarget ): boolean {\n    const { noDrag } = options;\n\n    return ! matches( target, `.${ CLASS_PAGINATION_PAGE }, .${ CLASS_ARROW }` )\n      && ( ! noDrag || ! matches( target, noDrag ) );\n  }\n\n  /**\n   * Checks if the provided event is TouchEvent or MouseEvent.\n   *\n   * @param e - An event to check.\n   *\n   * @return `true` if the `e` is TouchEvent.\n   */\n  function isTouchEvent( e: TouchEvent | MouseEvent ): e is TouchEvent {\n    return typeof TouchEvent !== 'undefined' && e instanceof TouchEvent;\n  }\n\n  /**\n   * Checks if now the user is dragging the slider or not.\n   *\n   * @return `true` if the user is dragging the slider or otherwise `false`.\n   */\n  function isDragging(): boolean {\n    return dragging;\n  }\n\n  /**\n   * Disables the component.\n   *\n   * @param value - Set `true` to disable the component.\n   */\n  function disable( value: boolean ): void {\n    disabled = value;\n  }\n\n  return {\n    mount,\n    disable,\n    isDragging,\n  };\n}\n","import { CLASS_LOADING } from '../../constants/classes';\nimport {\n  EVENT_LAZYLOAD_LOADED,\n  EVENT_MOVED,\n  EVENT_REFRESH,\n  EVENT_RESIZE,\n  EVENT_SCROLLED,\n} from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport {\n  addClass,\n  apply,\n  child,\n  create,\n  display,\n  empty,\n  getAttribute,\n  queryAll,\n  remove,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n} from '../../utils';\nimport { SlideComponent } from '../Slides/Slide';\nimport { IMAGE_SELECTOR, SRC_DATA_ATTRIBUTE, SRCSET_DATA_ATTRIBUTE } from './constants';\n\n\n/**\n * The interface for the LazyLoad component.\n *\n * @since 3.0.0\n */\nexport interface LazyLoadComponent extends BaseComponent {\n  /** @internal */\n  check(): void;\n}\n\n/**\n * The type for each entry.\n * Use a tuple for better compression.\n *\n * @since 4.0.0\n */\ntype LazyLoadEntry = [ HTMLImageElement, SlideComponent, HTMLSpanElement ];\n\n/**\n * The component for lazily loading images.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An LazyLoad component object.\n */\nexport function LazyLoad( Splide: Splide, Components: Components, options: Options ): LazyLoadComponent {\n  const { on, off, bind, emit } = EventInterface( Splide );\n  const isSequential = options.lazyLoad === 'sequential';\n  const events       = [ EVENT_MOVED, EVENT_SCROLLED ];\n\n  /**\n   * Stores data of images.\n   */\n  let entries: LazyLoadEntry[] = [];\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if ( options.lazyLoad ) {\n      init();\n      on( EVENT_REFRESH, init );\n    }\n  }\n\n  /**\n   * Initializes the component and start loading images.\n   * Be aware that `refresh` also calls this method.\n   */\n  function init() {\n    empty( entries );\n    register();\n\n    if ( isSequential ) {\n      loadNext();\n    } else {\n      off( events );\n      on( events, check );\n      check();\n    }\n  }\n\n  /**\n   * Finds images and register them as entries with creating spinner elements.\n   * Note that spinner can be already available because of `refresh()`.\n   */\n  function register(): void {\n    Components.Slides.forEach( Slide => {\n      queryAll<HTMLImageElement>( Slide.slide, IMAGE_SELECTOR ).forEach( img => {\n        const src    = getAttribute( img, SRC_DATA_ATTRIBUTE );\n        const srcset = getAttribute( img, SRCSET_DATA_ATTRIBUTE );\n\n        if ( src !== img.src || srcset !== img.srcset ) {\n          const className = options.classes.spinner;\n          const parent    = img.parentElement;\n          const spinner   = child( parent, `.${ className }` ) || create( 'span', className, parent );\n\n          entries.push( [ img, Slide, spinner ] );\n          img.src || display( img, 'none' );\n        }\n      } );\n    } );\n  }\n\n  /**\n   * Checks how close each image is from the active slide, and determines whether to start loading or not.\n   * The last `+1` is for the current page.\n   */\n  function check(): void {\n    entries = entries.filter( data => {\n      const distance = options.perPage * ( ( options.preloadPages || 1 ) + 1 ) - 1;\n      return data[ 1 ].isWithin( Splide.index, distance ) ? load( data ) : true;\n    } );\n\n    entries.length || off( events );\n  }\n\n  /**\n   * Starts loading the image in the provided data.\n   *\n   * @param data - A LazyLoadEntry object.\n   */\n  function load( data: LazyLoadEntry ): void {\n    const [ img ] = data;\n\n    addClass( data[ 1 ].slide, CLASS_LOADING );\n    bind( img, 'load error', apply( onLoad, data ) );\n\n    setAttribute( img, 'src', getAttribute( img, SRC_DATA_ATTRIBUTE ) );\n    setAttribute( img, 'srcset', getAttribute( img, SRCSET_DATA_ATTRIBUTE ) );\n    removeAttribute( img, SRC_DATA_ATTRIBUTE );\n    removeAttribute( img, SRCSET_DATA_ATTRIBUTE );\n  }\n\n  /**\n   * Called when the image is loaded or any error occurs.\n   *\n   * @param data - A LazyLoadEntry object.\n   * @param e    - An Event object.\n   */\n  function onLoad( data: LazyLoadEntry, e: Event ): void {\n    const [ img, Slide ] = data;\n\n    removeClass( Slide.slide, CLASS_LOADING );\n\n    if ( e.type !== 'error' ) {\n      remove( data[ 2 ] );\n      display( img, '' );\n      emit( EVENT_LAZYLOAD_LOADED, img, Slide );\n      emit( EVENT_RESIZE );\n    }\n\n    isSequential && loadNext();\n  }\n\n  /**\n   * Starts loading a next image.\n   */\n  function loadNext(): void {\n    entries.length && load( entries.shift() );\n  }\n\n  return {\n    mount,\n    destroy: apply( empty, entries ),\n    check,\n  };\n}\n","import { ARROW_LEFT, ARROW_RIGHT } from '../../constants/arrows';\nimport {\n  ARIA_CONTROLS,\n  ARIA_LABEL,\n  ARIA_ORIENTATION,\n  ARIA_SELECTED,\n  ROLE,\n  TAB_INDEX,\n} from '../../constants/attributes';\nimport { CLASS_ACTIVE, CLASS_PAGINATION } from '../../constants/classes';\nimport { TTB } from '../../constants/directions';\nimport {\n  EVENT_END_INDEX_CHANGED,\n  EVENT_MOVE,\n  EVENT_PAGINATION_MOUNTED,\n  EVENT_PAGINATION_UPDATED,\n  EVENT_REFRESH,\n  EVENT_SCROLL,\n  EVENT_SCROLLED,\n  EVENT_UPDATED,\n} from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport {\n  addClass,\n  apply,\n  ceil,\n  create,\n  display,\n  empty,\n  focus,\n  format,\n  prevent,\n  remove,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  slice,\n} from '../../utils';\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\n\n\n/**\n * The interface for the Pagination component.\n *\n * @since 3.0.0\n */\nexport interface PaginationComponent extends BaseComponent {\n  items: PaginationItem[];\n  getAt( index: number ): PaginationItem;\n  update(): void;\n}\n\n/**\n * The interface for data of the pagination.\n *\n * @since 3.0.0\n */\nexport interface PaginationData {\n  list: HTMLUListElement;\n  items: PaginationItem[];\n}\n\n/**\n * The interface for each pagination item.\n *\n * @since 3.0.0\n */\nexport interface PaginationItem {\n  li: HTMLLIElement;\n  button: HTMLButtonElement;\n  page: number;\n}\n\n/**\n * The component for the pagination UI (a slide picker).\n *\n * @link https://www.w3.org/TR/2021/NOTE-wai-aria-practices-1.2-20211129/#grouped-carousel-elements\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Pagination component object.\n */\nexport function Pagination( Splide: Splide, Components: Components, options: Options ): PaginationComponent {\n  const event = EventInterface( Splide );\n  const { on, emit, bind } = event;\n  const { Slides, Elements, Controller } = Components;\n  const { hasFocus, getIndex, go } = Controller;\n  const { resolve } = Components.Direction;\n  const { pagination: placeholder } = Elements;\n\n  /**\n   * Stores all pagination items.\n   */\n  const items: PaginationItem[] = [];\n\n  /**\n   * The pagination element.\n   */\n  let list: HTMLUListElement | null;\n\n  /**\n   * Holds modifier classes.\n   */\n  let paginationClasses: string;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    destroy();\n    on( [ EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED ], mount );\n\n    const enabled = options.pagination;\n    placeholder && display( placeholder, enabled ? '' : 'none' );\n\n    if ( enabled ) {\n      on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_SCROLLED ], update );\n      createPagination();\n      update();\n      emit( EVENT_PAGINATION_MOUNTED, { list, items }, getAt( Splide.index ) );\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    if ( list ) {\n      remove( placeholder ? slice( list.children ) : list );\n      removeClass( list, paginationClasses );\n      empty( items );\n      list = null;\n    }\n\n    event.destroy();\n  }\n\n  /**\n   * Creates the pagination element and appends it to the slider.\n   */\n  function createPagination(): void {\n    const { length } = Splide;\n    const { classes, i18n, perPage } = options;\n    const max = hasFocus() ? Controller.getEnd() + 1 : ceil( length / perPage );\n\n    list = placeholder || create( 'ul', classes.pagination, Elements.track.parentElement );\n\n    addClass( list, ( paginationClasses = `${ CLASS_PAGINATION }--${ getDirection() }` ) );\n    setAttribute( list, ROLE, 'tablist' );\n    setAttribute( list, ARIA_LABEL, i18n.select );\n    setAttribute( list, ARIA_ORIENTATION, getDirection() === TTB ? 'vertical' : '' );\n\n    for ( let i = 0; i < max; i++ ) {\n      const li       = create( 'li', null, list );\n      const button   = create( 'button', { class: classes.page, type: 'button' }, li );\n      const controls = Slides.getIn( i ).map( Slide => Slide.slide.id );\n      const text     = ! hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n\n      bind( button, 'click', apply( onClick, i ) );\n\n      if ( options.paginationKeyboard ) {\n        bind( button, 'keydown', apply( onKeydown, i ) );\n      }\n\n      setAttribute( li, ROLE, 'presentation' );\n      setAttribute( button, ROLE, 'tab' );\n      setAttribute( button, ARIA_CONTROLS, controls.join( ' ' ) );\n      setAttribute( button, ARIA_LABEL, format( text, i + 1 ) );\n      setAttribute( button, TAB_INDEX, -1 );\n\n      items.push( { li, button, page: i } );\n    }\n  }\n\n  /**\n   * Called when the user clicks each pagination dot.\n   * Moves the focus to the active slide for accessibility.\n   *\n   * @link https://www.w3.org/WAI/tutorials/carousels/functionality/\n   *\n   * @param page - A clicked page index.\n   */\n  function onClick( page: number ): void {\n    go( `>${ page }`, true );\n  }\n\n  /**\n   * Called when any key is pressed on the pagination.\n   *\n   * @link https://www.w3.org/TR/2021/NOTE-wai-aria-practices-1.2-20211129/#keyboard-interaction-21\n   *\n   * @param page - A page index.\n   * @param e    - A KeyboardEvent object.\n   */\n  function onKeydown( page: number, e: KeyboardEvent ): void {\n    const { length } = items;\n    const key = normalizeKey( e );\n    const dir = getDirection();\n\n    let nextPage = -1;\n\n    if ( key === resolve( ARROW_RIGHT, false, dir ) ) {\n      nextPage = ++page % length;\n    } else if ( key === resolve( ARROW_LEFT, false, dir ) ) {\n      nextPage = ( --page + length ) % length;\n    } else if ( key === 'Home' ) {\n      nextPage = 0;\n    } else if ( key === 'End' ) {\n      nextPage = length - 1;\n    }\n\n    const item = items[ nextPage ];\n\n    if ( item ) {\n      focus( item.button );\n      go( `>${ nextPage }` );\n      prevent( e, true );\n    }\n  }\n\n  /**\n   * Returns the latest direction for pagination.\n   */\n  function getDirection(): Options['direction'] {\n    return options.paginationDirection || options.direction;\n  }\n\n  /**\n   * Returns the pagination item at the specified index.\n   *\n   * @param index - An index.\n   *\n   * @return A pagination item object if available, or otherwise `undefined`.\n   */\n  function getAt( index: number ): PaginationItem | undefined {\n    return items[ Controller.toPage( index ) ];\n  }\n\n  /**\n   * Updates the pagination status.\n   */\n  function update(): void {\n    const prev = getAt( getIndex( true ) );\n    const curr = getAt( getIndex() );\n\n    if ( prev ) {\n      const { button } = prev;\n      removeClass( button, CLASS_ACTIVE );\n      removeAttribute( button, ARIA_SELECTED );\n      setAttribute( button, TAB_INDEX, -1 );\n    }\n\n    if ( curr ) {\n      const { button } = curr;\n      addClass( button, CLASS_ACTIVE );\n      setAttribute( button, ARIA_SELECTED, true );\n      setAttribute( button, TAB_INDEX, '' );\n    }\n\n    emit( EVENT_PAGINATION_UPDATED, { list, items }, prev, curr );\n  }\n\n  return {\n    items,\n    mount,\n    destroy,\n    getAt,\n    update,\n  };\n}\n","import { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\nimport { MOVING } from '../../constants/states';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { abs, prevent, timeOf } from '../../utils';\n\n\n/**\n * The interface for the Wheel component.\n *\n * @since 3.0.0\n */\nexport interface WheelComponent extends BaseComponent {\n}\n\n/**\n * The component for observing the mouse wheel and moving the slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Wheel component object.\n */\nexport function Wheel( Splide: Splide, Components: Components, options: Options ): WheelComponent {\n  const { bind } = EventInterface( Splide );\n\n  /**\n   * Holds the last time when the wheel moves the slider.\n   */\n  let lastTime = 0;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if (options.freeScroll) {\n      bind( Components2.Elements.track, 'wheel', freeWheel, SCROLL_LISTENER_OPTIONS );\n    } else if ( options.wheel ) {\n      bind( Components.Elements.track, 'wheel', onWheel, SCROLL_LISTENER_OPTIONS );\n    }\n  }\n\n  function detectTrackPad(e) {\n    // This works because wheelDeltaY measures the physical distance that\n    // the actual hardware mouse wheel has travelled,\n    // while deltaY measures the amount of scrolling produced on screen.\n    // A conventional mouse typically has a much lower \"scroll resolution\"\n    // than a trackpad. That is to say, with a trackpad you can make a tiny motion\n    // and a get a tiny scroll on screen. A conventional mouse scrolls in chunkier,\n    // low resolution clicks. To complete a full rotation of the mouse wheel,\n    // it might make 10 clicks. There is no such thing as a half click or quarter click.\n    // For a conventional mouse, a single wheel click is reported as 120 wheelDeltaY \"units\"\n    // and results in about ~100px worth of scrolling. The physical wheelDeltaY unit is\n    // a completely arbitrary number, it is not measuring inches or degrees or anything like that.\n    // The number 120 was selected simply because it has a lot of useful factors.\n    // The amount of scrolling on screen is represented by deltaY,\n    // and it varies significantly by browser.\n    // (Sidenote, deltaY is generally measured in \"lines\" not pixels, though it's complicated, see previous link).\n    // Interacting with a trackpad is different in two ways.\n    // First of all, you can get wheelDeltaY values much smaller than 120,\n    // because very subtle finger gestures are detectable.\n    // Second, the wheelDeltaY is exactly 3x the deltaY value\n    // (at least in every browser I've managed to test). So,\n    // for instance, if you make a physical finger gesture equal to 12 click units,\n    // it will generally result in 4 pixels worth of scrolling.\n    // (Y1 = Y2 * 3) to detect the existence of a trackpad,\n    // but you could probably also be successful simply by checking if abs(wheelDeltaY) equals 120\n\n    var isTrackpad = false;\n    if (e.wheelDeltaY) {\n      if (e.wheelDeltaY === e.deltaY * -3) {\n        isTrackpad = true;\n      }\n    } else if (e.deltaMode === 0) {\n      isTrackpad = true;\n     }\n    return isTrackpad;\n   }\n\n  /**\n   * Called when the user rotates the mouse wheel on the slider.\n   *\n   * @param e - A WheelEvent object.\n   */\n  function onWheel( e: WheelEvent ): void {\n    if ( e.cancelable ) {\n      const { deltaY } = e;\n      const backwards = deltaY < 0;\n      const timeStamp = timeOf( e );\n      const min       = options.wheelMinThreshold || 0;\n      const sleep     = options.wheelSleep || 0;\n\n      if ( abs( deltaY ) > min && timeStamp - lastTime > sleep ) {\n        Splide.go( backwards ? '<' : '>' );\n        lastTime = timeStamp;\n      }\n\n      shouldPrevent( backwards ) && prevent( e );\n    }\n  }\n\n  /**\n   * Called when the user rotates the mouse wheel on the slider (follows up and down) +\n   * follows trackpad movement as well.\n   *\n   * @param e - A WheelEvent object.\n   */\n  function freeWheel( e: WheelEvent ): void {\n    if (e.cancelable) {\n      const isTrackpad = detectTrackPad(e);\n      var timeStamp = timeOf(e);\n      var _min = options.wheelMinThreshold || 0;\n      var sleep = options.wheelSleep || 0;\n      if (isTrackpad) {\n        var deltaX = e.deltaX;\n        var backwards = deltaX < 0;\n        if (abs(deltaX) > _min && timeStamp - lastTime > sleep) {\n          Splide.go(backwards ? '<' : '>');\n          lastTime = timeStamp;\n        }\n        shouldPrevent(backwards) && prevent(e);\n      } else {\n        var deltaY = e.deltaY;\n        var backwards = deltaY < 0;\n        if (abs(deltaY) > _min && timeStamp - lastTime > sleep) {\n          Splide.go(backwards ? '<' : '>');\n          lastTime = timeStamp;\n        }\n        shouldPrevent(backwards) && prevent(e);\n      }\n    }\n  }\n\n  /**\n   * Checks whether the component should prevent the default action of the wheel event or not.\n   *\n   * @param backwards - Set this to `true` for backwards direction.\n   *\n   * @return `true` if the action should be prevented.\n   */\n  function shouldPrevent( backwards: boolean ): boolean {\n    return ! options.releaseWheel\n      || Splide.state.is( MOVING )\n      || Components.Controller.getAdjacent( backwards ) !== -1;\n  }\n\n  return {\n    mount,\n  };\n}\n","import { ARIA_ATOMIC, ARIA_BUSY, ARIA_LIVE } from '../../constants/attributes';\nimport { CLASS_SR } from '../../constants/classes';\nimport { EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_MOVED, EVENT_SCROLLED } from '../../constants/events';\nimport { EventInterface, RequestInterval } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { append, apply, create, remove, removeAttribute, setAttribute } from '../../utils';\n\n\n/**\n * The interface for the Live component.\n *\n * @since 4.0.0\n */\nexport interface LiveComponent extends BaseComponent {\n  disable( disabled: boolean ): void;\n}\n\n/**\n * Delay in milliseconds before removing the SR field for Windows Narrator.\n */\nconst SR_REMOVAL_DELAY = 90;\n\n/**\n * The component for implementing Live Region to the slider.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\n *\n * @since 4.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Live component object.\n */\nexport function Live( Splide: Splide, Components: Components, options: Options ): LiveComponent {\n  const { on } = EventInterface( Splide );\n  const { track } = Components.Elements;\n\n  /**\n   * Indicates whether the live region is enabled or not.\n   */\n  const enabled = options.live && ! options.isNavigation;\n\n  /**\n   * The span element for the SR only text.\n   */\n  const sr = create( 'span', CLASS_SR );\n\n  /**\n   * Holds the RequestInterval instance.\n   */\n  const interval = RequestInterval( SR_REMOVAL_DELAY, apply( toggle, false ) );\n\n  /**\n   * Called when the component is mounted.\n   * - JAWS needs `aria-atomic` to make the `aria-busy` work.\n   * - Immediately removing the SR makes Windows Narrator silent, hence requires the delay around 50ms.\n   */\n  function mount(): void {\n    if ( enabled ) {\n      disable( ! Components.Autoplay.isPaused() );\n      setAttribute( track, ARIA_ATOMIC, true );\n      sr.textContent = '…';\n\n      on( EVENT_AUTOPLAY_PLAY, apply( disable, true ) );\n      on( EVENT_AUTOPLAY_PAUSE, apply( disable, false ) );\n      on( [ EVENT_MOVED, EVENT_SCROLLED ], apply( toggle, true ) );\n    }\n  }\n\n  /**\n   * Toggles the SR field and `aria-busy`.\n   *\n   * @param active - Determines whether to activate the field or not.\n   */\n  function toggle( active: boolean ): void {\n    setAttribute( track, ARIA_BUSY, active );\n\n    if ( active ) {\n      append( track, sr );\n      interval.start();\n    } else {\n      remove( sr );\n      interval.cancel();\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    removeAttribute( track, [ ARIA_LIVE, ARIA_ATOMIC, ARIA_BUSY ] );\n    remove( sr );\n  }\n\n  /**\n   * Disables/enables the live region.\n   * Does nothing when the `live` option is not enabled.\n   *\n   * @param disabled - `true` to disable the live region or `false` to enable it again.\n   */\n  function disable( disabled: boolean ): void {\n    if ( enabled ) {\n      setAttribute( track, ARIA_LIVE, disabled ? 'off' : 'polite' );\n    }\n  }\n\n  return {\n    mount,\n    disable,\n    destroy,\n  };\n}","import { Options } from '../types';\nimport { CLASSES } from './classes';\nimport { I18N } from './i18n';\n\n\n/**\n * The collection of default options.\n * Note that this collection does not contain all options.\n *\n * @since 3.0.0\n */\nexport const DEFAULTS: Options = {\n  type              : 'slide',\n  role              : 'region',\n  speed             : 400,\n  perPage           : 1,\n  cloneStatus       : true,\n  arrows            : true,\n  pagination        : true,\n  paginationKeyboard: true,\n  interval          : 5000,\n  pauseOnHover      : true,\n  pauseOnFocus      : true,\n  resetProgress     : true,\n  easing            : 'cubic-bezier(0.25, 1, 0.5, 1)',\n  drag              : true,\n  direction         : 'ltr',\n  trimSpace         : true,\n  focusableNodes    : 'a, button, textarea, input, select, iframe',\n  live              : true,\n  classes           : CLASSES,\n  i18n              : I18N,\n  reducedMotion: {\n    speed      : 0,\n    rewindSpeed: 0,\n    autoplay   : 'pause',\n  },\n};","/**\n * The collection of i18n strings.\n *\n * @since 3.0.0\n */\nexport const I18N = {\n  prev      : 'Previous slide',\n  next      : 'Next slide',\n  first     : 'Go to first slide',\n  last      : 'Go to last slide',\n  slideX    : 'Go to slide %s',\n  pageX     : 'Go to page %s',\n  play      : 'Start autoplay',\n  pause     : 'Pause autoplay',\n  carousel  : 'carousel',\n  slide     : 'slide',\n  select    : 'Select a slide to show',\n  slideLabel: '%s of %s', // [ slide number ] / [ slide size ]\n};\n","import { EVENT_MOUNTED, EVENT_REFRESH } from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { Components, Options, TransitionComponent } from '../../types';\nimport { nextTick, noop } from '../../utils';\n\n\n/**\n * The component for the fade transition.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Transition component object.\n */\nexport function Fade( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\n  const { Slides } = Components;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    EventInterface( Splide ).on( [ EVENT_MOUNTED, EVENT_REFRESH ], init );\n  }\n\n  /**\n   * Initializes the component.\n   * Offsets all slides for stacking them onto the head of the list.\n   * The `nextTick` disables the initial fade transition of the first slide.\n   */\n  function init(): void {\n    Slides.forEach( Slide => {\n      Slide.style( 'transform', `translateX(-${ 100 * Slide.index }%)` );\n    } );\n  }\n\n  /**\n   * Starts the transition.\n   *\n   * @param index - A slide index to be active.\n   * @param done  - The callback function that must be called after the transition ends.\n   */\n  function start( index: number, done: () => void ): void {\n    Slides.style( 'transition', `opacity ${ options.speed }ms ${ options.easing }` );\n    nextTick( done );\n  }\n\n  return {\n    mount,\n    start,\n    cancel: noop,\n  };\n}\n","import { SLIDE } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { Components, Options, TransitionComponent } from '../../types';\nimport { abs, apply, style } from '../../utils';\n\n\n/**\n * The component for the slide transition.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Transition component object.\n */\nexport function Slide( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\n  const { Move, Controller, Scroll } = Components;\n  const { list } = Components.Elements;\n  const transition = apply( style, list, 'transition' );\n\n  /**\n   * Holds the `done` callback function.\n   */\n  let endCallback: () => void;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    EventInterface( Splide ).bind( list, 'transitionend', e => {\n      if ( e.target === list && endCallback ) {\n        cancel();\n        endCallback();\n      }\n    } );\n  }\n\n  /**\n   * Starts the transition.\n   * The Move component calls this method just before the slider moves.\n   *\n   * @param index - A destination index.\n   * @param done  - The callback function that must be called after the transition ends.\n   */\n  function start( index: number, done: () => void ): void {\n    const destination = Move.toPosition( index, true );\n    const position    = Move.getPosition();\n    const speed       = getSpeed( index );\n\n    if ( abs( destination - position ) >= 1 && speed >= 1 ) {\n      if ( options.useScroll ) {\n        Scroll.scroll( destination, speed, false, done );\n      } else {\n        transition( `transform ${ speed }ms ${ options.easing }` );\n        Move.translate( destination, true );\n        endCallback = done;\n      }\n    } else {\n      Move.jump( index );\n      done();\n    }\n  }\n\n  /**\n   * Cancels the transition.\n   */\n  function cancel(): void {\n    transition( '' );\n    Scroll.cancel();\n  }\n\n  /**\n   * Returns the transition speed.\n   *\n   * @param index - A destination index.\n   */\n  function getSpeed( index: number ): number {\n    const { rewindSpeed } = options;\n\n    if ( Splide.is( SLIDE ) && rewindSpeed ) {\n      const prev = Controller.getIndex( true );\n      const end  = Controller.getEnd();\n\n      if ( ( prev === 0 && index >= end ) || ( prev >= end && index === 0 ) ) {\n        return rewindSpeed;\n      }\n    }\n\n    return options.speed;\n  }\n\n  return {\n    mount,\n    start,\n    cancel,\n  };\n}\n","import * as ComponentConstructors from '../../components';\nimport { SlideMatcher } from '../../components/Slides/Slides';\nimport { CLASS_INITIALIZED } from '../../constants/classes';\nimport { DEFAULTS } from '../../constants/defaults';\nimport { EVENT_DESTROY, EVENT_MOUNTED, EVENT_READY, EVENT_REFRESH } from '../../constants/events';\nimport { DATA_ATTRIBUTE } from '../../constants/project';\nimport { CREATED, DESTROYED, IDLE, STATES } from '../../constants/states';\nimport { FADE } from '../../constants/types';\nimport { EventInterface, EventInterfaceObject, State, StateObject } from '../../constructors';\nimport { Fade, Slide } from '../../transitions';\nimport { AnyFunction, ComponentConstructor, Components, EventMap, Options, SyncTarget } from '../../types';\nimport { addClass, assert, assign, empty, forOwn, getAttribute, isString, merge, query, slice } from '../../utils';\nimport { ARIA_LABEL, ARIA_LABELLEDBY } from '../../constants/attributes';\n\n\n/**\n * The frontend class for the Splide slider.\n *\n * @since 3.0.0\n */\nexport class Splide {\n  /**\n   * Changes the default options for all Splide instances.\n   */\n  static defaults: Options = {};\n\n  /**\n   * The collection of state numbers.\n   */\n  static readonly STATES = STATES;\n\n  /**\n   * The root element where the Splide is applied.\n   */\n  readonly root: HTMLElement;\n\n  /**\n   * The EventBusObject object.\n   */\n  readonly event: EventInterfaceObject = EventInterface();\n\n  /**\n   * The collection of all component objects.\n   */\n  readonly Components: Components = {} as Components;\n\n  /**\n   * The StateObject object.\n   */\n  readonly state: StateObject = State( CREATED );\n\n  /**\n   * An array with SyncTarget objects for splide instances to sync with.\n   */\n  readonly splides: SyncTarget[] = [];\n\n  /**\n   * The current options.\n   */\n  private readonly _o: Options = {};\n\n  /**\n   * The collection of all components.\n   */\n  private _C: Components;\n\n  /**\n   * The collection of extensions.\n   */\n  private _E: Record<string, ComponentConstructor> = {};\n\n  /**\n   * The Transition component.\n   */\n  private _T: ComponentConstructor;\n\n  /**\n   * The Splide constructor.\n   *\n   * @param target  - The selector for the target element, or the element itself.\n   * @param options - Optional. An object with options.\n   */\n  constructor( target: string | HTMLElement, options?: Options ) {\n    const root = isString( target ) ? query<HTMLElement>( document, target ) : target;\n    assert( root, `${ root } is invalid.` );\n\n    this.root = root;\n\n    options = merge( {\n      label     : getAttribute( root, ARIA_LABEL ) || '',\n      labelledby: getAttribute( root, ARIA_LABELLEDBY ) || '',\n    }, DEFAULTS, Splide.defaults, options || {} );\n\n    try {\n      merge( options, JSON.parse( getAttribute( root, DATA_ATTRIBUTE ) ) );\n    } catch ( e ) {\n      assert( false, 'Invalid JSON' );\n    }\n\n    this._o = Object.create( merge( {}, options ) );\n  }\n\n  /**\n   * Initializes the instance.\n   *\n   * @param Extensions - Optional. An object with extensions.\n   * @param Transition - Optional. A Transition component.\n   *\n   * @return `this`\n   */\n  mount( Extensions?: Record<string, ComponentConstructor>, Transition?: ComponentConstructor ): this {\n    const { state, Components } = this;\n    assert( state.is( [ CREATED, DESTROYED ] ), 'Already mounted!' );\n\n    state.set( CREATED );\n\n    this._C = Components;\n    this._T = Transition || this._T || ( this.is( FADE ) ? Fade : Slide );\n    this._E = Extensions || this._E;\n\n    const Constructors = assign( {}, ComponentConstructors, this._E, { Transition: this._T } );\n\n    forOwn( Constructors, ( Component, key ) => {\n      const component = Component( this, Components, this._o );\n      Components[ key ] = component;\n      component.setup && component.setup();\n    } );\n\n    forOwn( Components, component => {\n      component.mount && component.mount();\n    } );\n\n    this.emit( EVENT_MOUNTED );\n\n    addClass( this.root, CLASS_INITIALIZED );\n\n    state.set( IDLE );\n    this.emit( EVENT_READY );\n\n    return this;\n  }\n\n  /**\n   * Syncs the slider with the provided one.\n   * This method must be called before the `mount()`.\n   *\n   * @example\n   * ```ts\n   * var primary   = new Splide();\n   * var secondary = new Splide();\n   *\n   * primary.sync( secondary );\n   * primary.mount();\n   * secondary.mount();\n   * ```\n   *\n   * @param splide - A Splide instance to sync with.\n   *\n   * @return `this`\n   */\n  sync( splide: Splide ): this {\n    this.splides.push( { splide } );\n    splide.splides.push( { splide: this, isParent: true } );\n\n    if ( this.state.is( IDLE ) ) {\n      this._C.Sync.remount();\n      splide.Components.Sync.remount();\n    }\n\n    return this;\n  }\n\n  /**\n   * Moves the slider with the following control pattern.\n   *\n   * | Pattern | Description |\n   * |---|---|\n   * | `i` | Goes to the slide `i` |\n   * | `'+${i}'` | Increments the slide index by `i` |\n   * | `'-${i}'` | Decrements the slide index by `i` |\n   * | `'>'` | Goes to the next page |\n   * | `'<'` | Goes to the previous page |\n   * | `>${i}` | Goes to the page `i` |\n   *\n   * In most cases, `'>'` and `'<'` notations are enough to control the slider\n   * because they respect `perPage` and `perMove` options.\n   *\n   * @example\n   * ```ts\n   * var splide = new Splide();\n   *\n   * // Goes to the slide 1:\n   * splide.go( 1 );\n   *\n   * // Increments the index:\n   * splide.go( '+2' );\n   *\n   * // Goes to the next page:\n   * splide.go( '>' );\n   *\n   * // Goes to the page 2:\n   * splide.go( '>2' );\n   * ```\n   *\n   * @param control - A control pattern.\n   *\n   * @return `this`\n   */\n  go( control: number | string ): this {\n    this._C.Controller.go( control );\n    return this;\n  }\n\n  /**\n   * Registers an event handler.\n   *\n   * @example\n   * ```ts\n   * var splide = new Splide();\n   *\n   * // Listens to a single event:\n   * splide.on( 'move', function() {} );\n   *\n   * // Listens to multiple events:\n   * splide.on( 'move resize', function() {} );\n   *\n   * // Appends a namespace:\n   * splide.on( 'move.myNamespace resize.myNamespace', function() {} );\n   * ```\n   *\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to append a namespace.\n   * @param callback - A callback function.\n   *\n   * @return `this`\n   */\n  on<K extends keyof EventMap>( events: K, callback: EventMap[ K ] ): this;\n  on( events: string | string[], callback: AnyFunction ): this;\n  on( events: string | string[], callback: AnyFunction ): this {\n    this.event.on( events, callback );\n    return this;\n  }\n\n  /**\n   * Removes the registered all handlers for the specified event or events.\n   * If you want to only remove a particular handler, use namespace to identify it.\n   *\n   * @example\n   * ```ts\n   * var splide = new Splide();\n   *\n   * // Removes all handlers assigned to \"move\":\n   * splide.off( 'move' );\n   *\n   * // Only removes handlers that belong to the specified namespace:\n   * splide.off( 'move.myNamespace' );\n   * ```\n   *\n   * @param events - An event name or names separated by spaces. Use a dot(.) to append a namespace.\n   *\n   * @return `this`\n   */\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): this {\n    this.event.off( events );\n    return this;\n  }\n\n  /**\n   * Emits an event and triggers registered handlers.\n   *\n   * @param event - An event name to emit.\n   * @param args  - Optional. Any number of arguments to pass to handlers.\n   *\n   * @return `this`\n   */\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): this;\n  emit( event: string, ...args: any[] ): this;\n  emit( event: string ): this {\n    // eslint-disable-next-line prefer-rest-params, prefer-spread\n    this.event.emit( event, ...slice( arguments, 1 ) );\n    return this;\n  }\n\n  /**\n   * Inserts a slide at the specified position.\n   *\n   * @example\n   * ```ts\n   * var splide = new Splide();\n   * splide.mount();\n   *\n   * // Adds the slide by the HTML:\n   * splide.add( '<li></li> );\n   *\n   * // or adds the element:\n   * splide.add( document.createElement( 'li' ) );\n   * ```\n   *\n   * @param slides - A slide element, an HTML string that represents a slide, or an array with them.\n   * @param index  - Optional. An index to insert a slide at.\n   *\n   * @return `this`\n   */\n  add( slides: string | HTMLElement | Array<string | HTMLElement>, index?: number ): this {\n    this._C.Slides.add( slides, index );\n    return this;\n  }\n\n  /**\n   * Removes slides that match the matcher\n   * that can be an index, an array with indices, a selector, or an iteratee function.\n   *\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\n   */\n  remove( matcher: SlideMatcher ): this {\n    this._C.Slides.remove( matcher );\n    return this;\n  }\n\n  /**\n   * Checks the slider type.\n   *\n   * @param type - A type to test.\n   *\n   * @return `true` if the type matches the current one, or otherwise `false`.\n   */\n  is( type: string ): boolean {\n    return this._o.type === type;\n  }\n\n  /**\n   * Refreshes the slider.\n   *\n   * @return `this`\n   */\n  refresh(): this {\n    this.emit( EVENT_REFRESH );\n    return this;\n  }\n\n  /**\n   * Destroys the slider.\n   *\n   * @param completely - Optional. If `true`, Splide will not remount the slider by breakpoints.\n   *\n   * @return `this`\n   */\n  destroy( completely = true ): this {\n    const { event, state } = this;\n\n    if ( state.is( CREATED ) ) {\n      // Postpones destruction requested before the slider becomes ready.\n      EventInterface( this ).on( EVENT_READY, this.destroy.bind( this, completely ) );\n    } else {\n      forOwn( this._C, component => {\n        component.destroy && component.destroy( completely );\n      }, true );\n\n      event.emit( EVENT_DESTROY );\n      event.destroy();\n      completely && empty( this.splides );\n      state.set( DESTROYED );\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns options.\n   *\n   * @return An object with the latest options.\n   */\n  get options(): Options {\n    return this._o;\n  }\n\n  /**\n   * Merges options to the current options and emits `updated` event.\n   *\n   * @param options - An object with new options.\n   */\n  set options( options: Options ) {\n    this._C.Media.set( options, true, true );\n  }\n\n  /**\n   * Returns the number of slides without clones.\n   *\n   * @return The number of slides.\n   */\n  get length(): number {\n    return this._C.Slides.getLength( true );\n  }\n\n  /**\n   * Returns the active slide index.\n   *\n   * @return The active slide index.\n   */\n  get index(): number {\n    return this._C.Controller.getIndex();\n  }\n}\n"],"names":["MEDIA_PREFERS_REDUCED_MOTION","MOVING","SCROLLING","STATES","CREATED","MOUNTED","IDLE","DRAGGING","DESTROYED","empty","array","length","slice","arrayLike","start","end","Array","prototype","call","apply","func","bind","arguments","noop","nextTick","setTimeout","raf","requestAnimationFrame","typeOf","type","subject","isObject","isNull","isArray","isFunction","isString","isUndefined","isHTMLElement","ownerDocument","defaultView","window","HTMLElement","e","toArray","value","forEach","values","iteratee","includes","indexOf","push","items","toggleClass","elm","classes","add","name","classList","addClass","split","append","parent","children","appendChild","before","nodes","ref","node","parentNode","insertBefore","matches","selector","filter","child","firstElementChild","ownKeys","Object","keys","forOwn","object","right","reverse","key","assign","source","merge","omit","removeAttribute","elms","attrs","attr","setAttribute","String","create","tag","document","createElement","style","prop","getComputedStyle","display","focus","preventScroll","getAttribute","hasClass","className","contains","rect","target","getBoundingClientRect","remove","removeChild","parseHtml","html","DOMParser","parseFromString","body","prevent","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","querySelectorAll","removeClass","timeOf","timeStamp","unit","PROJECT_CODE","DATA_ATTRIBUTE","assert","condition","message","Error","min","Math","max","floor","ceil","abs","approximatelyEqual","x","y","epsilon","between","number","exclusive","minimum","maximum","clamp","sign","format","string","replacements","replacement","replace","pad","ids","EventBinder","listeners","forEachEvent","targets","events","eventNS","fragment","callback","options","event","namespace","isEventTarget","remover","removeEventListener","addEventListener","unbind","listener","dispatch","detail","CustomEvent","bubbles","createEvent","initCustomEvent","dispatchEvent","destroy","data","EVENT_MOUNTED","EVENT_MOVE","EVENT_MOVED","EVENT_CLICK","EVENT_ACTIVE","EVENT_INACTIVE","EVENT_VISIBLE","EVENT_HIDDEN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_NAVIGATION_MOUNTED","EVENT_AUTOPLAY_PLAY","EVENT_AUTOPLAY_PAUSE","EVENT_LAZYLOAD_LOADED","EVENT_SLIDE_KEYDOWN","EVENT_SHIFTED","EventInterface","Splide","bus","createDocumentFragment","binder","on","join","off","emit","RequestInterval","interval","onInterval","onUpdate","limit","startTime","id","now","Date","rate","paused","count","update","pause","cancel","cancelAnimationFrame","resume","rewind","set","time","isPaused","State","initialState","state","is","states","ARROW","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","TTB","ORIENTATION_MAP","width","left","X","Y","ArrowLeft","ArrowRight","ROLE","TAB_INDEX","ARIA_PREFIX","ARIA_CONTROLS","ARIA_CURRENT","ARIA_SELECTED","ARIA_LABEL","ARIA_LABELLEDBY","ARIA_HIDDEN","ARIA_ORIENTATION","ARIA_ROLEDESCRIPTION","ARIA_LIVE","ARIA_BUSY","ARIA_ATOMIC","ALL_ATTRIBUTES","CLASS_PREFIX","CLASS_ROOT","CLASS_TRACK","CLASS_LIST","CLASS_SLIDE","CLASS_CLONE","CLASS_CONTAINER","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_PAGINATION_PAGE","CLASS_PROGRESS_BAR","CLASS_TOGGLE","CLASS_SR","CLASS_ACTIVE","STATUS_CLASS_PREFIX","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","CLASS_FOCUS_IN","CLASS_OVERFLOW","STATUS_CLASSES","POINTER_DOWN_EVENTS","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","SLIDE","LOOP","FADE","Slide","index","slideIndex","slide","destroyed","Components","root","isNavigation","updateOnMove","i18n","pagination","slideFocus","resolve","Direction","styles","label","isClone","container","initNavigation","controls","splides","map","splide","Slides","getAt","slideX","onMove","curr","hidden","active","isActive","self","visible","trackRect","Elements","track","slideRect","focusableNodes","activeElement","cloneStatus","mount","slideLabel","useContainer","_style","isWithin","from","distance","diff","INTERVAL_DATA_ATTRIBUTE","SCROLL_LISTENER_OPTIONS","passive","capture","NORMALIZATION_MAP","Spacebar","Right","Left","Up","Down","normalizeKey","KEYBOARD_EVENT","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","TRIGGER_KEYS","breakpoints","reducedMotion","queries","completely","register","queryList","matchMedia","direction","merged","reduce","entry","refresh","opts","base","notify","getPrototypeOf","setup","isMin","mediaQuery","sort","n","m","enable","axisOnly","match","offset","toLowerCase","charAt","toUpperCase","orient","list","isUsingKey","elements","slides","rootClasses","trackClasses","find","arrows","prev","next","bar","toggle","prefix","role","tagName","carousel","concat","getClasses","labelledby","closest","nodeType","parentElement","drag","init","Slide1","Slide2","get","excludeClones","matcher","getIn","page","Controller","toIndex","hasFocus","perPage","forEachItem","images","img","removeNode","getLength","isEnough","vertical","rootRect","overflow","styleSlides","cssPadding","resize","force","newRect","height","cssHeight","gap","autoWidth","fixedWidth","cssSlideSize","fixedHeight","autoHeight","isOverflow","padding","heightRatio","listSize","slideSize","withoutGap","getGap","totalSize","sliderSize","parseFloat","duration","getPadding","cloneCount","clones","remount","observe","computeCloneCount","generate","isHead","clone","cloneNode","Layout","fixedSize","Transition","reposition","isBusy","Scroll","jump","translate","toPosition","position","preventLoop","destination","exceededMax","getEnd","shift","backwards","excess","getLimit","size","getPosition","minDistance","Infinity","i","trimming","trimSpace","move","dest","shifted","exceededLimit","exceededMin","endIndex","slideCount","perMove","Move","omitEnd","isLoop","isSlide","getNext","getAdjacent","getPrev","currIndex","prevIndex","onResized","computeDestIndex","loop","snapPage","toPage","setIndex","waitForTransition","go","control","allowSameIndex","indicator","_ref","scroll","snap","getIndex","toDest","created","wrapperClasses","placeholder","wrapper","enabled","createArrow","arrow","arrowPath","nextIndex","prevLabel","nextLabel","last","first","disabled","hovered","focused","autoplay","stopped","play","resetProgress","stop","autoToggle","pauseOnHover","pauseOnFocus","cover","src","friction","onScrolled","noConstrain","noDistance","clear","onEnd","to","t","easingFunc","pow","basePosition","baseEvent","prevBaseEvent","isFree","dragging","clickPrevented","Media","exceeded","disable","onPointerDown","isTouch","noDrag","isTouchEvent","button","onPointerMove","onPointerUp","save","thresholds","isObj","mouse","cancelable","diffCoord","expired","diffTime","hasExceeded","dragMinThreshold","touch","velocity","flickPower","flickMaxPages","rewindByDrag","onClick","orthogonal","coordOf","getBaseEvent","changedTouches","TouchEvent","isDragging","keyboard","onKeydown","_disabled","isSequential","lazyLoad","entries","srcset","spinner","loadNext","check","preloadPages","load","onLoad","paginationClasses","dir","getDirection","nextPage","item","paginationDirection","select","li","class","text","pageX","paginationKeyboard","isParent","sync","lastTime","onWheel","deltaY","sleep","wheelMinThreshold","wheelSleep","shouldPrevent","freeWheel","_min","isTrackpad","wheelDeltaY","deltaMode","deltaX","releaseWheel","freeScroll","Components2","wheel","live","sr","Autoplay","textContent","DEFAULTS","speed","easing","rewindSpeed","Fade","done","endCallback","transition","useScroll","this","_o","_E","_Splide","defaults","JSON","parse","Extensions","_this","_C","_T","ComponentConstructors","Component","component","Sync","_this$event"],"mappings":"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"}